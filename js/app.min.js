"use strict";angular.module("videoHub",["ngCookies","ngRoute","ngAnimate","ngMessages","restangular","highcharts-ng","BettyCropper","ui.bootstrap"]).config(function($locationProvider,$httpProvider,$routeProvider,$sceDelegateProvider,RestangularProvider){$sceDelegateProvider.resourceUrlWhitelist(["self","http://assets.onionstatic.com/videoads/*","http://onionwebtech.s3.amazonaws.com/videoads/**","http://onionwebtech.s3.amazonaws.com/videoads-test/**"]),$locationProvider.html5Mode(!0),RestangularProvider.setBaseUrl("/api/v0/"),RestangularProvider.addResponseInterceptor(function(data,operation){if("getList"===operation){var results=data.results;return results&&(results.meta={count:data.count,prev:data.prev,next:data.next}),results}return data}),$routeProvider.when("/cms",{templateUrl:"components/videolistpage/videolist.html",controller:"VideoListController",reloadOnSearch:!1}).when("/cms/series",{templateUrl:"components/serieslistpage/serieslist.html",controller:"SeriesListController",reloadOnSearch:!1}).when("/cms/channels",{templateUrl:"components/channellistpage/channellist.html",controller:"ChannelListController",reloadOnSearch:!1}).when("/cms/login",{templateUrl:"components/login/login.html",controller:"LoginController"}).when("/cms/edit/:videoId/",{templateUrl:"components/videodetail/videoDetail.html",controller:"VideoDetailController"}).when("/cms/editchannel/:channelId",{templateUrl:"components/channel/channeldetail.html",controller:"ChannelDetailController"}).when("/cms/newchannel/",{templateUrl:"components/channel/channeldetail.html",controller:"ChannelDetailController"}).when("/cms/editseries/:seriesId",{templateUrl:"components/seriesdetail/seriesdetail.html",controller:"SeriesDetailController"}).when("/cms/newseries/",{templateUrl:"components/seriesdetail/seriesdetail.html",controller:"SeriesDetailController"}).when("/cms/new/",{templateUrl:"components/videodetail/videodetail.html",controller:"VideoDetailController"}).otherwise({redirectTo:"/cms"})}).constant("ValidQueryParamsForListPage",["q","page","f","page_size","order_by"]),angular.module("videoHub").constant("ZencoderConstants",{UPLOAD_TO_S3_PROGRESS_MESSAGE:"Uploading X% complete",UPLOAD_TO_S3_UPLOAD_BEGINNING_MESSAGE:"Uploading...",UPLOAD_TO_S3_UPLOAD_COMPLETE_MESSAGE:"Upload Complete. Begin Encoding.",UPLOAD_TO_S3_UPLOAD_FAILED_MESSAGE:"Upload Failed",ENCODE_FAILED_MESSAGE:"Encoding has failed.",ENCODE_PROGRESS_MESSAGE:"Encoding: X%"}).service("Zencoder",function($http,$q,$interval,ZencoderConstants){function uploadToS3(file,videoObject){var s3Config=videoObject.encoding_payload,s3deferred=$q.defer(),formData=new FormData;formData.append("key",s3Config.key),formData.append("AWSAccessKeyId",s3Config.AWSAccessKeyId),formData.append("acl",s3Config.acl),formData.append("success_action_status",s3Config.success_action_status),formData.append("policy",s3Config.policy),formData.append("signature",s3Config.signature),formData.append("file",file);var xhr=new XMLHttpRequest;return xhr.open("POST",s3Config.upload_endpoint),xhr.upload.onprogress=function(e){s3deferred.notify(e.lengthComputable?ZencoderConstants.UPLOAD_TO_S3_PROGRESS_MESSAGE.replace("X",Math.round(e.loaded/e.total*100)):ZencoderConstants.UPLOAD_TO_S3_UPLOAD_BEGINNING_MESSAGE)},xhr.onload=function(){s3deferred.notify(ZencoderConstants.UPLOAD_TO_S3_UPLOAD_COMPLETE_MESSAGE),s3deferred.resolve(videoObject)},xhr.addEventListener("error",function(){s3deferred.reject(ZencoderConstants.UPLOAD_TO_S3_UPLOAD_FAILED_MESSAGE)}),xhr.send(formData),s3deferred.promise}function encode(videoObject){var encodeDeferred=$q.defer();return videoObject.doPost("encode").success(function(response){var zencoderProgressEndpoint=response.json,progressInterval=$interval(function(){$http({url:zencoderProgressEndpoint,method:"GET",ignoreAuthorizationHeader:!0}).then(function(response){"finished"===response.data.state?(encodeDeferred.resolve(videoObject),$interval.cancel(progressInterval)):"failed"===response.data.state?(encodeDeferred.reject(ZencoderConstants.ENCODE_FAILED_MESSAGE),$interval.cancel(progressInterval)):_.isUndefined(response.data.progress)||encodeDeferred.notify(ZencoderConstants.ENCODE_PROGRESS_MESSAGE.replace("X",Math.round(response.data.progress)))})},1e3)}).error(function(data){encodeDeferred.reject(data)}),encodeDeferred.promise}this.uploadToS3AndEncode=function(config){var uploadToS3AndEncodeDeferred=$q.defer(),file=config.file,videoObject=config.videoObject,successCallback=function(success){uploadToS3AndEncodeDeferred.resolve(success)},errorCallback=function(error){uploadToS3AndEncodeDeferred.reject(error)},notifyCallback=function(notify){uploadToS3AndEncodeDeferred.notify(notify)};return uploadToS3(file,videoObject).then(encode,errorCallback,notifyCallback).then(successCallback,errorCallback,notifyCallback),uploadToS3AndEncodeDeferred.promise}}),angular.module("videoHub").constant("VideoDetailControllerConstants",{SAVED_ALERT_MESSAGE:"Saved",SOMETHING_WENT_WRONG_ALERT_MESSAGE:"Something went wrong with saving the Video. Please call your friendly sysadmin.",PLEASE_FILL_IN_ALL_REQUIRED_FIELDS_ALERT_MESSAGE:"Please fill in all required fields."}).controller("VideoDetailController",function($scope,$routeParams,VideoService,$location,AlertService,VideoDetailControllerConstants){function navigateToNewlyCreatedEditPage(response){displaySaveSuccessfulAlert().then(function(){$location.path("cms/edit/"+response.id+"/")})}function displaySaveSuccessfulAlert(){return AlertService.success(VideoDetailControllerConstants.SAVED_ALERT_MESSAGE,!0)}function displaySomethingWentWrongAlert(){AlertService.error(VideoDetailControllerConstants.SOMETHING_WENT_WRONG_ALERT_MESSAGE,!0)}$scope.video={},$scope.getVideo=function(){return _.isUndefined($routeParams.videoId)?void($scope.video={}):VideoService.one($routeParams.videoId).get().then(function(data){$scope.video=data},function(data){console.log(data)})},$scope.saveVideo=function(){$scope.videoDetailForm.$valid?$routeParams.videoId?$scope.video.save().then(displaySaveSuccessfulAlert,displaySomethingWentWrongAlert):VideoService.post($scope.video).then(navigateToNewlyCreatedEditPage,displaySomethingWentWrongAlert):AlertService.error(VideoDetailControllerConstants.PLEASE_FILL_IN_ALL_REQUIRED_FIELDS_ALERT_MESSAGE,!0)},$scope.getVideo()}),angular.module("videoHub").constant("VideoFieldConstants",{FILE_TOO_LARGE_ERROR_MESSAGE:"Upload file cannot be larger than 1024MB.",MUST_UPLOAD_FILES_ERROR_MESSAGE:"You must upload a video file.",PLEASE_SELECT_A_FILE_ERROR_MESSAGE:"Please select a file.",UPLOAD_COMPLETE_SUCCESS_MESSAGE:"Upload Complete"}).directive("videoField",function(Zencoder,$q){return{templateUrl:"components/videodetail/videofield.html",transclude:!0,controller:function($scope,AlertService,$timeout,VideoFieldConstants,VideoService){function checkIfSourcesHaveLoadedAndRetryIfTheyAreNot(response){_.isEmpty(response.data.sources)?$timeout($scope.fetchNewVideoObject,2e3):($scope.video=response.data,AlertService.clear())}$scope.uploadVideo=function(){var fileField=$("#"+$scope.video.id+"-file-field");fileField.unbind("change"),fileField.bind("change",function(event){var file=event.target.files[0];$scope.validateVideoFile(file).then($scope.addVideo).then(Zencoder.uploadToS3AndEncode).then(function(){AlertService.success(VideoFieldConstants.UPLOAD_COMPLETE_SUCCESS_MESSAGE).then($scope.fetchNewVideoObject)},function(error){AlertService.error(error,!0)},function(message){_.isUndefined(message)||AlertService.info(message)})}),fileField.click()},$scope.validateVideoFile=function(file){var validateVideoFileDeferred=$q.defer();return file?file.size>1073741824?validateVideoFileDeferred.reject(VideoFieldConstants.FILE_TOO_LARGE_ERROR_MESSAGE):0!==file.type.indexOf("video/")?validateVideoFileDeferred.reject(VideoFieldConstants.MUST_UPLOAD_FILES_ERROR_MESSAGE):validateVideoFileDeferred.resolve(file):validateVideoFileDeferred.reject(VideoFieldConstants.PLEASE_SELECT_A_FILE_ERROR_MESSAGE),validateVideoFileDeferred.promise},$scope.addVideo=function(file){var addVideoDeferred=$q.defer();return $scope.video.save().then(function(){var uploadToS3Arguments={file:file,videoObject:$scope.video};addVideoDeferred.resolve(uploadToS3Arguments)}),addVideoDeferred.promise},$scope.fetchNewVideoObject=function(){VideoService.one($scope.video.id).get().then(checkIfSourcesHaveLoadedAndRetryIfTheyAreNot)}}}}),angular.module("videoHub").directive("videoPlayerModal",[function(){return{replace:!1,restrict:"E",transclude:!0,templateUrl:"shared/videoplayermodal/videoplayermodal.html",link:function(scope,element){var currentVideo=element.find("video")[0];scope.player=videojs(currentVideo,{controls:!0,autoplay:!1,width:"auto",height:"auto"}),element.find(".modal").on("hidden.bs.modal",function(){scope.player.pause()}),scope.$on("$destroy",function(){scope.player.dispose()})}}}]),angular.module("videoHub").controller("VideoListController",function($scope,$location,$routeParams,$rootScope,ListService){function updateList(){ListService.updateList().then(function(){$scope.list=ListService.data.list,$scope.totalItems=ListService.data.totalItems})}$scope.orderBy=$location.search().order_by,$scope.filter=$location.search().f,$scope.search=$location.search().q,ListService.setService("VideoService"),updateList(),$scope.setFilterAndUpdateList=function(newFilterValue){$scope.filter=newFilterValue,$location.search("f",newFilterValue),updateList()},$scope.changeToEditPage=function(id){$location.path("cms/edit/"+id+"/")},$scope.setOrderAndUpdateList=function(newOrderValue){$scope.orderBy=$scope.orderBy&&$scope.orderBy.indexOf(newOrderValue)>-1&&-1===$scope.orderBy.indexOf("-")?"-"+newOrderValue:newOrderValue,$location.search("order_by",$scope.orderBy),updateList()},$scope.clearSearchAndUpdateList=function(){$scope.search="",$location.search("q",null),updateList()},$scope.pageChanged=function(newPageNumber){$location.search("page",newPageNumber),updateList()},$scope.setSearchAndUpdatePage=function(){$location.search("q",$scope.search),updateList()},$scope.new=function(){$location.path("cms/new/")}}),angular.module("videoHub").controller("LoginController",function($scope,authService,$location,$rootScope){$rootScope.showSearchBar=!1,$rootScope.showSaveButton=!1,$scope.username="",$scope.password="",$scope.submitLogin=function(){authService.login($scope.username,$scope.password)}}),angular.module("videoHub").directive("season",function(){return{templateUrl:"components/season/season.html",scope:{season:"="}}}),angular.module("videoHub").factory("SeasonService",function(Restangular){return Restangular.service("seasons")}),angular.module("videoHub").factory("ChannelService",function(Restangular){return Restangular.service("channels")}),angular.module("videoHub").constant("ChannelDetailControllerConstants",{SAVED_ALERT_MESSAGE:"Saved",SOMETHING_WENT_WRONG_ALERT_MESSAGE:"Something went wrong with saving the Channel. Please call your friendly sysadmin.",PLEASE_FILL_IN_ALL_REQUIRED_FIELDS_ALERT_MESSAGE:"Please fill in all required fields."}).controller("ChannelDetailController",function($scope,$routeParams,ChannelService,$location,AlertService,ChannelDetailControllerConstants){function navigateToNewlyCreatedEditPage(response){displaySaveSuccessfulAlert().then(function(){$location.path("cms/edit/"+response.id+"/")})}function displaySaveSuccessfulAlert(){return AlertService.success(ChannelDetailControllerConstants.SAVED_ALERT_MESSAGE,!0)}function displaySomethingWentWrongAlert(){AlertService.error(ChannelDetailControllerConstants.SOMETHING_WENT_WRONG_ALERT_MESSAGE,!0)}$scope.channel={},$scope.getChannel=function(){return _.isUndefined($routeParams.channelId)?void($scope.channel={}):ChannelService.one($routeParams.channelId).get().then(function(data){$scope.channel=data},function(data){console.log(data)})},$scope.saveChannel=function(){$scope.channelDetailForm.$valid?$routeParams.channelId?$scope.channel.save().then(displaySaveSuccessfulAlert,displaySomethingWentWrongAlert):ChannelService.post($scope.channel).then(navigateToNewlyCreatedEditPage,displaySomethingWentWrongAlert):AlertService.error(ChannelDetailControllerConstants.PLEASE_FILL_IN_ALL_REQUIRED_FIELDS_ALERT_MESSAGE,!0)},$scope.getChannel()}),angular.module("videoHub").controller("ChannelListController",function($scope,$location,$routeParams,$rootScope,ListService){function updateList(){ListService.updateList().then(function(){$scope.list=ListService.data.list,$scope.totalItems=ListService.data.totalItems})}$scope.orderBy=$location.search().order_by,$scope.search=$location.search().q,ListService.setService("ChannelService"),updateList(),$scope.changeToEditPage=function(id){$location.path("cms/editchannel/"+id+"/")},$scope.setOrderAndUpdateList=function(newOrderValue){$scope.orderBy=$scope.orderBy&&$scope.orderBy.indexOf(newOrderValue)>-1&&-1===$scope.orderBy.indexOf("-")?"-"+newOrderValue:newOrderValue,$location.search("order_by",$scope.orderBy),updateList()},$scope.clearSearchAndUpdateList=function(){$scope.search="",$location.search("q",null),updateList()},$scope.pageChanged=function(newPageNumber){$location.search("page",newPageNumber),updateList()},$scope.setSearchAndUpdatePage=function(){$location.search("q",$scope.search),updateList()},$scope.new=function(){$location.path("cms/newchannel/")}}),angular.module("videoHub").controller("SeriesListController",function($scope,$location,$routeParams,$rootScope,ListService){function updateList(){ListService.updateList().then(function(){$scope.list=ListService.data.list,$scope.totalItems=ListService.data.totalItems})}$scope.orderBy=$location.search().order_by,$scope.search=$location.search().q,ListService.setService("SeriesService"),updateList(),$scope.changeToEditPage=function(id){$location.path("cms/editseries/"+id+"/")},$scope.setOrderAndUpdateList=function(newOrderValue){$scope.orderBy=$scope.orderBy&&$scope.orderBy.indexOf(newOrderValue)>-1&&-1===$scope.orderBy.indexOf("-")?"-"+newOrderValue:newOrderValue,$location.search("order_by",$scope.orderBy),updateList()},$scope.clearSearchAndUpdateList=function(){$scope.search="",$location.search("q",null),updateList()},$scope.pageChanged=function(newPageNumber){$location.search("page",newPageNumber),updateList()},$scope.setSearchAndUpdatePage=function(){$location.search("q",$scope.search),updateList()},$scope.new=function(){$location.path("cms/newseries/")}}),angular.module("videoHub").factory("SeriesService",function(Restangular){return Restangular.service("series")}),angular.module("videoHub").constant("SeriesDetailControllerConstants",{SAVED_ALERT_MESSAGE:"Saved",SOMETHING_WENT_WRONG_ALERT_MESSAGE:"Something went wrong with saving the Series. Please call your friendly sysadmin.",PLEASE_FILL_IN_ALL_REQUIRED_FIELDS_ALERT_MESSAGE:"Please fill in all required fields."}).controller("SeriesDetailController",function($scope,$routeParams,SeriesService,$location,AlertService,SeriesDetailControllerConstants){function navigateToNewlyCreatedEditPage(response){displaySaveSuccessfulAlert().then(function(){$location.path("cms/edit/"+response.id+"/")})}function displaySaveSuccessfulAlert(){return AlertService.success(SeriesDetailControllerConstants.SAVED_ALERT_MESSAGE,!0)}function displaySomethingWentWrongAlert(){AlertService.error(SeriesDetailControllerConstants.SOMETHING_WENT_WRONG_ALERT_MESSAGE,!0)}$scope.series={},$scope.getSeries=function(){return _.isUndefined($routeParams.seriesId)?void($scope.series={}):SeriesService.one($routeParams.seriesId).get().then(function(data){$scope.series=data},function(data){console.log(data)})},$scope.saveSeries=function(){$scope.seriesDetailForm.$valid?$routeParams.seriesId?$scope.series.save().then(displaySaveSuccessfulAlert,displaySomethingWentWrongAlert):SeriesService.post($scope.series).then(navigateToNewlyCreatedEditPage,displaySomethingWentWrongAlert):AlertService.error(SeriesDetailControllerConstants.PLEASE_FILL_IN_ALL_REQUIRED_FIELDS_ALERT_MESSAGE,!0)},$scope.getSeries()}),angular.module("videoHub").directive("sponsor",function(){return{templateUrl:"components/sponsor/sponsor.html",scope:{sponsor:"="}}}),angular.module("videoHub").factory("SponsorService",function(Restangular){return Restangular.service("sponsor")}),angular.module("videoHub").directive("alertbar",function(){return{templateUrl:"shared/alert/alert-directive.html",restrict:"E",controller:function($scope,AlertService){$scope.alertStatus=AlertService.alertStatus}}}),angular.module("videoHub").constant("AlertServiceConstants",{TIME_TO_WAIT_BEFORE_CLEARING:2e3}).service("AlertService",function($timeout,$q,AlertServiceConstants){this.alertStatus={},this.clear=function(clearAfterDisplayingMessageFlag){_.isUndefined(clearAfterDisplayingMessageFlag)&&this.setAlertStatusElementsToFalse();var alertDeferred=$q.defer(),alertService=this;return clearAfterDisplayingMessageFlag?$timeout(function(){alertService.setAlertStatusElementsToFalse(),alertDeferred.resolve()},AlertServiceConstants.TIME_TO_WAIT_BEFORE_CLEARING):alertDeferred.resolve(),alertDeferred.promise},this.setAlertStatusElementsToFalse=function(){this.alertStatus.error=!1,this.alertStatus.info=!1,this.alertStatus.success=!1},this.success=function(message,clearAfterDisplayingMessageFlag){return this.clear(),this.alertStatus.success=message,this.clear(clearAfterDisplayingMessageFlag)},this.error=function(message,clearAfterDisplayingMessageFlag){return this.clear(),this.alertStatus.error=message,this.clear(clearAfterDisplayingMessageFlag)},this.info=function(message,clearAfterDisplayingMessageFlag){return this.clear(),this.alertStatus.info=message,this.clear(clearAfterDisplayingMessageFlag)}}),angular.module("videoHub").factory("authInterceptor",["$rootScope","$q","$window","$location","$injector","httpRequestBuffer",function($rootScope,$q,$window,$location,$injector,httpRequestBuffer){return{request:function(config){return config.headers=config.headers||{},$window.sessionStorage.token&&(config.ignoreAuthorizationHeader||(config.headers.Authorization="JWT "+$window.sessionStorage.token)),config},responseError:function(response){if(response.config){var ignoreAuthModule=response.config.ignoreAuthModule||response.config.headers.ignoreAuthModule;if(!ignoreAuthModule&&403===response.status){var deferred=$q.defer();httpRequestBuffer.append(response.config,deferred);var authService=$injector.get("authService");authService.refreshToken()}}return $q.reject(response)}}}]).config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push("authInterceptor")}]).service("authService",["$window","$http","$rootScope","$location","httpRequestBuffer",function($window,$http,$rootScope,$location,httpRequestBuffer){var _login=function(username,password){return $http.post("/api-token-auth/",{username:username,password:password}).then(function(response){$window.sessionStorage.token=response.data.token,$location.path("cms/")})},_refreshToken=function(){return $http.post("/api-token-refresh/",{token:$window.sessionStorage.token},{ignoreAuthModule:!0}).success(function(response){$window.sessionStorage.token=response.token,httpRequestBuffer.retryAll()}).error(function(){httpRequestBuffer.rejectAll(),$location.path("cms/login")})};return{login:_login,refreshToken:_refreshToken}}]).factory("httpRequestBuffer",["$injector",function($injector){function _retryHttpRequest(config,deferred){function successCallback(response){deferred.resolve(response)}function errorCallback(response){deferred.reject(response)}$http=$http||$injector.get("$http"),config.headers.ignoreAuthModule=!0,$http(config).then(successCallback,errorCallback)}var $http,buffer=[];return{append:function(config,deferred){buffer.push({config:config,deferred:deferred})},rejectAll:function(reason){reason&&_.each(buffer,function(request){request.deferred.reject(reason)}),buffer=[]},retryAll:function(){_.each(buffer,function(request){_retryHttpRequest(request.config,request.deferred)}),buffer=[]}}}]),function(){var module,moduleName="videoHub",templatePath="shared/pagination/dirPagination.tpl.html";try{module=angular.module(moduleName)}catch(err){module=angular.module(moduleName,[])}module.directive("dirPaginate",["$compile","$parse","$timeout","paginationService",function($compile,$parse,$timeout,paginationService){return{terminal:!0,multiElement:!0,priority:5e3,compile:function(tElement,tAttrs){tElement[0].hasAttribute("dir-paginate-start")||tElement[0].hasAttribute("data-dir-paginate-start")?(tAttrs.$set("ngRepeatStart",tAttrs.dirPaginate),tElement.eq(tElement.length-1).attr("ng-repeat-end",!0)):tAttrs.$set("ngRepeat",tAttrs.dirPaginate);var expression=tAttrs.dirPaginate,match=expression.match(/^\s*([\s\S]+?)\s+in\s+([\s\S]+?)(?:\s+track\s+by\s+([\s\S]+?))?\s*$/),filterPattern=/\|\s*itemsPerPage\s*:[^|]*/;if(null===match[2].match(filterPattern))throw"pagination directive: the 'itemsPerPage' filter must be set.";var itemsPerPageFilterRemoved=match[2].replace(filterPattern,""),collectionGetter=$parse(itemsPerPageFilterRemoved),paginationId=tAttrs.paginationId||"__default";return paginationService.registerInstance(paginationId),function(scope,element,attrs){var currentPageGetter,compiled=$compile(element,!1,5e3);if(attrs.currentPage)currentPageGetter=$parse(attrs.currentPage);else{var defaultCurrentPage=paginationId+"__currentPage";scope[defaultCurrentPage]=1,currentPageGetter=$parse(defaultCurrentPage)}paginationService.setCurrentPageParser(paginationId,currentPageGetter,scope),"undefined"!=typeof attrs.totalItems?(paginationService.setAsyncModeTrue(paginationId),scope.$watch(function(){return $parse(attrs.totalItems)(scope)},function(result){result>=0&&paginationService.setCollectionLength(paginationId,result)})):scope.$watchCollection(function(){return collectionGetter(scope)},function(collection){collection&&paginationService.setCollectionLength(paginationId,collection.length)}),compiled(scope)}}}}]),module.directive("dirPaginationControls",["paginationService",function(paginationService){function generatePagesArray(currentPage,collectionLength,rowsPerPage,paginationRange){var position,pages=[],totalPages=Math.ceil(collectionLength/rowsPerPage),halfWay=Math.ceil(paginationRange/2);position=halfWay>=currentPage?"start":currentPage>totalPages-halfWay?"end":"middle";for(var ellipsesNeeded=totalPages>paginationRange,i=1;totalPages>=i&&paginationRange>=i;){var pageNumber=calculatePageNumber(i,currentPage,paginationRange,totalPages),openingEllipsesNeeded=2===i&&("middle"===position||"end"===position),closingEllipsesNeeded=i===paginationRange-1&&("middle"===position||"start"===position);pages.push(ellipsesNeeded&&(openingEllipsesNeeded||closingEllipsesNeeded)?"...":pageNumber),i++}return pages}function calculatePageNumber(i,currentPage,paginationRange,totalPages){var halfWay=Math.ceil(paginationRange/2);return i===paginationRange?totalPages:1===i?i:totalPages>paginationRange?currentPage>totalPages-halfWay?totalPages-paginationRange+i:currentPage>halfWay?currentPage-halfWay+i:i:i}var numberRegex=/^\d+$/;return{restrict:"AE",templateUrl:function(elem,attrs){return attrs.templateUrl||templatePath},scope:{maxSize:"=?",onPageChange:"&?"},link:function(scope,element,attrs){function goToPage(num){isValidPageNumber(num)&&(scope.pages=generatePagesArray(num,paginationService.getCollectionLength(paginationId),paginationService.getItemsPerPage(paginationId),paginationRange),scope.pagination.current=num,scope.onPageChange&&scope.onPageChange({newPageNumber:num}))}function generatePagination(){var page=parseInt(paginationService.getCurrentPage(paginationId))||1;scope.pages=generatePagesArray(page,paginationService.getCollectionLength(paginationId),paginationService.getItemsPerPage(paginationId),paginationRange),scope.pagination.current=page,scope.pagination.last=scope.pages[scope.pages.length-1],scope.pagination.last<scope.pagination.current&&scope.setCurrent(scope.pagination.last)}function isValidPageNumber(num){return numberRegex.test(num)&&num>0&&num<=scope.pagination.last}var paginationId;if(paginationId=attrs.paginationId||"__default",scope.maxSize||(scope.maxSize=9),scope.directionLinks=angular.isDefined(attrs.directionLinks)?scope.$parent.$eval(attrs.directionLinks):!0,scope.boundaryLinks=angular.isDefined(attrs.boundaryLinks)?scope.$parent.$eval(attrs.boundaryLinks):!1,!paginationService.isRegistered(paginationId)){var idMessage="__default"!==paginationId?" (id: "+paginationId+") ":" ";throw"pagination directive: the pagination controls"+idMessage+"cannot be used without the corresponding pagination directive."}var paginationRange=Math.max(scope.maxSize,5);scope.pages=[],scope.pagination={last:1,current:1},scope.$watch(function(){return(paginationService.getCollectionLength(paginationId)+1)*paginationService.getItemsPerPage(paginationId)},function(length){length>0&&generatePagination()}),scope.$watch(function(){return paginationService.getCurrentPage(paginationId)},function(currentPage,previousPage){currentPage!=previousPage&&goToPage(currentPage)}),scope.setCurrent=function(num){isValidPageNumber(num)&&paginationService.setCurrentPage(paginationId,num)}}}}]),module.filter("itemsPerPage",["paginationService",function(paginationService){return function(collection,itemsPerPage,paginationId){if("undefined"==typeof paginationId&&(paginationId="__default"),!paginationService.isRegistered(paginationId))throw"pagination directive: the itemsPerPage id argument (id: "+paginationId+") does not match a registered pagination-id.";var end,start;return collection instanceof Array?(itemsPerPage=parseInt(itemsPerPage)||9999999999,start=paginationService.isAsyncMode(paginationId)?0:(paginationService.getCurrentPage(paginationId)-1)*itemsPerPage,end=start+itemsPerPage,paginationService.setItemsPerPage(paginationId,itemsPerPage),collection.slice(start,end)):collection}}]),module.service("paginationService",function(){var lastRegisteredInstance,instances={};this.registerInstance=function(instanceId){"undefined"==typeof instances[instanceId]&&(instances[instanceId]={asyncMode:!1},lastRegisteredInstance=instanceId)},this.isRegistered=function(instanceId){return"undefined"!=typeof instances[instanceId]},this.getLastInstanceId=function(){return lastRegisteredInstance},this.setCurrentPageParser=function(instanceId,val,scope){instances[instanceId].currentPageParser=val,instances[instanceId].context=scope},this.setCurrentPage=function(instanceId,val){instances[instanceId].currentPageParser.assign(instances[instanceId].context,val)},this.getCurrentPage=function(instanceId){var parser=instances[instanceId].currentPageParser;return parser?parser(instances[instanceId].context):1},this.setItemsPerPage=function(instanceId,val){instances[instanceId].itemsPerPage=val},this.getItemsPerPage=function(instanceId){return instances[instanceId].itemsPerPage},this.setCollectionLength=function(instanceId,val){instances[instanceId].collectionLength=val},this.getCollectionLength=function(instanceId){return instances[instanceId].collectionLength},this.setAsyncModeTrue=function(instanceId){instances[instanceId].asyncMode=!0},this.isAsyncMode=function(instanceId){return instances[instanceId].asyncMode}})}(),angular.module("videoHub").directive("deliveryChart",function(){return{restrict:"E",templateUrl:"shared/chart/chart.html",scope:{impressions:"@impressions"},controller:function($scope){$scope.semiCircleConfig={options:{chart:{type:"pie",backgroundColor:"transparent",height:75,margin:0,width:75},exporting:{enabled:!1},credits:{enabled:!1},tooltip:{enabled:!1},colors:["#008d52","#e2e2e2"]},series:[{dataLabels:{enabled:!1},states:{hover:{enabled:!1}},animation:!1,startAngle:-90,endAngle:90,center:["50%","75%"],innerSize:"50%",name:"Delivery",data:[parseInt($scope.impressions),100-parseInt($scope.impressions)]}],title:{text:""},subtitle:{text:""},loading:!1}}}}),angular.module("videoHub").filter("convertToLocal",function(){return function(input){return input?moment.utc(input).local().format("YYYY-MM-DD hh:mm A"):input}}),angular.module("videoHub").constant("DatetimePickerConstants",{DATETIME_PICKER_FORMAT:"Y-m-d h:i A",MOMENTJS_FORMAT:"YYYY-MM-DDTHH:mm:DDZZ"}).directive("datetimepicker",["$filter","DatetimePickerConstants",function($filter,DatetimePickerConstants){return{scope:{date:"="},replace:!0,require:"ngModel",template:'<input class="form-control" ng-model="date" type="text"/>',link:function(scope,element,attrs,ngModel){function convertToLocal(value){return $filter("convertToLocal")(value)}scope.required=attrs.required||!1,element.datetimepicker({format:DatetimePickerConstants.DATETIME_PICKER_FORMAT,startDate:new Date,step:15}),ngModel.$formatters.unshift(convertToLocal),scope.formatDateForBackend=function(value){return value?moment(value,DatetimePickerConstants.DATETIME_PICKER_FORMAT).format(DatetimePickerConstants.MOMENTJS_FORMAT):void 0},ngModel.$parsers.unshift(scope.formatDateForBackend)}}}]),angular.module("videoHub").service("ListService",function($rootScope,$location,$injector,ValidQueryParamsForListPage){this.data={};var ListService=this;this.service=null;var currentService=null;this.setService=function(serviceName){this.service=$injector.get(serviceName),currentService=this.service,this.data.list=[],this.data.totalItems=[]},this.setList=function(list){ListService.data.list=list,ListService.data.totalItems=list.count},this.updateList=function(){var params=$location.search();return params=_.pick(params,ValidQueryParamsForListPage),currentService.getList(params).then(ListService.setList)}}),angular.module("videoHub").directive("navBar",function(){return{restrict:"E",templateUrl:"shared/navbar/navbar.html",controller:function($scope,$rootScope,logoUrl,$location,CurrentUser){$scope.searchTerm=$location.search().search||"",$scope.logoUrl=logoUrl,CurrentUser.$simplified().then(function(data){$scope.currentUserName=data.displayName})}}}),angular.module("videoHub").filter("placeholder",function(placeholderUrl){return function(input){return input?input:placeholderUrl}}),angular.module("videoHub").factory("VideoService",function(Restangular){return Restangular.service("videos")}),angular.module("videoHub").directive("autocomplete",function($injector){return{templateUrl:"shared/autocomplete/autocomplete.html",scope:{ngModel:"=",service:"@service",labelAttr:"@",placeholderText:"@"},controller:function($scope){function updateCurrentModelsAndDisplayDropdown(data){_.isUndefined(data)?($scope.currentModels=null,$scope.showDropdown=!1):($scope.currentModels=data,_.isUndefined($scope.modelSelected)&&($scope.modelSelected=!1),$scope.showDropdown=$scope.currentModels&&!$scope.modelSelected)}var service=$injector.get($scope.service);$scope.$watch("search",function(){$scope.modelSelected||$scope.showDropdown||_.isEmpty($scope.search)||service.getList().then(updateCurrentModelsAndDisplayDropdown)}),$scope.selectedElement=0,$scope.controlSelectedElementWithKeyboard=function(event){var keyCode=event.keyCode;if($scope.currentModels){var lastIndexOfCurrentModels=$scope.currentModels.length-1;switch(keyCode){case 27:$scope.toggleDropdownStatus();break;case 40:$scope.selectedElement=$scope.selectedElement===lastIndexOfCurrentModels?0:$scope.selectedElement+1;break;case 38:$scope.selectedElement=0===$scope.selectedElement?lastIndexOfCurrentModels:$scope.selectedElement-1;break;case 13:$scope.setModel($scope.currentModels[$scope.selectedElement]),$scope.selectedElement=0;break;default:return}}},$scope.$watch("ngModel",function(newValue){newValue&&$scope.setModel(newValue)}),$scope.toggleDropdownStatus=function(){$scope.showDropdown=!1,$scope.selectedElement=0,_.isUndefined($scope.ngModel)?($scope.modelSelected=!1,$scope.search=""):($scope.modelSelected=!$scope.modelSelected,$scope.search=$scope.ngModel[$scope.labelAttr])},$scope.setModel=function(model){$scope.ngModel=model,$scope.search=model[$scope.labelAttr],$scope.currentModels&&($scope.currentModels=null),$scope.modelSelected=!0,$scope.showDropdown=!1,$scope.selectedElement=0},$scope.ngModel&&($scope.setModel($scope.ngModel),$scope.modelSelected=!0)}}}),function(){function BettyCropperService($http,$interpolate,$q,IMAGE_SERVER_URL,BC_API_KEY,BettyImage){function upload(){var uploadImageDeferred=$q.defer();
angular.element(fileInputId).remove();var fileInput=angular.element(inputTemplate);return angular.element("body").append(fileInput),fileInput.click(),fileInput.unbind("change"),fileInput.bind("change",function(e){1!==e.target.files.length&&uploadImageDeferred.reject("We need exactly one image!");var file=e.target.files[0];0!==file.type.indexOf("image/")&&uploadImageDeferred.reject("Not an image!"),file.size>10485760&&uploadImageDeferred.reject("The file is too large!");var imageData=new FormData;imageData.append("image",file),$http({method:"POST",url:IMAGE_SERVER_URL+"/api/new",headers:{"X-Betty-Api-Key":BC_API_KEY,"Content-Type":void 0,"X-CSRFToken":void 0},data:imageData,transformRequest:angular.identity,transformResponse:function(data){"string"==typeof data&&(data=$.parseJSON(data));var image=new BettyImage(data);return image}}).success(function(success){uploadImageDeferred.resolve(success)}).error(function(error){uploadImageDeferred.reject(error)})}),uploadImageDeferred.promise}function get(id){return $http({method:"GET",url:IMAGE_SERVER_URL+"/api/"+id,headers:{"X-Betty-Api-Key":BC_API_KEY,"Content-Type":void 0,"X-CSRFToken":void 0},transformRequest:angular.identity,transformResponse:function(data){return"string"==typeof data&&(data=$.parseJSON(data)),new BettyImage(data)}})}function detailPatch(id,name,credit,selections){return $http({method:"PATCH",url:IMAGE_SERVER_URL+"/api/"+id,headers:{"X-Betty-Api-Key":BC_API_KEY,"Content-Type":void 0,"X-CSRFToken":void 0},data:{name:name,credit:credit,selections:selections},transformRequest:angular.identity,transformResponse:function(data){return"string"==typeof data&&(data=$.parseJSON(data)),new BettyImage(data)}})}function updateSelection(id,ratio,selections){return $http({method:"POST",url:IMAGE_SERVER_URL+"/api/"+id+"/"+ratio,headers:{"X-Betty-Api-Key":BC_API_KEY,"Content-Type":void 0,"X-CSRFToken":void 0},data:selections})}var fileInputId="#bulbs-cms-hidden-image-file-input",inputTemplate='<input id="bulbs-cms-hidden-image-file-input" type="file" accept="image/*" style="position: absolute; left:-99999px;" name="image" />';this.upload=upload,this.get=get,this.detail=get,this.detailPatch=detailPatch,this.updateSelection=updateSelection}function BettyImageFactory($interpolate,$http,IMAGE_SERVER_URL,BC_API_KEY,DEFAULT_IMAGE_WIDTH,Selection){function BettyImage(data){this.id=data.id,this.name=data.name,this.width=data.width,this.height=data.height,this.selections={};for(var ratio in data.selections)this.selections[ratio]=new Selection(data.selections[ratio])}return BettyImage.prototype.scaleToFit=function(width,height){var scale;if(width&&height){var fitRatio=width/height,thisRatio=this.width/this.height;scale=fitRatio>thisRatio?height/this.height:width/this.width}else width&&(scale=width/this.width),height&&(scale=height/this.height);var scaled={width:Math.round(this.width*scale),height:Math.round(this.height*scale),scale:scale};return scaled},BettyImage.prototype.getStyles=function(width,height,ratio){0===height&&(height=null);var selection=this.selections[ratio],scaledSelection=selection.scaleToFit(width,height);return{"background-image":"url("+this.url("original",DEFAULT_IMAGE_WIDTH,"jpg")+")","background-size":Math.floor(scaledSelection.width()/selection.width()*this.width)+"px","background-position":"-"+scaledSelection.x0+"px -"+scaledSelection.y0+"px",height:scaledSelection.height()+"px",width:scaledSelection.width()+"px","background-repeat":"no-repeat",position:"relative"}},BettyImage.prototype.url=function(ratio,width,format){for(var exp=$interpolate("{{ base_url }}/{{ id }}/{{ ratio }}/{{ width }}.{{ format }}"),idStr=this.id.toString(),segmentedId="",i=0;i<idStr.length;i++)i%4===0&&0!==i&&(segmentedId+="/"),segmentedId+=idStr.substr(i,1);return exp({base_url:IMAGE_SERVER_URL,id:segmentedId,ratio:ratio,width:width,format:format})},BettyImage.prototype.updateSelection=function(ratio,selection){var data={x0:selection.x0,x1:selection.x1,y0:selection.y0,y1:selection.y1};return selection.source&&(data.source=selection.source),$http({method:"POST",url:IMAGE_SERVER_URL+"/api/"+this.id+"/"+ratio,headers:{"X-Betty-Api-Key":BC_API_KEY,"Content-Type":void 0,"X-CSRFToken":void 0},data:data,transformResponse:function(data){return"string"==typeof data&&(data=$.parseJSON(data)),[ratio,new Selection(data.selections[ratio])]}})},BettyImage}function SelectionFactory(){function Selection(data){this.x0=data.x0,this.x1=data.x1,this.y0=data.y0,this.y1=data.y1,this.source=data.source}return Selection.prototype.width=function(){return this.x1-this.x0},Selection.prototype.height=function(){return this.y1-this.y0},Selection.prototype.scaleBy=function(scale){var scaledToFit=new Selection({x0:Math.round(this.x0*scale),x1:Math.round(this.x1*scale),y0:Math.round(this.y0*scale),y1:Math.round(this.y1*scale)});return scaledToFit},Selection.prototype.scaleToFit=function(width,height){var scale;if(width&&height){var fitRatio=width/height,thisRatio=this.width()/this.height();scale=fitRatio>thisRatio?height/this.height():width/this.width()}else width&&(scale=width/this.width()),height&&(scale=height/this.height());return this.scaleBy(scale)},Selection}angular.module("BettyCropper",["restangular"]).value("DEFAULT_IMAGE_WIDTH",1200).factory("Selection",SelectionFactory).factory("BettyImage",BettyImageFactory).service("BettyCropper",BettyCropperService)}(),angular.module("videoHub").directive("bettyeditable",function($http,BettyCropper,openImageCropModal){return{restrict:"E",templateUrl:"shared/bettycropper/bettyeditable.html",scope:{image:"=",addStyles:"@",placeholderText:"@",hideMetas:"=",ratio:"@",editable:"=?"},controller:function($scope){$scope.editable=angular.isDefined($scope.editable)?$scope.editable:!0,$scope.upload=function(){BettyCropper.upload().then(function(success){$scope.image={id:success.id,caption:null,alt:null},$scope.bettyImage=success},function(error){console.log(error)},function(progress){console.log(progress)})},$scope.edit=function(){openImageCropModal($scope.image).then(function(image){null===image.id?$scope.image=null:($scope.image=image,BettyCropper.get($scope.image.id).then(function(response){$scope.bettyImage=response.data,$scope.setStyles()}))})}},link:function(scope,element){void 0===scope.bettyImage&&(scope.bettyImage=null),scope.setStyles=function(){if(scope.bettyImage)scope.imageStyling=scope.bettyImage.getStyles(element.parent().width(),element.parent().height(),scope.ratio);else{var ratioWidth=parseInt(scope.ratio.split("x")[0],10),ratioHeight=parseInt(scope.ratio.split("x")[1],10);scope.imageStyling={"background-color":"#333",position:"relative",width:element.parent().width(),height:Math.floor(element.parent().width()*ratioHeight/ratioWidth)+"px"}}},scope.$watch("image",function(newImage){newImage&&newImage.id&&BettyCropper.get(newImage.id).then(function(response){scope.bettyImage=response.data})}),scope.$watch("bettyImage",function(){scope.setStyles()},!0),element.resize(scope.setStyles),scope.removeImage=function(){scope.image.id=null},scope.editImage=function(){openImageCropModal(scope.image).then(function(success){console.log(success)})}}}}),angular.module("BettyCropper").controller("ImageCropModalCtrl",function($scope,$timeout,$modalInstance,BettyCropper,Selection,DEFAULT_IMAGE_WIDTH,imageData,ratios){$scope.selectedCrop=null,$scope.cropMode=!1,$scope.ratios=ratios,$scope.finished=!1,$scope.thumb_container_styles={},$scope.imageData=imageData,$scope.image||($scope.image=null,BettyCropper.get(imageData.id).then(function(success){$scope.image=success.data})),$scope.$watch("image",function(image){if(image){var finished=!0;for(var ratio in image.selections)if("auto"===image.selections[ratio].source){finished=!1;break}$scope.finished=finished,$scope.scaleData=image.scaleToFit(550,400),$(".crop-image-container img").one("load",function(){$(this).Jcrop({allowSelect:!1,allowMove:!0,allowResize:!0,keySupport:!1},function(){$scope.jcrop_api=this})}),$scope.image_url=image.url("original",DEFAULT_IMAGE_WIDTH,"jpg"),$scope.ratios||($scope.ratios=Object.keys(image.selections)),$scope.setThumbStyles()}}),$scope.$watch("selectedCrop",function(crop){if($scope.image){var finished=!0;for(var ratio in $scope.image.selections)if("auto"===$scope.image.selections[ratio].source&&ratio!==crop){finished=!1;break}$scope.finished=finished}}),$scope.selectCrop=function(ratio){if(!ratio){ratio=Object.keys($scope.image.selections)[0];for(var key in $scope.image.selections)if("auto"===$scope.image.selections[key].source){ratio=key;break}}var selection=$scope.image.selections[ratio].scaleBy($scope.scaleData.scale);$scope.jcrop_api.setOptions({aspectRatio:selection.width()/selection.height()}),$scope.jcrop_api.setSelect([selection.x0,selection.y0,selection.x1,selection.y1]),$scope.cropMode=!0,$scope.selectedCrop=ratio},$scope.setThumbStyles=function(){$scope.thumb_styles=$scope.thumb_styles||{};for(var ratio in $scope.image.selections){var scaledSelection=$scope.image.selections[ratio].scaleToFit(170,170);$scope.thumb_container_styles[ratio]={"padding-top":Math.round((180-scaledSelection.height())/2)+"px","padding-bottom":"5px","padding-left":Math.round((180-scaledSelection.width())/2)+"px","padding-right":"5px"},$scope.thumb_styles[ratio]=$scope.image.getStyles(170,170,ratio)}},$scope.save=function(ratio){var jcrop_selection=$scope.jcrop_api.tellSelect(),newSelection=new Selection({x0:jcrop_selection.x,x1:jcrop_selection.x2,y0:jcrop_selection.y,y1:jcrop_selection.y2,source:"user"});return newSelection=newSelection.scaleBy(1/$scope.scaleData.scale),newSelection.x1>$scope.image.width&&(newSelection.x1=$scope.image.width),newSelection.y1>$scope.image.height&&(newSelection.y1=$scope.image.height),this.image.updateSelection(ratio,newSelection)},$scope.saveAndQuit=function(){var ratio=$scope.selectedCrop;this.save(ratio).then(function(success){var ratio=success.data[0],selection=success.data[1];$scope.image.selections[ratio]=selection}),$scope.cropMode=!1,$modalInstance.close(imageData)},$scope.saveAndNext=function(){var ratio=$scope.selectedCrop;this.save(ratio).then(function(success){var ratio=success.data[0],selection=success.data[1];$scope.image.selections[ratio]=selection;var nextRatioIndex=($scope.ratios.indexOf(ratio)+1)%$scope.ratios.length;$scope.selectCrop($scope.ratios[nextRatioIndex])})}}),angular.module("BettyCropper").factory("openImageCropModal",function($modal){var openImageCropModal=function(imageData,ratios){return $modal.open({templateUrl:"shared/bettycropper/image-crop-modal.html",controller:"ImageCropModalCtrl",resolve:{imageData:function(){return imageData},ratios:function(){return ratios||!1}},backdrop:"static"}).result};return openImageCropModal}),angular.module("videoHub").service("CurrentUser",function(Restangular,$q){var userDefer=$q.defer(),$userPromise=userDefer.promise;this.data=[];var self=this;this.getItems=function(){Restangular.one("me").get().then(function(data){self.data=data,userDefer.resolve(data)})},this.getItems(),this.$retrieveData=function(){return $userPromise},this.$simplified=function(){return $userPromise.then(function(user){var displayName=user.first_name&&user.last_name?user.first_name+" "+user.last_name:user.email||user.username;return{id:user.id,displayName:displayName}})}});
//# sourceMappingURL=app.min.js.map