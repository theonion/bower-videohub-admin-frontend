{"version":3,"file":"app.min.js","sources":["../../app/app.js","../../app/components/videodetail/zencoder-service.js","../../app/components/videodetail/videodetail-controller.js","../../app/components/videodetail/videofield-directive.js","../../app/shared/videoplayer/videoplayer-directive.js","../../app/components/videolist/videolist-controller.js","../../app/components/login/login-controller.js","../../app/components/channeldetail/channeldetail-controller.js","../../app/components/channellist/channellist-controller.js","../../app/components/sponsordetail/sponsordetail-controller.js","../../app/components/sponsorlist/sponsorlist-controller.js","../../app/components/serieslist/serieslist-controller.js","../../app/components/seriesdetail/seriesdetail-controller.js","../../app/shared/alert/alert-directive.js","../../app/shared/alert/alert-service.js","../../app/shared/api/channel-service.js","../../app/shared/api/series-service.js","../../app/shared/api/season-service.js","../../app/shared/api/video-service.js","../../app/shared/api/sponsor-service.js","../../app/shared/api/tags-service.js","../../app/shared/auth/tokenauth-service.js","../../app/shared/pagination/dirPagination.js","../../app/shared/chart/chart-directive.js","../../app/shared/create-content/create-content.js","../../app/shared/converttolocal/converttolocal-filter.js","../../app/shared/datepicker/datepicker-directive.js","../../app/shared/listservice/list-service.js","../../app/shared/navbar/navbar-directive.js","../../app/shared/placeholderimage/placeholderimage-filter.js","../../app/shared/autocomplete/autocomplete-directive.js","../../app/shared/bettycropper/betty-cropper.js","../../app/shared/bettycropper/bettyeditable.js","../../app/shared/bettycropper/imagecropmodal.js","../../app/shared/bettycropper/openimagecropmodal.js","../../app/shared/currentuser/currentuser-service.js","../../app/shared/tags-autocomplete/tags-autocomplete-directive.js","../../app/shared/settingsButton/settingsbutton-directive.js"],"names":["angular","module","config","$locationProvider","$httpProvider","$routeProvider","$sceDelegateProvider","RestangularProvider","resourceUrlWhitelist","html5Mode","setBaseUrl","addResponseInterceptor","data","operation","results","meta","count","prev","next","when","templateUrl","controller","reloadOnSearch","otherwise","redirectTo","constant","UPLOAD_TO_S3_PROGRESS_MESSAGE","UPLOAD_TO_S3_UPLOAD_BEGINNING_MESSAGE","UPLOAD_TO_S3_UPLOAD_COMPLETE_MESSAGE","UPLOAD_TO_S3_UPLOAD_FAILED_MESSAGE","ENCODE_FAILED_MESSAGE","ENCODE_PROGRESS_MESSAGE","service","$http","$q","$interval","ZencoderConstants","uploadToS3","file","videoObject","s3Config","encoding_payload","s3deferred","defer","formData","FormData","append","key","AWSAccessKeyId","acl","success_action_status","policy","signature","xhr","XMLHttpRequest","open","upload_endpoint","upload","onprogress","e","notify","lengthComputable","replace","Math","round","loaded","total","onload","resolve","addEventListener","reject","send","promise","encode","encodeDeferred","doPOST","then","response","zencoderProgressEndpoint","json","progressInterval","url","method","ignoreAuthorizationHeader","state","cancel","_","isUndefined","progress","this","uploadToS3AndEncode","uploadToS3AndEncodeDeferred","successCallback","success","errorCallback","error","notifyCallback","SAVED_ALERT_MESSAGE","SOMETHING_WENT_WRONG_ALERT_MESSAGE","PLEASE_FILL_IN_ALL_REQUIRED_FIELDS_ALERT_MESSAGE","DELETE_SUCCESSFUL","$scope","$routeParams","VideoService","$location","AlertService","VideoDetailControllerConstants","navigateToNewlyCreatedEditPage","displaySaveSuccessfulAlert","path","id","displaySomethingWentWrongAlert","video","getVideo","videoId","autocompleteFields","channel","series","tagObjects","one","get","setVideo","console","log","isEmpty","input","tags","pluck","saveVideo","videoDetailForm","$valid","has","save","post","delete","remove","FILE_TOO_LARGE_ERROR_MESSAGE","MUST_UPLOAD_FILES_ERROR_MESSAGE","PLEASE_SELECT_A_FILE_ERROR_MESSAGE","UPLOAD_COMPLETE_SUCCESS_MESSAGE","directive","Zencoder","transclude","$timeout","VideoFieldConstants","uploadVideo","fileField","$","unbind","bind","event","target","files","validateVideoFile","addVideo","fetchNewVideoObject","message","info","click","validateVideoFileDeferred","size","type","indexOf","addVideoDeferred","doGET","encodingPayload","uploadToS3Arguments","checkIfSourcesHaveLoadedAndRetryIfTheyAreNot","sources","clear","restrict","link","scope","element","currentVideo","find","player","videojs","controls","autoplay","width","height","on","pause","$on","dispose","$rootScope","ListService","updateList","list","totalItems","params","getParams","setService","setFilterAndUpdateList","newFilterValue","setFilter","changeToEditPage","setOrderAndUpdateList","newOrderValue","setOrder","clearSearchAndUpdateList","clearSearch","pageChanged","newPageNumber","setPage","setSearchAndUpdateList","setSearch","q","new","authService","showSearchBar","showSaveButton","username","password","submitLogin","login","ChannelService","ChannelDetailControllerConstants","getChannel","channelId","partner","saveChannel","channelDetailForm","SponsorService","SponsorDetailControllerConstants","sponsor","getSponsor","sponsorId","saveSponsor","sponsorDetailForm","SeriesService","SeriesDetailControllerConstants","getSeries","seriesId","saveSeries","seriesDetailForm","alertStatus","TIME_TO_WAIT_BEFORE_CLEARING","AlertServiceConstants","clearAfterDisplayingMessageFlag","setAlertStatusElementsToFalse","alertDeferred","alertService","factory","Restangular","$window","$injector","httpRequestBuffer","request","headers","sessionStorage","token","Authorization","responseError","ignoreAuthModule","status","deferred","refreshToken","interceptors","push","_login","_refreshToken","retryAll","rejectAll","_retryHttpRequest","buffer","reason","each","moduleName","DEFAULT_ID","err","$compile","$parse","paginationService","terminal","multiElement","priority","compile","tElement","tAttrs","expression","dirPaginate","match","filterPattern","itemsPerPageFilterRemoved","collectionGetter","rawId","paginationId","registerInstance","attrs","repeatExpression","idDefinedInFilter","hasAttribute","$set","eq","length","attr","currentPageGetter","compiled","currentPage","defaultCurrentPage","setCurrentPageParser","setAsyncModeTrue","$watch","result","setCollectionLength","$watchCollection","collection","paginationTemplate","generatePagesArray","collectionLength","rowsPerPage","paginationRange","position","pages","totalPages","ceil","halfWay","ellipsesNeeded","i","pageNumber","calculatePageNumber","openingEllipsesNeeded","closingEllipsesNeeded","numberRegex","elem","getPath","maxSize","onPageChange","goToPage","num","isValidPageNumber","getCollectionLength","getItemsPerPage","pagination","current","updateRangeValues","generatePagination","page","parseInt","getCurrentPage","last","setCurrent","itemsPerPage","range","lower","upper","min","test","isRegistered","idMessage","directionLinks","isDefined","$parent","$eval","boundaryLinks","max","previous","previousPage","setCurrentPage","filter","end","start","Array","isAsyncMode","setItemsPerPage","slice","lastRegisteredInstance","instances","instanceId","asyncMode","getLastInstanceId","val","currentPageParser","context","assign","parser","provider","templatePath","setPath","$get","impressions","semiCircleConfig","options","chart","backgroundColor","margin","exporting","enabled","credits","tooltip","colors","dataLabels","states","hover","animation","startAngle","endAngle","center","innerSize","name","title","text","subtitle","loading","setContentType","contentType","goToContentTypesCreationPage","moment","utc","local","format","DATETIME_PICKER_FORMAT","MOMENTJS_FORMAT","$filter","DatetimePickerConstants","date","require","template","ngModel","convertToLocal","value","required","datetimepicker","startDate","Date","step","$formatters","unshift","formatDateForBackend","$parsers","ValidQueryParamsForListPage","currentService","serviceName","search","f","setList","searchQuery","orderBy","order_by","pick","omit","isNumber","getList","logoUrl","CurrentUser","$simplified","currentUserName","displayName","placeholderUrl","model","labelAttr","placeholderText","isRequired","doSearchAndUpdateCurrentModels","modelSelected","showDropdown","currentModels","updateCurrentModelsAndDisplayDropdown","selectedElement","controlSelectedElementWithKeyboard","keyCode","lastIndexOfCurrentModels","disableDropdown","setModel","unbindListener","newValue","BettyCropperService","$interpolate","IMAGE_SERVER_URL","BC_API_KEY","BettyImage","uploadImageDeferred","fileInputId","fileInput","inputTemplate","imageData","X-Betty-Api-Key","Content-Type","undefined","X-CSRFToken","transformRequest","identity","transformResponse","parseJSON","image","detailPatch","credit","selections","updateSelection","ratio","detail","BettyImageFactory","DEFAULT_IMAGE_WIDTH","Selection","prototype","scaleToFit","scale","fitRatio","thisRatio","scaled","getStyles","selection","scaledSelection","background-image","background-size","floor","background-position","x0","y0","background-repeat","exp","idStr","toString","segmentedId","substr","base_url","x1","y1","source","SelectionFactory","scaleBy","scaledToFit","BettyCropper","openImageCropModal","addStyles","hideMetas","editable","caption","alt","bettyImage","edit","setStyles","imageStyling","parent","ratioWidth","split","ratioHeight","background-color","newImage","resize","removeImage","editImage","$modalInstance","ratios","selectedCrop","cropMode","finished","thumb_container_styles","scaleData","Jcrop","allowSelect","allowMove","allowResize","keySupport","jcrop_api","image_url","Object","keys","setThumbStyles","crop","selectCrop","setOptions","aspectRatio","setSelect","thumb_styles","padding-top","padding-bottom","padding-left","padding-right","jcrop_selection","tellSelect","newSelection","x","x2","y","y2","saveAndQuit","close","saveAndNext","nextRatioIndex","$modal","backdrop","userDefer","$userPromise","self","getItems","$retrieveData","user","first_name","last_name","email","items","fetchItemsThatMatchSearch","currentItems","tagsAreBeingFetchedFromTheServer","updateCurrentItemsAndDisplayDropdown","currentItemsIds","item","contains","lastIndexOfCurrentItems","addItem","isCurrentTagInCurrentItemsPredicate","matches","currentObjectFetchedFromCurrentItems","removeItem","itemToBeRemovedFromArray"],"mappings":"AAAA,YAIAA,SAAQC,OAAO,YACX,YACA,UACA,YACA,aACA,cACA,gBACA,eACA,iBAEDC,OAAO,SAASC,kBAAmBC,cAAeC,eAAgBC,qBAAsBC,qBAGvFD,qBAAqBE,sBAAsB,OAAQ,2CAA4C,0CAA2C,4BAA6B,6BAEvKL,kBAAkBM,WAAU,GAG5BF,oBAAoBG,WAAW,YAG/BH,oBAAoBI,uBAAuB,SAASC,KAAMC,WACxD,GAAkB,YAAdA,UAAyB,CAC3B,GAAIC,SAAUF,KAAKE,OAQnB,OAPIA,WACFA,QAAQC,MACNC,MAAOJ,KAAKI,MACZC,KAAML,KAAKK,KACXC,KAAMN,KAAKM,OAGRJ,QAET,MAAOF,QAGTP,eACGc,KAAK,SACJC,YAAa,sCACbC,WAAY,sBACZC,gBAAgB,IAEjBH,KAAK,gBACJC,YAAa,wCACbC,WAAY,uBACZC,gBAAgB,IAEjBH,KAAK,kBACJC,YAAa,0CACbC,WAAY,wBACZC,gBAAgB,IAEjBH,KAAK,kBACJC,YAAa,0CACbC,WAAY,wBACZC,gBAAgB,IAEjBH,KAAK,eACJC,YAAa,8BACbC,WAAY,oBAEbF,KAAK,uBACJC,YAAa,0CACbC,WAAY,0BAEbF,KAAK,gCACJC,YAAa,8CACbC,WAAY,4BAEbF,KAAK,oBACJC,YAAa,8CACbC,WAAY,4BAEbF,KAAK,8BACJC,YAAa,4CACbC,WAAY,2BAEbF,KAAK,gCACJC,YAAa,8CACbC,WAAY,4BAEbF,KAAK,mBACJC,YAAa,4CACbC,WAAY,2BAEbF,KAAK,oBACJC,YAAa,8CACbC,WAAY,4BAEbF,KAAK,aACJC,YAAa,0CACbC,WAAY,0BAEbE,WACCC,WAAY,YAGjBC,SAAS,+BACR,IAAK,OAAQ,IAAK,YAAa,aCpGnCzB,QAAQC,OAAO,YACZwB,SAAS,qBACRC,8BAAiC,wBACjCC,sCAAyC,eACzCC,qCAAwC,mCACxCC,mCAAsC,gBACtCC,sBAAyB,uBACzBC,wBAA2B,iBAE5BC,QAAQ,WAAY,SAAkBC,MAAOC,GAAIC,UAAWC,mBAyB3D,QAASC,YAAWC,KAAMC,aACxB,GAAIC,UAAWD,YAAYE,iBACvBC,WAAaR,GAAGS,QAEhBC,SAAW,GAAIC,SACnBD,UAASE,OAAO,MAAON,SAASO,KAChCH,SAASE,OAAO,iBAAkBN,SAASQ,gBAC3CJ,SAASE,OAAO,MAAON,SAASS,KAChCL,SAASE,OAAO,wBAAyBN,SAASU,uBAClDN,SAASE,OAAO,SAAUN,SAASW,QACnCP,SAASE,OAAO,YAAaN,SAASY,WACtCR,SAASE,OAAO,OAAQR,KAGxB,IAAIe,KAAM,GAAIC,eAqBd,OApBAD,KAAIE,KAAK,OAAQf,SAASgB,iBAE1BH,IAAII,OAAOC,WAAa,SAASC,GAE7BjB,WAAWkB,OADTD,EAAEE,iBACczB,kBAAkBV,8BAA8BoC,QAAQ,IAAKC,KAAKC,MAAML,EAAEM,OAASN,EAAEO,MAAQ,MAE7F9B,kBAAkBT,wCAIxC0B,IAAIc,OAAS,WACXzB,WAAWkB,OAAOxB,kBAAkBR,sCACpCc,WAAW0B,QAAQ7B,cAGrBc,IAAIgB,iBAAiB,QAAS,WAC5B3B,WAAW4B,OAAOlC,kBAAkBP,sCAGtCwB,IAAIkB,KAAK3B,UACFF,WAAW8B,QAIpB,QAASC,QAAOlC,aACd,GAAImC,gBAAiBxC,GAAGS,OA2BxB,OA1BAJ,aAAYoC,UAAW,UACpBC,KAAK,SAASC,UACb,GAAIC,0BAA2BD,SAASE,KAEpCC,iBAAmB7C,UAAU,WAC/BF,OACEgD,IAAKH,yBACLI,OAAQ,MACRC,2BAA6B,IAC5BP,KAAK,SAASC,UACa,aAAxBA,SAASjE,KAAKwE,OAChBV,eAAeN,QAAQ7B,aACvBJ,UAAUkD,OAAOL,mBACgB,WAAxBH,SAASjE,KAAKwE,OACvBV,eAAeJ,OAAOlC,kBAAkBN,uBACxCK,UAAUkD,OAAOL,mBAEZM,EAAEC,YAAYV,SAASjE,KAAK4E,WAC/Bd,eAAed,OAAOxB,kBAAkBL,wBAAwB+B,QAAQ,IAAKC,KAAKC,MAAMa,SAASjE,KAAK4E,eAI3G,MACF,SAAS5E,MACV8D,eAAeJ,OAAO1D,QAEnB8D,eAAeF,QAzFxBiB,KAAKC,oBAAsB,SAASxF,QAClC,GAAIyF,6BAA8BzD,GAAGS,QACjCL,KAAOpC,OAAOoC,KACdC,YAAcrC,OAAOqC,YAErBqD,gBAAkB,SAASC,SAC7BF,4BAA4BvB,QAAQyB,UAElCC,cAAgB,SAASC,OAC3BJ,4BAA4BrB,OAAOyB,QAEjCC,eAAiB,SAASpC,QAC5B+B,4BAA4B/B,OAAOA,QAOrC,OAJAvB,YAAWC,KAAMC,aACdqC,KAAKH,OAAQqB,cAAeE,gBAC5BpB,KAAKgB,gBAAiBE,cAAeE,gBAEjCL,4BAA4BnB,WChCzCxE,QAAQC,OAAO,YAEZwB,SAAS,kCACRwE,oBAAqB,QACrBC,mCAAoC,kFACpCC,iDAAkD,sCAClDC,kBAAmB,sBAEpB/E,WAAW,wBAAyB,SAASgF,OAAQC,aAAcC,aAAcC,UAAWC,aAAcC,gCA2DzG,QAASC,gCAA+B9B,UACtC+B,6BAA6BhC,KAAK,WAChC4B,UAAUK,KAAK,YAAchC,SAASiC,GAAK,OAI/C,QAASF,8BACP,MAAOH,cAAaZ,QAAQa,+BAA+BT,qBAAqB,GAGlF,QAASc,kCACPN,aAAaV,MAAMW,+BAA+BR,oCAAoC,GArExFG,OAAOW,SAEPX,OAAOY,SAAW,WAChB,MAAI3B,GAAEC,YAAYe,aAAaY,UAC7Bb,OAAOW,SACPX,OAAOc,mBAAmBC,WAC1Bf,OAAOc,mBAAmBE,UAC1BhB,OAAOc,mBAAmBG,cAH1BjB,QAKOE,aAAagB,IAAIjB,aAAaY,SAASM,MAAM5C,KAClDyB,OAAOoB,SACP,SAAS7G,MACP8G,QAAQC,IAAI/G,SAMpByF,OAAOoB,SAAW,SAAS7G,MACrB0E,EAAEsC,QAAQhH,KAAKiH,SACjBjH,KAAKiH,MAAQ,IAEfxB,OAAOW,MAAQpG,KACX0E,EAAEC,YAAYc,OAAOW,MAAMc,QAC7BzB,OAAOW,MAAMc,SAGfzB,OAAOc,mBAAmBG,WAAajB,OAAOW,MAAMc,KACpDzB,OAAOW,MAAMc,KAAOxC,EAAEyC,MAAM1B,OAAOW,MAAMc,KAAM,MAC/CzB,OAAOc,mBAAmBC,QAAUf,OAAOW,MAAMI,QACjDf,OAAOc,mBAAmBE,OAAShB,OAAOW,MAAMK,QAGlDhB,OAAO2B,UAAY,WACb3B,OAAO4B,gBAAgBC,QAEvB7B,OAAOW,MAAMI,QADX9B,EAAE6C,IAAI9B,OAAOc,mBAAmBC,QAAS,MACpBf,OAAOc,mBAAmBC,QAAQN,GAElC,KAIvBT,OAAOW,MAAMK,OADX/B,EAAE6C,IAAI9B,OAAOc,mBAAmBE,OAAQ,MACpBhB,OAAOc,mBAAmBE,OAAOP,GAEjC,KAGxBT,OAAOW,MAAMc,KAAOxC,EAAEyC,MAAM1B,OAAOc,mBAAmBG,WAAY,MAC9DhB,aAAaY,QACfb,OAAOW,MAAMoB,OAAOxD,KAAKgC,2BAA4BG,gCAErDR,aAAa8B,KAAKhC,OAAOW,OAAOpC,KAAK+B,+BAAgCI,iCAGvEN,aAAaV,MAAMW,+BAA+BP,kDAAkD,IAkBxGE,OAAOiC,OAAS,WACdjC,OAAOW,MAAMuB,SAAS3D,KAAK,WACzB6B,aAAaZ,QAAQa,+BAA+BN,mBAAmB,GAAMxB,KAAK,WAChF4B,UAAUK,KAAK,aAKrBR,OAAOc,sBACPd,OAAOY,aCzFXjH,QAAQC,OAAO,YACZwB,SAAS,uBACR+G,6BAA8B,4CAC9BC,gCAAiC,gCACjCC,mCAAoC,wBACpCC,gCAAiC,oBAElCC,UAAU,aAAc,SAASC,SAAU3G,IAC1C,OACEd,YAAa,yCACb0H,YAAY,EACZzH,WAAY,SAASgF,OAAQI,aAAcsC,SAAUC,oBAAqBzC,cAExEF,OAAO4C,YAAc,WACnB,GAAIC,WAAYC,EAAE,IAAM9C,OAAOW,MAAMF,GAAK,cAC1CoC,WAAUE,OAAO,UACjBF,UAAUG,KAAK,SAAU,SAASC,OAChC,GAAIhH,MAAOgH,MAAMC,OAAOC,MAAM,EAC9BnD,QAAOoD,kBAAkBnH,MACtBsC,KAAKyB,OAAOqD,UACZ9E,KAAKiE,SAASnD,qBACdd,KACC,WACE6B,aAAaZ,QAAQmD,oBAAoBL,iCAAiC,GAAM/D,KAAKyB,OAAOsD,sBAE9F,SAAS5D,OACPU,aAAaV,MAAMA,OAAO,IAE5B,SAAS6D,SACFtE,EAAEC,YAAYqE,UACjBnD,aAAaoD,KAAKD,SAAS,OAIrCV,UAAUY,SAGZzD,OAAOoD,kBAAoB,SAASnH,MAClC,GAAIyH,2BAA4B7H,GAAGS,OAYnC,OAXIL,MACEA,KAAK0H,KAAO,WACdD,0BAA0BzF,OAAO0E,oBAAoBR,8BACZ,IAAhClG,KAAK2H,KAAKC,QAAQ,UAC3BH,0BAA0BzF,OAAO0E,oBAAoBP,iCAErDsB,0BAA0B3F,QAAQ9B,MAGpCyH,0BAA0BzF,OAAO0E,oBAAoBN,oCAEhDqB,0BAA0BvF,SAGnC6B,OAAOqD,SAAW,SAASpH,MACzB,GAAI6H,kBAAmBjI,GAAGS,OAU1B,OARA0D,QAAOW,MAAMoD,MAAM,iBAAiBxF,KAAK,SAASyF,iBAChDhE,OAAOW,MAAMvE,iBAAmB4H,eAChC,IAAIC,sBACFhI,KAAQA,KACRC,YAAe8D,OAAOW,MAExBmD,kBAAiB/F,QAAQkG,uBAEpBH,iBAAiB3F,SAG1B6B,OAAOkE,6CAA+C,SAAS1F,UACzDS,EAAEsC,QAAQ/C,SAAS2F,SACrBzB,SAAS1C,OAAOsD,oBAAqB,MAErCtD,OAAOW,MAAQnC,SACf4B,aAAagE,UAIjBpE,OAAOsD,oBAAsB,WAE3BpD,aAAagB,IAAIlB,OAAOW,MAAMF,IAAIU,MAC/B5C,KAAKyB,OAAOkE,mDC/EzBvK,QAAQC,OAAO,YACZ2I,UAAU,eAAiB,WAC1B,OACE9E,SAAS,EACT4G,SAAU,IACV5B,YAAY,EACZ1H,YAAa,sCACbuJ,KAAM,SAASC,MAAOC,SACpB,GAAIC,cAAeD,QAAQE,KAAK,SAAS,EACzCH,OAAMI,OAASC,QAAQH,cACrBI,UAAY,EACZC,UAAY,EACZC,MAAS,OACTC,OAAU,SAGZR,QAAQE,KAAK,UAAUO,GAAG,kBAAmB,WAC3CV,MAAMI,OAAOO,UAGfX,MAAMY,IAAI,WAAY,WACpBZ,MAAMI,OAAOS,iBCtBvBzL,QAAQC,OAAO,YACZoB,WAAW,sBAAuB,SAASgF,OAAQG,UAAWF,aAAcoF,WAAYC,aAGvF,QAASC,cACPD,YAAYC,aACThH,KAAK,WACJyB,OAAOwF,KAAOF,YAAY/K,KAAKiL,KAC/BxF,OAAOyF,WAAaH,YAAY/K,KAAKkL,WACrCzF,OAAO0F,OAASJ,YAAYK,cAPlCL,YAAYM,WAAW,gBAUvBL,aAEAvF,OAAO6F,uBAAyB,SAASC,gBACvCR,YAAYS,UAAUD,gBACtBP,cAGFvF,OAAOgG,iBAAmB,SAASvF,IACjCN,UAAUK,KAAK,YAAcC,GAAK,MAGpCT,OAAOiG,sBAAwB,SAASC,eACtCZ,YAAYa,SAASD,eACrBX,cAGFvF,OAAOoG,yBAA2B,WAChCd,YAAYe,cACZd,cAGFvF,OAAOsG,YAAc,SAASC,eAC5BjB,YAAYkB,QAAQD,eACpBhB,cAGFvF,OAAOyG,uBAAyB,WAC9BnB,YAAYoB,UAAU1G,OAAO0F,OAAOiB,GACpCpB,cAGFvF,OAAO4G,IAAM,WACXzG,UAAUK,KAAK,eC3CrB7G,QAAQC,OAAO,YACVoB,WAAW,kBAAmB,SAASgF,OAAQ6G,YAAa1G,UAAWkF,YACpEA,WAAWyB,eAAgB,EAC3BzB,WAAW0B,gBAAiB,EAC5B/G,OAAOgH,SAAW,GAClBhH,OAAOiH,SAAW,GAClBjH,OAAOkH,YAAc,WACjBL,YAAYM,MAAMnH,OAAOgH,SAAUhH,OAAOiH,aCRtDtN,QAAQC,OAAO,YACZwB,SAAS,oCACRwE,oBAAqB,QACrBC,mCAAoC,oFACpCC,iDAAkD,sCAClDC,kBAAmB,sBAEpB/E,WAAW,0BAA2B,SAASgF,OAAQC,aAAcmH,eAAgBjH,UAAWC,aAAciH,kCAqC7G,QAAS/G,gCAA+B9B,UACtC+B,6BAA6BhC,KAAK,WAChC4B,UAAUK,KAAK,mBAAqBhC,SAASiC,GAAK,OAItD,QAASF,8BACP,MAAOH,cAAaZ,QAAQ6H,iCAAiCzH,qBAAqB,GAGpF,QAASc,kCACPN,aAAaV,MAAM2H,iCAAiCxH,oCAAoC,GA/C1FG,OAAOe,WAEPf,OAAOsH,WAAa,WAClB,MAAIrI,GAAEC,YAAYe,aAAasH,YAC7BvH,OAAOe,gBACPf,OAAOc,mBAAmB0G,aAEnBJ,eAAelG,IAAIjB,aAAasH,WAAWpG,MAAM5C,KACtD,SAAShE,MACPyF,OAAOe,QAAUxG,KACjByF,OAAOc,mBAAmB0G,QAAUxH,OAAOe,QAAQyG,SAErD,SAASjN,MACP8G,QAAQC,IAAI/G,SAMpByF,OAAOyH,YAAc,WACfzH,OAAO0H,kBAAkB7F,QAEzB7B,OAAOe,QAAQyG,QADbvI,EAAE6C,IAAI9B,OAAOc,mBAAmB0G,QAAS,MAClBxH,OAAOc,mBAAmB0G,QAAQ/G,GAElC,KAEvBR,aAAasH,UACfvH,OAAOe,QAAQgB,OAAOxD,KAAKgC,2BAA4BG,gCAEvD0G,eAAepF,KAAKhC,OAAOe,SAASxC,KAAK+B,+BAAgCI,iCAG3EN,aAAaV,MAAM2H,iCAAiCvH,kDAAkD,IAkB1GE,OAAOc,sBACPd,OAAOsH,eC3DX3N,QAAQC,OAAO,YACZoB,WAAW,wBAAyB,SAASgF,OAAQG,UAAWF,aAAcoF,WAAYC,aAGzF,QAASC,cACPD,YAAYC,aACThH,KAAK,WACJyB,OAAOwF,KAAOF,YAAY/K,KAAKiL,KAC/BxF,OAAOyF,WAAaH,YAAY/K,KAAKkL,WACrCzF,OAAO0F,OAASJ,YAAYK,cAPlCL,YAAYM,WAAW,kBAUvBL,aAEAvF,OAAO6F,uBAAyB,SAASC,gBACvCR,YAAYS,UAAUD,gBACtBP,cAIFvF,OAAOgG,iBAAmB,SAASvF,IACjCN,UAAUK,KAAK,mBAAqBC,GAAK,MAG3CT,OAAOiG,sBAAwB,SAASC,eACtCZ,YAAYa,SAASD,eACrBX,cAGFvF,OAAOoG,yBAA2B,WAChCd,YAAYe,cACZd,cAGFvF,OAAOsG,YAAc,SAASC,eAC5BjB,YAAYkB,QAAQD,eACpBhB,cAGFvF,OAAOyG,uBAAyB,WAC9BnB,YAAYoB,UAAU1G,OAAO0F,OAAOiB,GACpCpB,gBCxCN5L,QAAQC,OAAO,YACZwB,SAAS,oCACRwE,oBAAqB,QACrBC,mCAAoC,oFACpCC,iDAAkD,sCAClDC,kBAAmB,sBAEpB/E,WAAW,0BAA2B,SAASgF,OAAQC,aAAc0H,eAAgBxH,UAAWC,aAAcwH,kCA8B7G,QAAStH,gCAA+B9B,UACtC+B,6BAA6BhC,KAAK,WAChC4B,UAAUK,KAAK,mBAAqBhC,SAASiC,GAAK,OAItD,QAASF,8BACP,MAAOH,cAAaZ,QAAQoI,iCAAiChI,qBAAqB,GAGpF,QAASc,kCACPN,aAAaV,MAAMkI,iCAAiC/H,oCAAoC,GAxC1FG,OAAO6H,WAEP7H,OAAO8H,WAAa,WAClB,MAAI7I,GAAEC,YAAYe,aAAa8H,gBAC7B/H,OAAO6H,YAEAF,eAAezG,IAAIjB,aAAa8H,WAAW5G,MAAM5C,KACtD,SAAShE,MACPyF,OAAO6H,QAAUtN,MAEnB,SAASA,MACP8G,QAAQC,IAAI/G,SAMpByF,OAAOgI,YAAc,WACfhI,OAAOiI,kBAAkBpG,OACvB5B,aAAa8H,UACf/H,OAAO6H,QAAQ9F,OAAOxD,KAAKgC,2BAA4BG,gCAEvDiH,eAAe3F,KAAKhC,OAAO6H,SAAStJ,KAAK+B,+BAAgCI,gCAG3EN,aAAaV,MAAMkI,iCAAiC9H,kDAAkD,IAkB1GE,OAAOiC,OAAS,WACdjC,OAAO6H,QAAQ3F,SAAS3D,KAAK,WAC3B6B,aAAaZ,QAAQoI,iCAAiC7H,mBAAmB,GAAMxB,KAAK,WAClF4B,UAAUK,KAAK,aAIrBR,OAAO8H,eC3DXnO,QAAQC,OAAO,YACZoB,WAAW,wBAAyB,SAASgF,OAAQG,UAAWF,aAAcoF,WAAYC,aAGzF,QAASC,cACPD,YAAYC,aACThH,KAAK,WACJyB,OAAOwF,KAAOF,YAAY/K,KAAKiL,KAC/BxF,OAAOyF,WAAaH,YAAY/K,KAAKkL,WACrCzF,OAAO0F,OAASJ,YAAYK,cAPlCL,YAAYM,WAAW,kBAUvBL,aAEAvF,OAAO6F,uBAAyB,SAASC,gBACvCR,YAAYS,UAAUD,gBACtBP,cAIFvF,OAAOgG,iBAAmB,SAASvF,IACjCN,UAAUK,KAAK,mBAAqBC,GAAK,MAG3CT,OAAOiG,sBAAwB,SAASC,eACtCZ,YAAYa,SAASD,eACrBX,cAGFvF,OAAOoG,yBAA2B,WAChCd,YAAYe,cACZd,cAGFvF,OAAOsG,YAAc,SAASC,eAC5BjB,YAAYkB,QAAQD,eACpBhB,cAGFvF,OAAOyG,uBAAyB,WAC9BnB,YAAYoB,UAAU1G,OAAO0F,OAAOiB,GACpCpB,gBCzCN5L,QAAQC,OAAO,YACZoB,WAAW,uBAAwB,SAASgF,OAAQG,UAAWF,aAAcoF,WAAYC,aAGxF,QAASC,cACPD,YAAYC,aACThH,KAAK,WACJyB,OAAOwF,KAAOF,YAAY/K,KAAKiL,KAC/BxF,OAAOyF,WAAaH,YAAY/K,KAAKkL,WACrCzF,OAAO0F,OAASJ,YAAYK,cAPlCL,YAAYM,WAAW,iBAUvBL,aAEAvF,OAAO6F,uBAAyB,SAASC,gBACvCR,YAAYS,UAAUD,gBACtBP,cAGFvF,OAAOgG,iBAAmB,SAASvF,IACjCN,UAAUK,KAAK,kBAAoBC,GAAK,MAG1CT,OAAOiG,sBAAwB,SAASC,eACtCZ,YAAYa,SAASD,eACrBX,cAGFvF,OAAOoG,yBAA2B,WAChCd,YAAYe,cACZd,cAGFvF,OAAOsG,YAAc,SAASC,eAC5BjB,YAAYkB,QAAQD,eACpBhB,cAGFvF,OAAOyG,uBAAyB,WAC9BnB,YAAYoB,UAAU1G,OAAO0F,OAAOiB,GACpCpB,gBCvCN5L,QAAQC,OAAO,YACZwB,SAAS,mCACRwE,oBAAqB,QACrBC,mCAAoC,mFACpCC,iDAAkD,sCAClDC,kBAAmB,sBAEpB/E,WAAW,yBAA0B,SAASgF,OAAQC,aAAciI,cAAe/H,UAAWC,aAAc+H,iCA4C3G,QAAS7H,gCAA+B9B,UACtC+B,6BAA6BhC,KAAK,WAChC4B,UAAUK,KAAK,kBAAoBhC,SAASiC,GAAK,OAIrD,QAASF,8BACP,MAAOH,cAAaZ,QAAQ2I,gCAAgCvI,qBAAqB,GAGnF,QAASc,kCACPN,aAAaV,MAAMyI,gCAAgCtI,oCAAoC,GAtDzFG,OAAOgB,UAEPhB,OAAOoI,UAAY,WACjB,MAAInJ,GAAEC,YAAYe,aAAaoI,WAC7BrI,OAAOgB,UACPhB,OAAOc,mBAAmBC,WAC1Bf,OAAOc,mBAAmB+G,WAF1B7H,QAIOkI,cAAchH,IAAIjB,aAAaoI,UAAUlH,MAAM5C,KACpD,SAAShE,MACPyF,OAAOgB,OAASzG,KAChByF,OAAOc,mBAAmBC,QAAUxG,KAAKwG,QACzCf,OAAOc,mBAAmB+G,QAAUtN,KAAKsN,SAE3C,SAAStN,MACP8G,QAAQC,IAAI/G,SAMpByF,OAAOsI,WAAa,WACdtI,OAAOuI,iBAAiB1G,QAExB7B,OAAOgB,OAAOD,QADZ9B,EAAE6C,IAAI9B,OAAOc,mBAAmBC,QAAS,MACnBf,OAAOc,mBAAmBC,QAAQN,GAElC,KAGxBT,OAAOgB,OAAO6G,QADZ5I,EAAE6C,IAAI9B,OAAOc,mBAAmB+G,QAAS,MACnB7H,OAAOc,mBAAmB+G,QAAQpH,GAElC,KAEtBR,aAAaoI,SACfrI,OAAOgB,OAAOe,OAAOxD,KAAKgC,2BAA4BG,gCAEtDwH,cAAclG,KAAKhC,OAAOgB,QAAQzC,KAAK+B,+BAAgCI,iCAGzEN,aAAaV,MAAMyI,gCAAgCrI,kDAAkD,IAkBzGE,OAAOc,sBACPd,OAAOoI,cCnEXzO,QAAQC,OAAO,YACZ2I,UAAU,WAAY,WACrB,OACExH,YAAa,oCACbsJ,SAAU,IACVrJ,WAAY,SAASgF,OAAQI,cAC3BJ,OAAOwI,YAAcpI,aAAaoI,gBCL1C7O,QAAQC,OAAO,YACZwB,SAAS,yBACRqN,6BAA8B,MAE/B9M,QAAQ,eAAgB,SAAS+G,SAAU7G,GAAI6M,uBAC9CtJ,KAAKoJ,eACLpJ,KAAKgF,MAAQ,SAASuE,iCAChB1J,EAAEC,YAAYyJ,kCAChBvJ,KAAKwJ,+BAEP,IAAIC,eAAgBhN,GAAGS,QACnBwM,aAAe1J,IAUnB,OATIuJ,iCACFjG,SAAS,WACPoG,aAAaF,gCACbC,cAAc9K,WACb2K,sBAAsBD,8BAEzBI,cAAc9K,UAGT8K,cAAc1K,SAGvBiB,KAAKwJ,8BAAgC,WACnCxJ,KAAKoJ,YAAY9I,OAAQ,EACzBN,KAAKoJ,YAAYhF,MAAO,EACxBpE,KAAKoJ,YAAYhJ,SAAU,GAG7BJ,KAAKI,QAAU,SAAS+D,QAASoF,iCAG/B,MAFAvJ,MAAKgF,QACLhF,KAAKoJ,YAAYhJ,QAAU+D,QACpBnE,KAAKgF,MAAMuE,kCAEpBvJ,KAAKM,MAAQ,SAAS6D,QAASoF,iCAG7B,MAFAvJ,MAAKgF,QACLhF,KAAKoJ,YAAY9I,MAAQ6D,QAClBnE,KAAKgF,MAAMuE,kCAEpBvJ,KAAKoE,KAAO,SAASD,QAASoF,iCAG5B,MAFAvJ,MAAKgF,QACLhF,KAAKoJ,YAAYhF,KAAOD,QACjBnE,KAAKgF,MAAMuE,oCC3CxBhP,QAAQC,OAAO,YACdmP,QAAQ,iBACT,SAASC,aACP,MAAOA,aAAYrN,QAAQ,cCH7BhC,QAAQC,OAAO,YACdmP,QAAQ,gBACT,SAASC,aACP,MAAOA,aAAYrN,QAAQ,YCH7BhC,QAAQC,OAAO,YACdmP,QAAQ,gBACT,SAASC,aACP,MAAOA,aAAYrN,QAAQ,aCH7BhC,QAAQC,OAAO,YACdmP,QAAQ,eACT,SAASC,aACP,MAAOA,aAAYrN,QAAQ,YCF7BhC,QAAQC,OAAO,YACdmP,QAAQ,iBACT,SAASC,aACP,MAAOA,aAAYrN,QAAQ,cCJ7BhC,QAAQC,OAAO,YACdmP,QAAQ,cACT,SAASC,aACP,MAAOA,aAAYrN,QAAQ,UCJ7BhC,QAAQC,OAAO,YACZmP,QAAQ,mBAAoB,aAAc,KAAM,UAAW,YAAa,YAAa,oBAAqB,SAAS1D,WAAYxJ,GAAIoN,QAAS9I,UAAW+I,UAAWC,mBACjK,OACEC,QAAW,SAASvP,QAOlB,MANAA,QAAOwP,QAAUxP,OAAOwP,YACpBJ,QAAQK,eAAeC,QACpB1P,OAAOiF,4BACVjF,OAAOwP,QAAQG,cAAgB,OAASP,QAAQK,eAAeC,QAG5D1P,QAET4P,cAAiB,SAASjL,UACxB,GAAIA,SAAS3E,OAAQ,CACnB,GAAI6P,kBAAmBlL,SAAS3E,OAAO6P,kBAAoBlL,SAAS3E,OAAOwP,QAAQK,gBACnF,KAAKA,kBACqB,MAApBlL,SAASmL,OAAgB,CAC3B,GAAIC,UAAW/N,GAAGS,OAClB6M,mBAAkB1M,OAAO+B,SAAS3E,OAAQ+P,SAC1C,IAAI/C,aAAcqC,UAAU/H,IAAI,cAChC0F,aAAYgD,gBAIlB,MAAOhO,IAAGoC,OAAOO,eAItB3E,QAAQ,gBAAiB,SAASE,eACjCA,cAAc+P,aAAaC,KAAK,sBAEjCpO,QAAQ,eAAgB,UAAW,QAAS,aAAc,YAAa,oBAAqB,SAASsN,QAASrN,MAAOyJ,WAAYlF,UAAWgJ,mBAC3I,GAAIa,QAAS,SAAShD,SAAUC,UAC9B,MAAOrL,OAAMoG,KAAK,oBACdgF,SAAYA,SACZC,SAAYA,WAEb1I,KAAK,SAASC,UACbyK,QAAQK,eAAeC,MAAQ/K,SAASjE,KAAKgP,MAC7CpJ,UAAUK,KAAK,WAGjByJ,cAAgB,WAElB,MAAOrO,OAAMoG,KAAK,uBACduH,MAASN,QAAQK,eAAeC,QAEhCG,kBAAoB,IACnBlK,QAAQ,SAAShB,UAClByK,QAAQK,eAAeC,MAAQ/K,SAAS+K,MACxCJ,kBAAkBe,aAEnBxK,MAAM,WACLyJ,kBAAkBgB,YAElBhK,UAAUK,KAAK,eAIrB,QACE2G,MAAO6C,OACPH,aAAcI,kBAIjBlB,QAAQ,qBAAsB,YAC7B,SAASG,WAKP,QAASkB,mBAAkBvQ,OAAQ+P,UACjC,QAASrK,iBAAgBf,UACvBoL,SAAS7L,QAAQS,UAGnB,QAASiB,eAAcjB,UACrBoL,SAAS3L,OAAOO,UAElB5C,MAAQA,OAASsN,UAAU/H,IAAI,SAC/BtH,OAAOwP,QAAQK,kBAAmB,EAClC9N,MAAM/B,QAAQ0E,KAAKgB,gBAAiBE,eAdtC,GAEI7D,OAFAyO,SAiBJ,QACE5N,OAAQ,SAAS5C,OAAQ+P,UACvBS,OAAON,MACLlQ,OAAQA,OACR+P,SAAUA,YAGdO,UAAW,SAASG,QACdA,QACFrL,EAAEsL,KAAKF,OAAQ,SAASjB,SACtBA,QAAQQ,SAAS3L,OAAOqM,UAG5BD,WAEFH,SAAU,WACRjL,EAAEsL,KAAKF,OAAQ,SAASjB,SACtBgB,kBAAkBhB,QAAQvP,OAAQuP,QAAQQ,YAE5CS,eCxFV,WAKI,GAMIzQ,QANA4Q,WAAa,WACbC,WAAa,WAMjB,KACI7Q,OAASD,QAAQC,OAAO4Q,YAC1B,MAAME,KAEJ9Q,OAASD,QAAQC,OAAO4Q,eAG5B5Q,OAAO2I,UAAU,eAAgB,WAAY,SAAU,WAAY,oBAAqB,SAASoI,SAAUC,OAAQlI,SAAUmI,mBAEzH,OACIC,UAAU,EACVC,cAAc,EACdC,SAAU,IACVC,QAAS,SAAgCC,SAAUC,QAE/C,GAAIC,YAAaD,OAAOE,YAEpBC,MAAQF,WAAWE,MAAM,uEAEzBC,cAAgB,4BACpB,IAAsC,OAAlCD,MAAM,GAAGA,MAAMC,eACf,KAAM,8DAEV,IAAIC,2BAA4BF,MAAM,GAAG7N,QAAQ8N,cAAe,IAC5DE,iBAAmBb,OAAOY,2BAI1BE,MAAQP,OAAOQ,cAAgBlB,UAGnC,OAFAI,mBAAkBe,iBAAiBF,OAE5B,SAA6BnH,MAAOC,QAASqH,OAIhD,GAAIF,cAAef,OAAOiB,MAAMF,cAAcpH,QAAUsH,MAAMF,cAAgBlB,UAC9EI,mBAAkBe,iBAAiBD,aAEnC,IAAIG,kBACAC,oBAAsBX,WAAWE,MAAM,qCAIvCQ,kBAHAH,eAAiBlB,YAAesB,kBAGbX,WAFAA,WAAW3N,QAAQ,+BAAgC,SAAWkO,aAAe,KAMhGnH,QAAQ,GAAGwH,aAAa,uBAAyBxH,QAAQ,GAAGwH,aAAa,4BAEzEH,MAAMI,KAAK,gBAAiBH,kBAC5BtH,QAAQ0H,GAAG1H,QAAQ2H,OAAS,GAAGC,KAAK,iBAAiB,IAErDP,MAAMI,KAAK,WAAYH,iBAG3B,IAEIO,mBAFAC,SAAY3B,SAASnG,SAAS,EAAO,IAGzC,IAAIqH,MAAMU,YACNF,kBAAoBzB,OAAOiB,MAAMU,iBAC9B,CAEH,GAAIC,oBAAqBb,aAAe,eACxCpH,OAAMiI,oBAAsB,EAC5BH,kBAAoBzB,OAAO4B,oBAE/B3B,kBAAkB4B,qBAAqBd,aAAcU,kBAAmB9H,OAExC,mBAArBsH,OAAMpG,YACboF,kBAAkB6B,iBAAiBf,cACnCpH,MAAMoI,OAAO,WACT,MAAO/B,QAAOiB,MAAMpG,YAAYlB,QACjC,SAAUqI,QACAA,QAAL,GACA/B,kBAAkBgC,oBAAoBlB,aAAciB,WAI5DrI,MAAMuI,iBAAiB,WACnB,MAAOrB,kBAAiBlH,QACzB,SAASwI,YACJA,YACAlC,kBAAkBgC,oBAAoBlB,aAAcoB,WAAWZ,UAM3EG,SAAS/H,aAMzB3K,OAAO2I,UAAU,yBAA0B,oBAAqB,qBAAsB,SAASsI,kBAAmBmC,oBAc9G,QAASC,oBAAmBV,YAAaW,iBAAkBC,YAAaC,iBACpE,GAGIC,UAHAC,SACAC,WAAa7P,KAAK8P,KAAKN,iBAAmBC,aAC1CM,QAAU/P,KAAK8P,KAAKJ,gBAAkB,EAItCC,UADeI,SAAflB,YACW,QACmBA,YAAvBgB,WAAaE,QACT,MAEA,QAKf,KAFA,GAAIC,gBAAmCH,WAAlBH,gBACjBO,EAAI,EACIJ,YAALI,GAAwBP,iBAALO,GAAsB,CAC5C,GAAIC,YAAaC,oBAAoBF,EAAGpB,YAAaa,gBAAiBG,YAElEO,sBAA+B,IAANH,IAAyB,WAAbN,UAAsC,QAAbA,UAC9DU,sBAAyBJ,IAAMP,gBAAkB,IAAmB,WAAbC,UAAsC,UAAbA,SAEhFC,OAAMvD,KADN2D,iBAAmBI,uBAAyBC,uBACjC,MAEAH,YAEfD,IAEJ,MAAOL,OAYX,QAASO,qBAAoBF,EAAGpB,YAAaa,gBAAiBG,YAC1D,GAAIE,SAAU/P,KAAK8P,KAAKJ,gBAAgB,EACxC,OAAIO,KAAMP,gBACCG,WACM,IAANI,EACAA,EACkBJ,WAAlBH,gBACoBb,YAAvBgB,WAAaE,QACNF,WAAaH,gBAAkBO,EACrBpB,YAAVkB,QACAlB,YAAckB,QAAUE,EAExBA,EAGJA,EAnEf,GAAIK,aAAc,OAuElB,QACI3J,SAAU,KACVtJ,YAAa,SAASkT,KAAMpC,OACxB,MAAOA,OAAM9Q,aAAeiS,mBAAmBkB,WAEnD3J,OACI4J,QAAS,KACTC,aAAc,KACdzC,aAAc,MAElBrH,KAAM,SAAqCC,MAAOC,QAASqH,OA2DvD,QAASwC,UAASC,KACVC,kBAAkBD,OAClB/J,MAAM+I,MAAQL,mBAAmBqB,IAAKzD,kBAAkB2D,oBAAoB7C,cAAed,kBAAkB4D,gBAAgB9C,cAAeyB,iBAC5I7I,MAAMmK,WAAWC,QAAUL,IAC3BM,oBAGIrK,MAAM6J,cACN7J,MAAM6J,cAAe7H,cAAgB+H,OAKjD,QAASO,sBACL,GAAIC,MAAOC,SAASlE,kBAAkBmE,eAAerD,gBAAkB,CAEvEpH,OAAM+I,MAAQL,mBAAmB6B,KAAMjE,kBAAkB2D,oBAAoB7C,cAAed,kBAAkB4D,gBAAgB9C,cAAeyB,iBAC7I7I,MAAMmK,WAAWC,QAAUG,KAC3BvK,MAAMmK,WAAWO,KAAO1K,MAAM+I,MAAM/I,MAAM+I,MAAMnB,OAAS,GACrD5H,MAAMmK,WAAWO,KAAO1K,MAAMmK,WAAWC,QACzCpK,MAAM2K,WAAW3K,MAAMmK,WAAWO,MAElCL,oBAQR,QAASA,qBACL,GAAIrC,aAAc1B,kBAAkBmE,eAAerD,cAC/CwD,aAAetE,kBAAkB4D,gBAAgB9C,cACjDlG,WAAaoF,kBAAkB2D,oBAAoB7C,aAEvDpH,OAAM6K,MAAMC,OAAS9C,YAAc,GAAK4C,aAAe,EACvD5K,MAAM6K,MAAME,MAAQ5R,KAAK6R,IAAIhD,YAAc4C,aAAc1J,YACzDlB,MAAM6K,MAAMvR,MAAQ4H,WAGxB,QAAS8I,mBAAkBD,KACvB,MAAQN,aAAYwB,KAAKlB,MAAaA,IAAJ,GAAWA,KAAO/J,MAAMmK,WAAWO,KA/FzE,GAAIvD,OAAQG,MAAMF,cAAiBlB,WAC/BkB,aAAepH,MAAMoH,cAAgBE,MAAMF,cAAiBlB,UAEhE,KAAKI,kBAAkB4E,aAAa9D,gBAAkBd,kBAAkB4E,aAAa/D,OAAQ,CACzF,GAAIgE,WAAa/D,eAAiBlB,WAAc,SAAWkB,aAAe,KAAO,GACjF,MAAM,gDAAkD+D,UAAY,iEAGnEnL,MAAM4J,UAAW5J,MAAM4J,QAAU,GACtC5J,MAAMoL,eAAiBhW,QAAQiW,UAAU/D,MAAM8D,gBAAkBpL,MAAMsL,QAAQC,MAAMjE,MAAM8D,iBAAkB,EAC7GpL,MAAMwL,cAAgBpW,QAAQiW,UAAU/D,MAAMkE,eAAiBxL,MAAMsL,QAAQC,MAAMjE,MAAMkE,gBAAiB,CAE1G,IAAI3C,iBAAkB1P,KAAKsS,IAAIzL,MAAM4J,QAAS,EAC9C5J,OAAM+I,SACN/I,MAAMmK,YACFO,KAAM,EACNN,QAAS,GAEbpK,MAAM6K,OACFC,MAAO,EACPC,MAAO,EACPzR,MAAO,GAGX0G,MAAMoI,OAAO,WACT,OAAQ9B,kBAAkB2D,oBAAoB7C,cAAgB,GAAKd,kBAAkB4D,gBAAgB9C,eACtG,SAASQ,QACAA,OAAJ,GACA0C,uBAIRtK,MAAMoI,OAAO,WACT,MAAQ9B,mBAAkB4D,gBAAgB9C,eAC3C,SAASgD,QAASsB,UACbtB,SAAWsB,UACX5B,SAAS9J,MAAMmK,WAAWC,WAIlCpK,MAAMoI,OAAO,WACT,MAAO9B,mBAAkBmE,eAAerD,eACzC,SAASY,YAAa2D,cACjB3D,aAAe2D,cACf7B,SAAS9B,eAIjBhI,MAAM2K,WAAa,SAASZ,KACpBC,kBAAkBD,MAClBzD,kBAAkBsF,eAAexE,aAAc2C,WAmDnE1U,OAAOwW,OAAO,gBAAiB,oBAAqB,SAASvF,mBAEzD,MAAO,UAASkC,WAAYoC,aAAcxD,cAItC,GAH8B,mBAAnB,gBACPA,aAAelB,aAEdI,kBAAkB4E,aAAa9D,cAChC,KAAM,2DAA6DA,aAAe,8CAEtF,IAAI0E,KACAC,KACJ,OAAIvD,sBAAsBwD,QACtBpB,aAAeJ,SAASI,eAAiB,WAErCmB,MADAzF,kBAAkB2F,YAAY7E,cACtB,GAECd,kBAAkBmE,eAAerD,cAAgB,GAAKwD,aAEnEkB,IAAMC,MAAQnB,aACdtE,kBAAkB4F,gBAAgB9E,aAAcwD,cAEzCpC,WAAW2D,MAAMJ,MAAOD,MAExBtD,eAKnBnT,OAAO+B,QAAQ,oBAAqB,WAEhC,GACIgV,wBADAC,YAGJxR,MAAKwM,iBAAmB,SAASiF,YACQ,mBAA1BD,WAAUC,cACjBD,UAAUC,aACNC,WAAW,GAEfH,uBAAyBE,aAIjCzR,KAAKqQ,aAAe,SAASoB,YACzB,MAAyC,mBAA1BD,WAAUC,aAG7BzR,KAAK2R,kBAAoB,WACrB,MAAOJ,yBAGXvR,KAAKqN,qBAAuB,SAASoE,WAAYG,IAAKzM,OAClDqM,UAAUC,YAAYI,kBAAoBD,IAC1CJ,UAAUC,YAAYK,QAAU3M,OAEpCnF,KAAK+Q,eAAiB,SAASU,WAAYG,KACvCJ,UAAUC,YAAYI,kBAAkBE,OAAOP,UAAUC,YAAYK,QAASF,MAElF5R,KAAK4P,eAAiB,SAAS6B,YAC3B,GAAIO,QAASR,UAAUC,YAAYI,iBACnC,OAAOG,QAASA,OAAOR,UAAUC,YAAYK,SAAW,GAG5D9R,KAAKqR,gBAAkB,SAASI,WAAYG,KACxCJ,UAAUC,YAAY1B,aAAe6B,KAEzC5R,KAAKqP,gBAAkB,SAASoC,YAC5B,MAAOD,WAAUC,YAAY1B;EAGjC/P,KAAKyN,oBAAsB,SAASgE,WAAYG,KAC5CJ,UAAUC,YAAY3D,iBAAmB8D,KAE7C5R,KAAKoP,oBAAsB,SAASqC,YAChC,MAAOD,WAAUC,YAAY3D,kBAGjC9N,KAAKsN,iBAAmB,SAASmE,YAC7BD,UAAUC,YAAYC,WAAY,GAGtC1R,KAAKoR,YAAc,SAASK,YACxB,MAAOD,WAAUC,YAAYC,aAIrClX,OAAOyX,SAAS,qBAAsB,WAElC,GAAIC,cAAe,0CAEnBlS,MAAKmS,QAAU,SAAS/Q,MACpB8Q,aAAe9Q,MAGnBpB,KAAKoS,KAAO,WACR,OACItD,QAAS,WACL,MAAOoD,sBCrZ3B3X,QAAQC,OAAO,YACZ2I,UAAU,gBAAiB,WAC1B,OACE8B,SAAU,IACVtJ,YAAa,0BACbwJ,OACEkN,YAAa,gBAGfzW,WAAY,SAASgF,QACnBA,OAAO0R,kBACLC,SACEC,OACEhO,KAAM,MACNiO,gBAAiB,cACjB7M,OAAQ,GACR8M,OAAQ,EACR/M,MAAO,IAETgN,WAAaC,SAAS,GACtBC,SAAWD,SAAS,GACpBE,SAAWF,SAAS,GACpBG,QAAS,UAAW,YAEtBnR,SACEoR,YAAcJ,SAAS,GACvBK,QACEC,OACGN,SAAS,IAGdO,WAAW,EACXC,WAAY,IACZC,SAAU,GACVC,QAAS,MAAO,OAChBC,UAAW,MACXC,KAAM,WACNrY,MACEwU,SAAS/O,OAAOyR,aACf,IAAM1C,SAAS/O,OAAOyR,gBAG3BoB,OACEC,KAAM,IAERC,UACED,KAAM,IAERE,SAAS,OChDnBrZ,QAAQC,OAAO,YACZ2I,UAAU,gBAAiB,WAC1B,OACE8B,SAAU,IACVtJ,YAAc,4CACdC,WAAY,SAASgF,OAAQG,WAC3BH,OAAOiT,eAAiB,SAASC,aAC/BlT,OAAOkT,YAAcA,aAGvBlT,OAAOmT,6BAA+B,WACpChT,UAAUK,KAAK,UAAYR,OAAOkT,YAAc,UCX1DvZ,QAAQC,OAAO,YACbwW,OAAO,iBAAkB,WACvB,MAAO,UAAU5O,OACf,MAAIA,OACK4R,OAAOC,IAAI7R,OAAO8R,QAAQC,OAAO,sBAEnC/R,SCPb7H,QAAQC,OAAO,YACZwB,SAAS,2BACRoY,uBAA0B,cAC1BC,gBAAmB,0BAEpBlR,UAAU,kBAAmB,UAAW,0BAA2B,SAASmR,QAASC,yBACpF,OACEpP,OACEqP,KAAQ,KAEVnW,SAAS,EACToW,QAAQ,UACRC,SAAU,8EACVxP,KAAM,SAASC,MAAOC,QAASqH,MAAOkI,SAQpC,QAASC,gBAAeC,OACtB,MAAOP,SAAQ,kBAAkBO,OARnC1P,MAAM2P,SAAWrI,MAAMqI,WAAY,EACnC1P,QAAQ2P,gBACNZ,OAAQI,wBAAwBH,uBAChCY,UAAW,GAAIC,MACfC,KAAM,KAORP,QAAQQ,YAAYC,QAAQR,gBAE5BzP,MAAMkQ,qBAAuB,SAASR,OACpC,MAAIA,OACKb,OAAOa,MAAON,wBAAwBH,wBAAwBD,OAAOI,wBAAwBF,iBAE7F,IAIXM,QAAQW,SAASF,QAAQjQ,MAAMkQ,2BCnCvC9a,QAAQC,OAAO,YACZ+B,QAAQ,cAAe,SAAS0J,WAAYlF,UAAW+I,UAAWyL,6BAEjEvV,KAAK7E,OACL,IAAI+K,aAAclG,IAClBA,MAAKzD,QAAU,IACf,IAAIiZ,gBAAiB,IAErBxV,MAAKuG,UAAY,WACf,MAAOvG,MAAK7E,KAAKmL,QAGnBtG,KAAKwG,WAAa,SAASiP,aACzBzV,KAAKzD,QAAUuN,UAAU/H,IAAI0T,aAC7BD,eAAiBxV,KAAKzD,QACtByD,KAAK7E,KAAKmL,OAASvF,UAAU2U,SAC7B1V,KAAK7E,KAAKiL,QACVpG,KAAK7E,KAAKkL,WAAa,GAGzBrG,KAAKiH,YAAc,WACjBjH,KAAK7E,KAAKmL,OAAOiB,EAAI,IAGvBvH,KAAK2G,UAAY,SAASD,gBACxB1G,KAAK7E,KAAKmL,OAAOqP,EAAIjP,gBAGvB1G,KAAK4V,QAAU,SAASxP,MACtBF,YAAY/K,KAAKiL,KAAOA,KACpBA,KAAK9K,KACP4K,YAAY/K,KAAKkL,WAAaD,KAAK9K,KAAKC,OAExC6K,KAAK9K,QACL8K,KAAK9K,KAAKC,MAAQ,IAItByE,KAAKsH,UAAY,SAASuO,aACxB7V,KAAK7E,KAAKmL,OAAOiB,EAAIsO,aAGvB7V,KAAK+G,SAAW,SAASD,eACvB,GAAIgP,SAAU9V,KAAK7E,KAAKmL,OAAOyP,QAC3BD,SAEEA,QAAQrR,QAAQqC,eAAiB,IAA+B,KAAzBgP,QAAQrR,QAAQ,KACzDqR,QAAU,IAAMhP,cAGZgP,QAAQrR,QAAQqC,eAAiB,KACnCgP,QAAU,MAIdA,QAAUhP,cAGZ9G,KAAK7E,KAAKmL,OAAOyP,SAAWD,SAG9B9V,KAAKoH,QAAU,SAASoH,YACtBxO,KAAK7E,KAAKmL,OAAOoJ,KAAOlB,YAG1BxO,KAAKmG,WAAa,WAMhB,MALAnG,MAAK7E,KAAKmL,OAASzG,EAAEmW,KAAKhW,KAAK7E,KAAKmL,OAAQiP,6BAC5CvV,KAAK7E,KAAKmL,OAASzG,EAAEoW,KAAKjW,KAAK7E,KAAKmL,OAAQ,SAASuO,OACnD,MAAOhV,GAAEsC,QAAQ0S,SAAWhV,EAAEqW,SAASrB,SAEzC9T,UAAU2U,OAAO1V,KAAK7E,KAAKmL,QACpBkP,eAAeW,QAAQnW,KAAK7E,KAAKmL,QAAQnH,KAAK+G,YAAY0P,YCtEvErb,QAAQC,OAAO,YACZ2I,UAAU,SAAU,WACnB,OACI8B,SAAY,IACZtJ,YAAe,4BACfC,WAAc,SAASgF,OAAQqF,WAAYmQ,QAASrV,UAAWsV,aAC3DzV,OAAOwV,QAAUA,QACjBC,YAAYC,cAAcnX,KAAK,SAAShE,MACtCyF,OAAO2V,gBAAkBpb,KAAKqb,kBCR5Cjc,QAAQC,OAAO,YACbwW,OAAO,cAAe,SAASyF,gBAC7B,MAAO,UAAUrU,OACf,MAAIA,OACKA,MAEAqU,kBCNflc,QAAQC,OAAO,YACZ2I,UAAU,eAAgB,SAAS2G,WAClC,OACEnO,YAAa,wCACb0C,SAAS,EACT8G,OACEuR,MAAS,IACTna,QAAW,WACXoa,UAAa,IACbC,gBAAmB,KAErB1R,KAAM,SAASC,MAAOC,QAASqH,OAC7BtH,MAAM0R,WAAkC,SAArBpK,MAAMoK,YAE3Bjb,WAAY,SAASgF,QAEnB,GAAIrE,SAAUuN,UAAU/H,IAAInB,OAAOrE,QAEnCqE,QAAOkW,+BAAiC,WACtC,MAAIlW,QAAOmW,eAAiBnW,OAAOoW,cAAgBnX,EAAEsC,QAAQvB,OAAO8U,SAAW9U,OAAO8U,OAAO3I,OAAS,GACpGnM,OAAOqW,sBACPrW,OAAOoW,cAAiBnX,EAAEsC,QAAQvB,OAAOqW,iBAAmBrW,OAAOmW,oBAGnExa,SAAQ4Z,SACN5O,EAAK3G,OAAO8U,SACXvW,KAAKyB,OAAOsW,wCAInBtW,OAAOsW,sCAAwC,SAAS/b,MACjD0E,EAAEC,YAAY3E,OAIjByF,OAAOqW,cAAgB,KACvBrW,OAAOoW,cAAe,IAJtBpW,OAAOqW,cAAgB9b,KACvByF,OAAOoW,cAAiBnX,EAAEsC,QAAQvB,OAAOqW,iBAAmBrW,OAAOmW,gBAOvEnW,OAAOuW,gBAAkB,EACzBvW,OAAOwW,mCAAqC,SAASvT,OACnD,GAAIwT,SAAUxT,MAAMwT,OACpB,IAAIzW,OAAOqW,cAAe,CACxB,GAAIK,0BAA2B1W,OAAOqW,cAAclK,OAAS,CAC7D,QAAQsK,SACN,IAAK,IACHzW,OAAO2W,iBACP,MACF,KAAK,IACH3W,OAAOuW,gBAAkBvW,OAAOuW,kBAAoBG,yBAClD,EACA1W,OAAOuW,gBAAkB,CAC3B,MACF,KAAK,IACHvW,OAAOuW,gBAA6C,IAA3BvW,OAAOuW,gBAC9BG,yBACA1W,OAAOuW,gBAAkB,CAC3B,MACF,KAAK,IACHvW,OAAO4W,SAAS5W,OAAOqW,cAAcrW,OAAOuW,kBAC5CvW,OAAOuW,gBAAkB,CACzB,MACF,SACE,UAMRvW,OAAO2W,gBAAkB,WACvB3W,OAAOoW,cAAe,EACtBpW,OAAOuW,gBAAkB,EACzBvW,OAAO8U,OAAS,GAChB9U,OAAOmW,eAAgB,GAGzBnW,OAAO4W,SAAW,SAASd,OACpB7W,EAAEC,YAAY2X,iBACjBA,iBAEF7W,OAAO8V,MAAQA,MACf9V,OAAO8U,OAASgB,MAAM9V,OAAO+V,WACzB/V,OAAOqW,gBACTrW,OAAOqW,cAAgB,MAEzBrW,OAAOmW,eAAgB,EACvBnW,OAAOoW,cAAe,EACtBpW,OAAOuW,gBAAkB,GAG3BvW,OAAOoE,MAAQ,WACbpE,OAAO8V,MAAQ,KACf9V,OAAOmW,eAAgB,EACvBnW,OAAO8U,OAAS,GAGlB,IAAI+B,gBAAiB7W,OAAO2M,OAAO,QAAS,SAASmK,UAC/C7X,EAAE6C,IAAIgV,SAAU,UAClB9W,OAAO4W,SAASE,UAChBD,wBCrGZ,WAOE,QAASE,qBAAoBnb,MAAOob,aAAcnb,GAAIob,iBAAkBC,WAAYC,YAUhF,QAAS/Z,UACP,GAAIga,qBAAsBvb,GAAGS,OAE7B3C,SAAQ6K,QAAQ6S,aAAanV,QAC7B,IAAIoV,WAAY3d,QAAQ6K,QAAQ+S,cAgDhC,OA/CA5d,SAAQ6K,QAAQ,QAAQ/H,OAAO6a,WAE/BA,UAAU7T,QAEV6T,UAAUvU,OAAO,UACjBuU,UAAUtU,KAAK,SAAU,SAAU1F,GACH,IAA1BA,EAAE4F,OAAOC,MAAMgJ,QACjBiL,oBAAoBnZ,OAAO,6BAE7B,IAAIhC,MAAOqB,EAAE4F,OAAOC,MAAM,EACU,KAAhClH,KAAK2H,KAAKC,QAAQ,WACpBuT,oBAAoBnZ,OAAO,iBAGzBhC,KAAK0H,KAAO,UACdyT,oBAAoBnZ,OAAO,yBAG7B,IAAIuZ,WAAY,GAAIhb,SACpBgb,WAAU/a,OAAO,QAASR,MAE1BL,OACEiD,OAAQ,OACRD,IAAKqY,iBAAmB,WACxB5N,SACEoO,kBAAmBP,WACnBQ,eAAgBC,OAChBC,cAAeD,QAEjBpd,KAAMid,UACNK,iBAAkBle,QAAQme,SAC1BC,kBAAmB,SAAUxd,MAEP,gBAATA,QACTA,KAAOuI,EAAEkV,UAAUzd,MAErB,IAAI0d,OAAQ,GAAId,YAAW5c,KAC3B,OAAO0d,UAERzY,QAAQ,SAAUA,SACnB4X,oBAAoBrZ,QAAQyB,WAC3BE,MAAM,SAAUA,OACjB0X,oBAAoBnZ,OAAOyB,WAKxB0X,oBAAoBjZ,QAG7B,QAASgD,KAAIV,IACX,MAAO7E,QACLiD,OAAQ,MACRD,IAAKqY,iBAAmB,QAAUxW,GAClC4I,SACEoO,kBAAmBP,WACnBQ,eAAgBC,OAChBC,cAAeD,QAEjBE,iBAAkBle,QAAQme,SAC1BC,kBAAmB,SAAUxd,MAI3B,MAHoB,gBAATA,QACTA,KAAOuI,EAAEkV,UAAUzd,OAEd,GAAI4c,YAAW5c,SAK5B,QAAS2d,aAAYzX,GAAImS,KAAMuF,OAAQC,YACrC,MAAOxc,QACLiD,OAAQ,QACRD,IAAKqY,iBAAmB,QAAUxW,GAClC4I,SACEoO,kBAAmBP,WACnBQ,eAAgBC,OAChBC,cAAeD,QAEjBpd,MACEqY,KAAMA,KACNuF,OAAQA,OACRC,WAAYA,YAEdP,iBAAkBle,QAAQme,SAC1BC,kBAAmB,SAAUxd,MAI3B,MAHoB,gBAATA,QACTA,KAAOuI,EAAEkV,UAAUzd,OAEd,GAAI4c,YAAW5c,SAK5B,QAAS8d,iBAAgB5X,GAAI6X,MAAOF,YAClC,MAAOxc,QACLiD,OAAQ,OACRD,IAAKqY,iBAAmB,QAAUxW,GAAK,IAAM6X,MAC7CjP,SACEoO,kBAAmBP,WACnBQ,eAAgBC,OAChBC,cAAeD,QAEjBpd,KAAM6d,aApHV,GAAIf,aAAc,qCACdE,cAAgB,uIAEpBnY,MAAKhC,OAASA,OACdgC,KAAK+B,IAAMA,IACX/B,KAAKmZ,OAASpX,IACd/B,KAAK8Y,YAAcA,YACnB9Y,KAAKiZ,gBAAkBA,gBAkH3B,QAASG,mBAAkBxB,aAAcpb,MAAOqb,iBAAkBC,WAAYuB,oBAAqBC,WACjG,QAASvB,YAAW5c,MAClB6E,KAAKqB,GAAKlG,KAAKkG,GACfrB,KAAKwT,KAAOrY,KAAKqY,KACjBxT,KAAK2F,MAAQxK,KAAKwK,MAClB3F,KAAK4F,OAASzK,KAAKyK,OACnB5F,KAAKgZ,aACL,KAAK,GAAIE,SAAS/d,MAAK6d,WACrBhZ,KAAKgZ,WAAWE,OAAS,GAAII,WAAUne,KAAK6d,WAAWE,QAkG3D,MA9FAnB,YAAWwB,UAAUC,WAAa,SAAS7T,MAAOC,QAChD,GAAI6T,MACJ,IAAI9T,OAASC,OAAQ,CACnB,GAAI8T,UAAW/T,MAAQC,OACnB+T,UAAY3Z,KAAK2F,MAAQ3F,KAAK4F,MAEhC6T,OADEC,SAAWC,UACL/T,OAAQ5F,KAAK4F,OAEbD,MAAQ3F,KAAK2F,UAGnBA,SACF8T,MAAQ9T,MAAQ3F,KAAK2F,OAEnBC,SACF6T,MAAQ7T,OAAQ5F,KAAK4F,OAGzB,IAAIgU,SACFjU,MAAOrH,KAAKC,MAAMyB,KAAK2F,MAAQ8T,OAC/B7T,OAAQtH,KAAKC,MAAMyB,KAAK4F,OAAS6T,OACjCA,MAAOA,MAET,OAAOG,SAGT7B,WAAWwB,UAAUM,UAAY,SAASlU,MAAOC,OAAQsT,OACxC,IAAXtT,SACFA,OAAS,KAGX,IAAIkU,WAAY9Z,KAAKgZ,WAAWE,OAC5Ba,gBAAkBD,UAAUN,WAAW7T,MAAOC,OAElD,QACEoU,mBAAoB,OAASha,KAAKR,IAAI,WAAY6Z,oBAAqB,OAAS,IAChFY,kBAAmB3b,KAAK4b,MAAMH,gBAAgBpU,QAAUmU,UAAUnU,QAAW3F,KAAK2F,OAAS,KAC3FwU,sBAAuB,IAAMJ,gBAAgBK,GAAK,OAASL,gBAAgBM,GAAK,KAChFzU,OAAUmU,gBAAgBnU,SAAW,KACrCD,MAASoU,gBAAgBpU,QAAU,KACnC2U,oBAAqB,YACrBrM,SAAY,aAIhB8J,WAAWwB,UAAU/Z,IAAM,SAAU0Z,MAAOvT,MAAOwO,QAMjD,IAAK,GALDoG,KAAM3C,aACR,gEAEE4C,MAAQxa,KAAKqB,GAAGoZ,WAChBC,YAAc,GACTnM,EAAE,EAAGA,EAAIiM,MAAMzN,OAAQwB,IAC1BA,EAAI,IAAM,GAAW,IAANA,IACjBmM,aAAe,KAEjBA,aAAeF,MAAMG,OAAOpM,EAAG,EAEjC,OAAOgM,MACLK,SAAU/C,iBACVxW,GAAIqZ,YACJxB,MAAOA,MACPvT,MAAOA,MACPwO,OAAQA,UAIZ4D,WAAWwB,UAAUN,gBAAkB,SAAUC,MAAOY,WACtD,GAAI3e,OACFif,GAAIN,UAAUM,GACdS,GAAIf,UAAUe,GACdR,GAAIP,UAAUO,GACdS,GAAIhB,UAAUgB,GAKhB,OAHIhB,WAAUiB,SACZ5f,KAAK4f,OAASjB,UAAUiB,QAEnBve,OACLiD,OAAQ,OACRD,IAAKqY,iBAAmB,QAAU7X,KAAKqB,GAAK,IAAM6X,MAClDjP,SACEoO,kBAAmBP,WACnBQ,eAAgBC,OAChBC,cAAeD,QAEjBpd,KAAMA,KACNwd,kBAAmB,SAAUxd,MAI3B,MAHoB,gBAATA,QACTA,KAAOuI,EAAEkV,UAAUzd,QAEb+d,MAAO,GAAII,WAAUne,KAAK6d,WAAWE,aAK5CnB,WAGT,QAASiD,oBACP,QAAS1B,WAAUne,MACf6E,KAAKoa,GAAKjf,KAAKif,GACfpa,KAAK6a,GAAK1f,KAAK0f,GACf7a,KAAKqa,GAAKlf,KAAKkf,GACfra,KAAK8a,GAAK3f,KAAK2f,GACf9a,KAAK+a,OAAS5f,KAAK4f,OA2CvB,MAxCAzB,WAAUC,UAAU5T,MAAQ,WAC1B,MAAO3F,MAAK6a,GAAK7a,KAAKoa,IAGxBd,UAAUC,UAAU3T,OAAS,WAC3B,MAAO5F,MAAK8a,GAAK9a,KAAKqa,IAGxBf,UAAUC,UAAU0B,QAAU,SAASxB,OACrC,GAAIyB,aAAc,GAAI5B,YACpBc,GAAI9b,KAAKC,MAAMyB,KAAKoa,GAAKX,OACzBoB,GAAIvc,KAAKC,MAAMyB,KAAK6a,GAAKpB,OACzBY,GAAI/b,KAAKC,MAAMyB,KAAKqa,GAAKZ,OACzBqB,GAAIxc,KAAKC,MAAMyB,KAAK8a,GAAKrB,QAE3B,OAAOyB,cAGT5B,UAAUC,UAAUC,WAAa,SAAU7T,MAAOC,QAEhD,GAAI6T,MACJ,IAAI9T,OAASC,OAAQ,CACnB,GAAI8T,UAAW/T,MAAQC,OACnB+T,UAAY3Z,KAAK2F,QAAU3F,KAAK4F,QAElC6T,OADEC,SAAWC,UACL/T,OAAQ5F,KAAK4F,SAEbD,MAAQ3F,KAAK2F,YAGnBA,SACF8T,MAAQ9T,MAAQ3F,KAAK2F,SAEnBC,SACF6T,MAAQ7T,OAAQ5F,KAAK4F,SAGzB,OAAO5F,MAAKib,QAAQxB,QAGfH,UA9RT/e,QAAQC,OAAO,gBAAiB,gBAC7Bqa,MAAM,sBAAuB,MAC7BlL,QAAQ,YAAaqR,kBACrBrR,QAAQ,aAAcyP,mBACtB7c,QAAQ,eAAgBob,wBCJ7Bpd,QAAQC,OAAO,YACZ2I,UAAU,gBAAiB,SAAS3G,MAAO2e,aAAcC,oBACxD,OACEnW,SAAU,IACVtJ,YAAa,yCACbwJ,OACE0T,MAAS,IACTwC,UAAa,IACbzE,gBAAmB,IACnB0E,UAAa,IACbpC,MAAS,IACTqC,SAAY,MAEd3f,WAAY,SAASgF,QACnBA,OAAO2a,SAAWhhB,QAAQiW,UAAU5P,OAAO2a,UAAY3a,OAAO2a,UAAW,EACzE3a,OAAO5C,OAAS,WACdmd,aAAand,SAASmB,KACpB,SAASiB,SACPQ,OAAOiY,OACLxX,GAAIjB,QAAQiB,GACZma,QAAS,KACTC,IAAK,MAEP7a,OAAO8a,WAAatb,SAEtB,SAASE,OACP2B,QAAQC,IAAI5B,QAEd,SAASP,UACPkC,QAAQC,IAAInC,aAKlBa,OAAO+a,KAAO,WACZP,mBAAmBxa,OAAOiY,OAAO1Z,KAAK,SAAS0Z,OAC5B,OAAbA,MAAMxX,GACRT,OAAOiY,MAAQ,MAEfjY,OAAOiY,MAAQA,MACfsC,aAAapZ,IAAInB,OAAOiY,MAAMxX,IAAIlC,KAAK,SAASC,UAC9CwB,OAAO8a,WAAatc,SAASjE,KAC7ByF,OAAOgb,mBAOjB1W,KAAM,SAASC,MAAOC,SAEKmT,SAArBpT,MAAMuW,aACRvW,MAAMuW,WAAa,MAGrBvW,MAAMyW,UAAY,WAChB,GAAIzW,MAAMuW,WACRvW,MAAM0W,aAAe1W,MAAMuW,WAAW7B,UAAUzU,QAAQ0W,SAASnW,QAASP,QAAQ0W,SAASlW,SAAUT,MAAM+T,WACtG,CACL,GAAI6C,YAAapM,SAASxK,MAAM+T,MAAM8C,MAAM,KAAK,GAAI,IACjDC,YAActM,SAASxK,MAAM+T,MAAM8C,MAAM,KAAK,GAAI,GACtD7W,OAAM0W,cACJK,mBAAoB,OACpBjO,SAAY,WACZtI,MAASP,QAAQ0W,SAASnW,QAC1BC,OAAUtH,KAAK4b,MAAM9U,QAAQ0W,SAASnW,QAAUsW,YAAcF,YAAc,QAKlF5W,MAAMoI,OAAO,QAAS,SAAS4O,UACzBA,UAAYA,SAAS9a,IACvB8Z,aAAapZ,IAAIoa,SAAS9a,IAAIlC,KAAK,SAASC,UAC1C+F,MAAMuW,WAAatc,SAASjE,SAKlCgK,MAAMoI,OAAO,aAAc,WACzBpI,MAAMyW,cACL,GAEHxW,QAAQgX,OAAOjX,MAAMyW,WAErBzW,MAAMkX,YAAc,WAClBlX,MAAM0T,MAAMxX,GAAK,MAGnB8D,MAAMmX,UAAY,WAChBlB,mBAAmBjW,MAAM0T,OACtB1Z,KAAK,SAASiB,SACb6B,QAAQC,IAAI9B,gBC3F1B7F,QAAQC,OAAO,gBACZoB,WAAW,qBAAsB,SAAUgF,OAAQ0C,SAAUiZ,eAAgBpB,aAAc7B,UAAWD,oBAAqBjB,UAAWoE,QACrI5b,OAAO6b,aAAe,KACtB7b,OAAO8b,UAAW,EAClB9b,OAAO4b,OAASA,OAChB5b,OAAO+b,UAAW,EAClB/b,OAAOgc,0BACPhc,OAAOwX,UAAYA,UAEdxX,OAAOiY,QACVjY,OAAOiY,MAAQ,KACfsC,aAAapZ,IAAIqW,UAAU/W,IAAIlC,KAAK,SAASiB,SAC3CQ,OAAOiY,MAAQzY,QAAQjF,QAI3ByF,OAAO2M,OAAO,QAAS,SAAUsL,OAC/B,GAAKA,MAAL,CAIA,GAAI8D,WAAW,CACf,KAAK,GAAIzD,SAASL,OAAMG,WACtB,GAAuC,SAAnCH,MAAMG,WAAWE,OAAO6B,OAAmB,CAC7C4B,UAAW,CACX,OAGJ/b,OAAO+b,SAAWA,SAElB/b,OAAOic,UAAYhE,MAAMW,WAAW,IAAK,KAEzC9V,EAAE,6BAA6B5B,IAAI,OAAQ,WACzC4B,EAAE1D,MAAM8c,OACNC,aAAa,EACbC,WAAW,EACXC,aAAa,EACbC,YAAY,GACX,WACDtc,OAAOuc,UAAYnd,SAIvBY,OAAOwc,UAAYvE,MAAMrZ,IAAI,WAAY6Z,oBAAqB,OACzDzY,OAAO4b,SACV5b,OAAO4b,OAASa,OAAOC,KAAKzE,MAAMG,aAGpCpY,OAAO2c,oBAGT3c,OAAO2M,OAAO,eAAgB,SAASiQ,MACrC,GAAK5c,OAAOiY,MAAZ,CAGA,GAAI8D,WAAW,CACf,KAAK,GAAIzD,SAAStY,QAAOiY,MAAMG,WAC7B,GAA8C,SAA1CpY,OAAOiY,MAAMG,WAAWE,OAAO6B,QAAqB7B,QAAUsE,KAAM,CACtEb,UAAW,CACX,OAGJ/b,OAAO+b,SAAWA,YAGpB/b,OAAO6c,WAAa,SAAUvE,OAC5B,IAAKA,MAAO,CACVA,MAAQmE,OAAOC,KAAK1c,OAAOiY,MAAMG,YAAY,EAC7C,KAAK,GAAI1b,OAAOsD,QAAOiY,MAAMG,WAC3B,GAA4C,SAAxCpY,OAAOiY,MAAMG,WAAW1b,KAAKyd,OAAmB,CAClD7B,MAAQ5b,GACR,QAIN,GAAIwc,WAAYlZ,OAAOiY,MAAMG,WAAWE,OAAO+B,QAAQra,OAAOic,UAAUpD,MAExE7Y,QAAOuc,UAAUO,YACfC,YAAa7D,UAAUnU,QAAUmU,UAAUlU,WAG7ChF,OAAOuc,UAAUS,WACf9D,UAAUM,GACVN,UAAUO,GACVP,UAAUe,GACVf,UAAUgB,KAGZla,OAAO8b,UAAW,EAClB9b,OAAO6b,aAAevD,OAGxBtY,OAAO2c,eAAiB,WACtB3c,OAAOid,aAAejd,OAAOid,gBAE7B,KAAK,GAAI3E,SAAStY,QAAOiY,MAAMG,WAAY,CACzC,GAAIe,iBAAkBnZ,OAAOiY,MAAMG,WAAWE,OAAOM,WAAW,IAAK,IACrE5Y,QAAOgc,uBAAuB1D,QAC5B4E,cAAexf,KAAKC,OAAO,IAAMwb,gBAAgBnU,UAAY,GAAK,KAClEmY,iBAAkB,MAClBC,eAAiB1f,KAAKC,OAAO,IAAMwb,gBAAgBpU,SAAW,GAAK,KACnEsY,gBAAiB,OAGnBrd,OAAOid,aAAa3E,OAAStY,OAAOiY,MAAMgB,UAAU,IAAK,IAAKX,SAIlEtY,OAAO+B,KAAO,SAAUuW,OAEtB,GAAIgF,iBAAkBtd,OAAOuc,UAAUgB,aAEnCC,aAAe,GAAI9E,YACrBc,GAAI8D,gBAAgBG,EACpBxD,GAAIqD,gBAAgBI,GACpBjE,GAAI6D,gBAAgBK,EACpBzD,GAAIoD,gBAAgBM,GACpBzD,OAAQ,QAUV,OARAqD,cAAeA,aAAanD,QAAQ,EAAIra,OAAOic,UAAUpD,OACrD2E,aAAavD,GAAKja,OAAOiY,MAAMlT,QACjCyY,aAAavD,GAAKja,OAAOiY,MAAMlT,OAE7ByY,aAAatD,GAAKla,OAAOiY,MAAMjT,SACjCwY,aAAatD,GAAKla,OAAOiY,MAAMjT,QAG1B5F,KAAK6Y,MAAMI,gBAAgBC,MAAOkF,eAG3Cxd,OAAO6d,YAAc,WACnB,GAAIvF,OAAQtY,OAAO6b,YACnBzc,MAAK2C,KAAKuW,OAAO/Z,KAAK,SAAUiB,SAC9B,GAAI8Y,OAAQ9Y,QAAQjF,KAAK,GACrB2e,UAAY1Z,QAAQjF,KAAK,EAC7ByF,QAAOiY,MAAMG,WAAWE,OAASY,YAEnClZ,OAAO8b,UAAW,EAClBH,eAAemC,MAAMtG,YAGvBxX,OAAO+d,YAAc,WACnB,GAAIzF,OAAQtY,OAAO6b,YACnBzc,MAAK2C,KAAKuW,OAAO/Z,KAAK,SAAUiB,SAC9B,GAAI8Y,OAAQ9Y,QAAQjF,KAAK,GACrB2e,UAAY1Z,QAAQjF,KAAK,EAC7ByF,QAAOiY,MAAMG,WAAWE,OAASY,SAEjC,IAAI8E,iBAAkBhe,OAAO4b,OAAO/X,QAAQyU,OAAS,GAAKtY,OAAO4b,OAAOzP,MAExEnM,QAAO6c,WAAW7c,OAAO4b,OAAOoC,sBCtJxCrkB,QAAQC,OAAO,gBACZmP,QAAQ,qBAAsB,SAAUkV,QACvC,GAAIzD,oBAAqB,SAAUhD,UAAWoE,QAE5C,MAAOqC,QAAO/gB,MACZnC,YAAa,4CACbC,WAAY,qBACZ+C,SACEyZ,UAAW,WAAc,MAAOA,YAChCoE,OAAQ,WAAc,MAAOA,UAAU,IAEzCsC,SAAU,WACTtR,OAIL,OAAO4N,sBChBX7gB,QAAQC,OAAO,YACZ+B,QAAQ,cAAe,SAAqBC,MAAOC,IAElD,GAAIsiB,WAAYtiB,GAAGS,QACjB8hB,aAAeD,UAAUhgB,OAE3BiB,MAAK7E,OAEL,IAAI8jB,MAAOjf,IACXA,MAAKkf,SAAW,WACd1iB,MAAMuF,IAAI,MAAM5C,KAAK,SAASC,UAC5B6f,KAAK9jB,KAAOiE,SAASjE,KACrB4jB,UAAUpgB,QAAQS,SAASjE,SAI/B6E,KAAKkf,WAKLlf,KAAKmf,cAAgB,WACnB,MAAOH,eAMThf,KAAKsW,YAAc,WAEjB,MAAO0I,cAAa7f,KAAK,SAASigB,MAEhC,GAAI5I,aAAc4I,KAAKC,YAAcD,KAAKE,UACxCF,KAAKC,WAAa,IAAMD,KAAKE,UAC5BF,KAAKG,OAASH,KAAKxX,QAEtB,QACEvG,GAAI+d,KAAK/d,GACTmV,YAAaA,kBCvCvBjc,QAAQC,OAAO,YACZ2I,UAAU,mBAAoB,SAAS2G,WACtC,OACEnO,YAAa,kDACbwJ,OACEqa,MAAS,IACTjjB,QAAW,WACXoa,UAAa,IACbC,gBAAmB,KAErBhb,WAAY,SAASgF,OAAQI,cAE3B,GAAIzE,SAAUuN,UAAU/H,IAAInB,OAAOrE,QAEnCqE,QAAO6e,0BAA4B,WAC7B5f,EAAEsC,QAAQvB,OAAO8U,SAAW9U,OAAO8U,OAAO3I,OAAS,EACrDnM,OAAO8e,iBAEP9e,OAAO+e,kCAAmC,EAC1C3e,aAAaoD,KAAK,wDAAwD,GAC1E7H,QAAQ4Z,SACN5O,EAAK3G,OAAO8U,SACXvW,KAAKyB,OAAOgf,qCACb,WACE5e,aAAaV,MAAM,+DAA+D,OAK1FM,OAAOgf,qCAAuC,SAASzkB,MAGrD,GAFAyF,OAAO+e,kCAAmC,EAC1C3e,aAAaZ,QAAQ,6BAA6B,GAC7CP,EAAEC,YAAY3E,MAOjByF,OAAO8e,aAAe,SAPE,CACxB,GAAIG,iBAAkBhgB,EAAEyC,MAAM1B,OAAO4e,MAAO,KAC5CrkB,MAAO0E,EAAEhB,OAAO1D,KAAM,SAAS2kB,MAC7B,MAAOjgB,GAAEkgB,SAASF,gBAAiBC,KAAKze,MAE1CT,OAAO8e,aAAevkB,OAM1ByF,OAAOqG,YAAc,WACnBrG,OAAO8U,OAAS,GAChB9U,OAAO8e,gBACP9e,OAAO6e,4BACP7e,OAAOuW,gBAAkB,IAG3BvW,OAAOuW,gBAAkB,GACzBvW,OAAOwW,mCAAqC,SAASvT,OACnD,GAAIwT,SAAUxT,MAAMwT,OACpB,KAAKxX,EAAEsC,QAAQvB,OAAO8U,QAAS,CAC7B,GAAIsK,yBAA0Bpf,OAAO8e,aAAa3S,OAAS,CAC3D,QAAQsK,SACN,IAAK,IACHzW,OAAOqG,aACP,MACF,KAAK,IACHrG,OAAOuW,gBAAkBvW,OAAOuW,iBAAmB6I,wBACjD,EACApf,OAAOuW,gBAAkB,CAC3B,MACF,KAAK,IACHvW,OAAOuW,gBAAkBvW,OAAOuW,iBAAmB,EACjD6I,wBACApf,OAAOuW,gBAAkB,CAC3B,MACF,KAAK,IACEvW,OAAO+e,mCACV/e,OAAOqf,QAAQrf,OAAO8e,aAAa9e,OAAOuW,kBAC1CvW,OAAOuW,gBAAkB,GAE3B,MACF,SACE,UAMRvW,OAAOqf,QAAU,SAASH,MACxB,GAAIjgB,EAAEC,YAAYggB,MAAO,CACvBA,MACEtM,KAAQ5S,OAAO8U,OAEjB,IAAIwK,qCAAsCrgB,EAAEsgB,QAAQL,MAChDM,qCAAuCvgB,EAAEyF,KAAK1E,OAAO8e,aAAcQ,oCACnEE,sCACFxf,OAAO4e,MAAM7U,KAAKyV,uCAElBpf,aAAaoD,KAAK,qBAAqB,GACvC7H,QAAQqG,KAAKkd,MAAM3gB,KAAK,SAAShE,MAC/ByF,OAAO4e,MAAM7U,KAAKxP,MAClByF,OAAOqG,cACPjG,aAAaZ,QAAQ,iBAAiB,IACrC,WACDY,aAAaV,MAAM,+DAA+D,UAItFM,QAAO4e,MAAM7U,KAAKmV,KAEpBlf,QAAOqG,eAGTrG,OAAOyf,WAAa,SAASC,0BAC3B1f,OAAO4e,MAAQ3f,EAAEhB,OAAO+B,OAAO4e,MAAO,SAASM,MAC7C,MAAOA,MAAKze,KAAOif,yBAAyBjf,UC7GxD9G,QAAQC,OAAO,YACZ2I,UAAU,kBAAmB,WAC5B,OACE9E,SAAS,EACTgF,YAAY,EACZ1H,YAAa","sourcesContent":["'use strict';\n\n// ****** App Config ****** \\\\\n\nangular.module('videoHub', [\n    'ngCookies',\n    'ngRoute',\n    'ngAnimate',\n    'ngMessages',\n    'restangular',\n    'highcharts-ng',\n    'BettyCropper',\n    'ui.bootstrap'\n  ])\n  .config(function($locationProvider, $httpProvider, $routeProvider, $sceDelegateProvider, RestangularProvider) {\n    //TODO: Put this code into a more meaningful locaiton. Throwing all of this stuff into config is not proper\n    //Add some stuff to the whitelist to prevent XSS blocking stuff\n    $sceDelegateProvider.resourceUrlWhitelist(['self', 'http://assets.onionstatic.com/videoads/*', 'http://onionwebtech.s3.amazonaws.com/**', 'http://tv.theonion.com/**', 'http://v.theonion.com/**']);\n\n    $locationProvider.html5Mode(true);\n\n    //Set the base URL for the Restangular stuff\n    RestangularProvider.setBaseUrl('/api/v0/');\n\n    //We need a response interceptor for 'getList' becuase it contains additional metadata that is normally stripped out by restangular\n    RestangularProvider.addResponseInterceptor(function(data, operation) {\n      if (operation === 'getList') {\n        var results = data.results;\n        if (results) {\n          results.meta = {\n            count: data.count,\n            prev: data.prev,\n            next: data.next\n          };\n        }\n        return results;\n      }\n      return data;\n    });\n\n    $routeProvider\n      .when('/cms/', {\n        templateUrl: 'components/videolist/videolist.html',\n        controller: 'VideoListController',\n        reloadOnSearch: false\n      })\n      .when('/cms/series/', {\n        templateUrl: 'components/serieslist/serieslist.html',\n        controller: 'SeriesListController',\n        reloadOnSearch: false\n      })\n      .when('/cms/channels/', {\n        templateUrl: 'components/channellist/channellist.html',\n        controller: 'ChannelListController',\n        reloadOnSearch: false\n      })\n      .when('/cms/sponsors/', {\n        templateUrl: 'components/sponsorlist/sponsorlist.html',\n        controller: 'SponsorListController',\n        reloadOnSearch: false\n      })\n      .when('/cms/login/', {\n        templateUrl: 'components/login/login.html',\n        controller: 'LoginController'\n      })\n      .when('/cms/edit/:videoId/', {\n        templateUrl: 'components/videodetail/videodetail.html',\n        controller: 'VideoDetailController'\n      })\n      .when('/cms/editchannel/:channelId/', {\n        templateUrl: 'components/channeldetail/channeldetail.html',\n        controller: 'ChannelDetailController'\n      })\n      .when('/cms/newchannel/', {\n        templateUrl: 'components/channeldetail/channeldetail.html',\n        controller: 'ChannelDetailController'\n      })\n      .when('/cms/editseries/:seriesId/', {\n        templateUrl: 'components/seriesdetail/seriesdetail.html',\n        controller: 'SeriesDetailController'\n      })\n      .when('/cms/editsponsor/:sponsorId/', {\n        templateUrl: 'components/sponsordetail/sponsordetail.html',\n        controller: 'SponsorDetailController'\n      })\n      .when('/cms/newseries/', {\n        templateUrl: 'components/seriesdetail/seriesdetail.html',\n        controller: 'SeriesDetailController'\n      })\n      .when('/cms/newsponsor/', {\n        templateUrl: 'components/sponsordetail/sponsordetail.html',\n        controller: 'SponsorDetailController'\n      })\n      .when('/cms/new/', {\n        templateUrl: 'components/videodetail/videodetail.html',\n        controller: 'VideoDetailController'\n      })\n      .otherwise({\n        redirectTo: '/cms/'\n      });\n  })\n  .constant('ValidQueryParamsForListPage', [\n    'q', 'page', 'f', 'page_size', 'order_by'\n  ]);\n","'use strict';\n\nangular.module('videoHub')\n  .constant('ZencoderConstants', {\n    'UPLOAD_TO_S3_PROGRESS_MESSAGE': 'Uploading X% complete',\n    'UPLOAD_TO_S3_UPLOAD_BEGINNING_MESSAGE': 'Uploading...',\n    'UPLOAD_TO_S3_UPLOAD_COMPLETE_MESSAGE': 'Upload Complete. Begin Encoding.',\n    'UPLOAD_TO_S3_UPLOAD_FAILED_MESSAGE': 'Upload Failed',\n    'ENCODE_FAILED_MESSAGE': 'Encoding has failed.',\n    'ENCODE_PROGRESS_MESSAGE': 'Encoding: X%'\n  })\n  .service('Zencoder', function Zencoder($http, $q, $interval, ZencoderConstants) {\n\n    //TODO: this config object is awful\n    this.uploadToS3AndEncode = function(config) {\n      var uploadToS3AndEncodeDeferred = $q.defer();\n      var file = config.file;\n      var videoObject = config.videoObject;\n      //TODO: MOve into own function\n      var successCallback = function(success) {\n        uploadToS3AndEncodeDeferred.resolve(success);\n      };\n      var errorCallback = function(error) {\n        uploadToS3AndEncodeDeferred.reject(error);\n      };\n      var notifyCallback = function(notify) {\n        uploadToS3AndEncodeDeferred.notify(notify);\n      };\n\n      uploadToS3(file, videoObject)\n        .then(encode, errorCallback, notifyCallback)\n        .then(successCallback, errorCallback, notifyCallback);\n\n      return uploadToS3AndEncodeDeferred.promise;\n    };\n\n    function uploadToS3(file, videoObject) {\n      var s3Config = videoObject.encoding_payload;\n      var s3deferred = $q.defer();\n      //TODO: setup form data function\n      var formData = new FormData();\n      formData.append('key', s3Config.key);\n      formData.append('AWSAccessKeyId', s3Config.AWSAccessKeyId);\n      formData.append('acl', s3Config.acl);\n      formData.append('success_action_status', s3Config.success_action_status);\n      formData.append('policy', s3Config.policy);\n      formData.append('signature', s3Config.signature);\n      formData.append('file', file);\n      //We use XMLHttpRequest here becuase angular's http methods don't support progress updates.\n      //TODO: move this into separate function\n      var xhr = new XMLHttpRequest();\n      xhr.open('POST', s3Config.upload_endpoint);\n\n      xhr.upload.onprogress = function(e) {\n        if (e.lengthComputable) {\n          s3deferred.notify(ZencoderConstants.UPLOAD_TO_S3_PROGRESS_MESSAGE.replace('X', Math.round(e.loaded / e.total * 100)));\n        } else {\n          s3deferred.notify(ZencoderConstants.UPLOAD_TO_S3_UPLOAD_BEGINNING_MESSAGE);\n        }\n      };\n\n      xhr.onload = function() {\n        s3deferred.notify(ZencoderConstants.UPLOAD_TO_S3_UPLOAD_COMPLETE_MESSAGE);\n        s3deferred.resolve(videoObject);\n      };\n\n      xhr.addEventListener('error', function() {\n        s3deferred.reject(ZencoderConstants.UPLOAD_TO_S3_UPLOAD_FAILED_MESSAGE);\n      });\n\n      xhr.send(formData);\n      return s3deferred.promise;\n\n    }\n\n    function encode(videoObject) {\n      var encodeDeferred = $q.defer();\n      videoObject.doPOST({}, 'encode')\n        .then(function(response) {\n          var zencoderProgressEndpoint = response.json;\n          //TODO: Remove horrible interval stuff, just obnoxous\n          var progressInterval = $interval(function() {\n            $http({\n              url: zencoderProgressEndpoint,\n              method: 'GET',\n              'ignoreAuthorizationHeader': true\n            }).then(function(response) {\n              if (response.data.state === 'finished') {\n                encodeDeferred.resolve(videoObject);\n                $interval.cancel(progressInterval);\n              } else if (response.data.state === 'failed') {\n                encodeDeferred.reject(ZencoderConstants.ENCODE_FAILED_MESSAGE);\n                $interval.cancel(progressInterval);\n              } else {\n                if (!_.isUndefined(response.data.progress)) {\n                  encodeDeferred.notify(ZencoderConstants.ENCODE_PROGRESS_MESSAGE.replace('X', Math.round(response.data.progress)));\n                }\n              }\n            });\n          }, 2000);\n        }, function(data) {\n          encodeDeferred.reject(data);\n        });\n      return encodeDeferred.promise;\n    }\n  });\n","'use strict';\nangular.module('videoHub')\n  //TODO: These constants are redundant between the detail pages. Should be merged together into one mega-constant.\n  .constant('VideoDetailControllerConstants', {\n    SAVED_ALERT_MESSAGE: 'Saved',\n    SOMETHING_WENT_WRONG_ALERT_MESSAGE: 'Something went wrong with saving the Video. Please call your friendly sysadmin.',\n    PLEASE_FILL_IN_ALL_REQUIRED_FIELDS_ALERT_MESSAGE: 'Please fill in all required fields.',\n    DELETE_SUCCESSFUL: 'Delete successful'\n  })\n  .controller('VideoDetailController', function($scope, $routeParams, VideoService, $location, AlertService, VideoDetailControllerConstants) {\n    $scope.video = {};\n\n    $scope.getVideo = function() {\n      if (_.isUndefined($routeParams.videoId)) {\n        $scope.video = {};\n        $scope.autocompleteFields.channel = {};\n        $scope.autocompleteFields.series = {};\n        $scope.autocompleteFields.tagObjects = [];\n      } else {\n        return VideoService.one($routeParams.videoId).get().then(\n          $scope.setVideo,\n          function(data) {\n            console.log(data);\n          }\n        );\n      }\n    };\n\n    $scope.setVideo = function(data) {\n      if (_.isEmpty(data.input)) {\n        data.input = '';\n      }\n      $scope.video = data;\n      if (_.isUndefined($scope.video.tags)) {\n        $scope.video.tags = [];\n      }\n\n      $scope.autocompleteFields.tagObjects = $scope.video.tags;\n      $scope.video.tags = _.pluck($scope.video.tags, 'id');\n      $scope.autocompleteFields.channel = $scope.video.channel;\n      $scope.autocompleteFields.series = $scope.video.series;\n    };\n\n    $scope.saveVideo = function() {\n      if ($scope.videoDetailForm.$valid) {\n        if (_.has($scope.autocompleteFields.channel, 'id')) {\n          $scope.video.channel = $scope.autocompleteFields.channel.id;\n        } else {\n          $scope.video.channel = null;\n        }\n\n        if (_.has($scope.autocompleteFields.series, 'id')) {\n          $scope.video.series = $scope.autocompleteFields.series.id;\n        } else {\n          $scope.video.series = null;\n        }\n\n        $scope.video.tags = _.pluck($scope.autocompleteFields.tagObjects, 'id');\n        if ($routeParams.videoId) {\n          $scope.video.save().then(displaySaveSuccessfulAlert, displaySomethingWentWrongAlert);\n        } else {\n          VideoService.post($scope.video).then(navigateToNewlyCreatedEditPage, displaySomethingWentWrongAlert);\n        }\n      } else {\n        AlertService.error(VideoDetailControllerConstants.PLEASE_FILL_IN_ALL_REQUIRED_FIELDS_ALERT_MESSAGE, true);\n      }\n    };\n\n    function navigateToNewlyCreatedEditPage(response) {\n      displaySaveSuccessfulAlert().then(function() {\n        $location.path('cms/edit/' + response.id + '/');\n      });\n    }\n\n    function displaySaveSuccessfulAlert() {\n      return AlertService.success(VideoDetailControllerConstants.SAVED_ALERT_MESSAGE, true);\n    }\n\n    function displaySomethingWentWrongAlert() {\n      AlertService.error(VideoDetailControllerConstants.SOMETHING_WENT_WRONG_ALERT_MESSAGE, true);\n    }\n\n    $scope.delete = function() {\n      $scope.video.remove().then(function() {\n        AlertService.success(VideoDetailControllerConstants.DELETE_SUCCESSFUL, true).then(function() {\n          $location.path('cms/');\n        });\n      });\n    };\n\n    $scope.autocompleteFields = {};\n    $scope.getVideo();\n  });\n","'use strict';\n\nangular.module('videoHub')\n  .constant('VideoFieldConstants', {\n    FILE_TOO_LARGE_ERROR_MESSAGE: 'Upload file cannot be larger than 1024MB.',\n    MUST_UPLOAD_FILES_ERROR_MESSAGE: 'You must upload a video file.',\n    PLEASE_SELECT_A_FILE_ERROR_MESSAGE: 'Please select a file.',\n    UPLOAD_COMPLETE_SUCCESS_MESSAGE: 'Upload Complete'\n  })\n  .directive('videoField', function(Zencoder, $q) {\n    return {\n      templateUrl: 'components/videodetail/videofield.html',\n      transclude: true,\n      controller: function($scope, AlertService, $timeout, VideoFieldConstants, VideoService) {\n\n        $scope.uploadVideo = function() {\n          var fileField = $('#' + $scope.video.id + '-file-field');\n          fileField.unbind('change');\n          fileField.bind('change', function(event) {\n            var file = event.target.files[0];\n            $scope.validateVideoFile(file)\n              .then($scope.addVideo)\n              .then(Zencoder.uploadToS3AndEncode)\n              .then(\n                function() {\n                  AlertService.success(VideoFieldConstants.UPLOAD_COMPLETE_SUCCESS_MESSAGE, true).then($scope.fetchNewVideoObject);\n                },\n                function(error) {\n                  AlertService.error(error, true);\n                },\n                function(message) {\n                  if (!_.isUndefined(message)) {\n                    AlertService.info(message, false);\n                  }\n                });\n          });\n          fileField.click();\n        };\n\n        $scope.validateVideoFile = function(file) {\n          var validateVideoFileDeferred = $q.defer();\n          if (file) {\n            if (file.size > (1024 * 1024 * 1024)) {\n              validateVideoFileDeferred.reject(VideoFieldConstants.FILE_TOO_LARGE_ERROR_MESSAGE);\n            } else if (file.type.indexOf('video/') !== 0) {\n              validateVideoFileDeferred.reject(VideoFieldConstants.MUST_UPLOAD_FILES_ERROR_MESSAGE);\n            } else {\n              validateVideoFileDeferred.resolve(file);\n            }\n          } else {\n            validateVideoFileDeferred.reject(VideoFieldConstants.PLEASE_SELECT_A_FILE_ERROR_MESSAGE);\n          }\n          return validateVideoFileDeferred.promise;\n        };\n\n        $scope.addVideo = function(file) {\n          var addVideoDeferred = $q.defer();\n\n          $scope.video.doGET('encoding_auth').then(function(encodingPayload) {\n            $scope.video.encoding_payload = encodingPayload;\n            var uploadToS3Arguments = {\n              'file': file,\n              'videoObject': $scope.video\n            };\n            addVideoDeferred.resolve(uploadToS3Arguments);\n          });\n          return addVideoDeferred.promise;\n        };\n\n        $scope.checkIfSourcesHaveLoadedAndRetryIfTheyAreNot = function(response) {\n          if (_.isEmpty(response.sources)) {\n            $timeout($scope.fetchNewVideoObject, 2000);\n          } else {\n            $scope.video = response;\n            AlertService.clear();\n          }\n        };\n\n        $scope.fetchNewVideoObject = function() {\n          // We reload the video after all of the fun is over, in order to update it with the new sources.\n          VideoService.one($scope.video.id).get()\n            .then($scope.checkIfSourcesHaveLoadedAndRetryIfTheyAreNot);\n        };\n      }\n    };\n  });\n","'use strict';\n\nangular.module('videoHub')\n  .directive('videoPlayer', [ function() {\n    return {\n      replace: false,\n      restrict: 'E',\n      transclude: true,\n      templateUrl: 'shared/videoplayer/videoplayer.html',\n      link: function(scope, element) {\n        var currentVideo = element.find('video')[0];\n        scope.player = videojs(currentVideo, {\n          'controls': true,\n          'autoplay': false,\n          'width': 'auto',\n          'height': 'auto'\n        });\n\n        element.find('.modal').on('hidden.bs.modal', function(){\n          scope.player.pause();\n        });\n\n        scope.$on('$destroy', function(){\n          scope.player.dispose();\n        });\n      }\n    };\n  }]);\n","'use strict';\nangular.module('videoHub')\n  .controller('VideoListController', function($scope, $location, $routeParams, $rootScope, ListService) {\n    ListService.setService('VideoService');\n\n    function updateList() {\n      ListService.updateList()\n        .then(function() {\n          $scope.list = ListService.data.list;\n          $scope.totalItems = ListService.data.totalItems;\n          $scope.params = ListService.getParams();\n        });\n    }\n    updateList();\n\n    $scope.setFilterAndUpdateList = function(newFilterValue) {\n      ListService.setFilter(newFilterValue);\n      updateList();\n    };\n\n    $scope.changeToEditPage = function(id) {\n      $location.path('cms/edit/' + id + '/');\n    };\n\n    $scope.setOrderAndUpdateList = function(newOrderValue) {\n      ListService.setOrder(newOrderValue);\n      updateList();\n    };\n\n    $scope.clearSearchAndUpdateList = function() {\n      ListService.clearSearch();\n      updateList();\n    };\n\n    $scope.pageChanged = function(newPageNumber) {\n      ListService.setPage(newPageNumber);\n      updateList();\n    };\n\n    $scope.setSearchAndUpdateList = function() {\n      ListService.setSearch($scope.params.q);\n      updateList();\n    };\n\n    $scope.new = function() {\n      $location.path('cms/new/');\n    };\n  });\n","'use strict';\n\nangular.module('videoHub')\n    .controller('LoginController', function($scope, authService, $location, $rootScope) {\n        $rootScope.showSearchBar = false;\n        $rootScope.showSaveButton = false;\n        $scope.username = '';\n        $scope.password = '';\n        $scope.submitLogin = function() {\n            authService.login($scope.username, $scope.password);\n        };\n    });\n","'use strict';\nangular.module('videoHub')\n  .constant('ChannelDetailControllerConstants', {\n    SAVED_ALERT_MESSAGE: 'Saved',\n    SOMETHING_WENT_WRONG_ALERT_MESSAGE: 'Something went wrong with saving the Channel. Please call your friendly sysadmin.',\n    PLEASE_FILL_IN_ALL_REQUIRED_FIELDS_ALERT_MESSAGE: 'Please fill in all required fields.',\n    DELETE_SUCCESSFUL: 'Delete successful'\n  })\n  .controller('ChannelDetailController', function($scope, $routeParams, ChannelService, $location, AlertService, ChannelDetailControllerConstants) {\n    $scope.channel = {};\n\n    $scope.getChannel = function() {\n      if (_.isUndefined($routeParams.channelId)) {\n        $scope.channel = {};\n        $scope.autocompleteFields.partner = {};\n      } else {\n        return ChannelService.one($routeParams.channelId).get().then(\n          function(data) {\n            $scope.channel = data;\n            $scope.autocompleteFields.partner = $scope.channel.partner;\n          },\n          function(data) {\n            console.log(data);\n          }\n        );\n      }\n    };\n\n    $scope.saveChannel = function() {\n      if ($scope.channelDetailForm.$valid) {\n        if (_.has($scope.autocompleteFields.partner, 'id')) {\n          $scope.channel.partner = $scope.autocompleteFields.partner.id;\n        } else {\n          $scope.channel.partner = null;\n        }\n        if ($routeParams.channelId) {\n          $scope.channel.save().then(displaySaveSuccessfulAlert, displaySomethingWentWrongAlert);\n        } else {\n          ChannelService.post($scope.channel).then(navigateToNewlyCreatedEditPage, displaySomethingWentWrongAlert);\n        }\n      } else {\n        AlertService.error(ChannelDetailControllerConstants.PLEASE_FILL_IN_ALL_REQUIRED_FIELDS_ALERT_MESSAGE, true);\n      }\n    };\n\n    function navigateToNewlyCreatedEditPage(response) {\n      displaySaveSuccessfulAlert().then(function() {\n        $location.path('cms/editchannel/' + response.id + '/');\n      });\n    }\n\n    function displaySaveSuccessfulAlert() {\n      return AlertService.success(ChannelDetailControllerConstants.SAVED_ALERT_MESSAGE, true);\n    }\n\n    function displaySomethingWentWrongAlert() {\n      AlertService.error(ChannelDetailControllerConstants.SOMETHING_WENT_WRONG_ALERT_MESSAGE, true);\n    }\n\n    $scope.autocompleteFields = {};\n    $scope.getChannel();\n  });\n","'use strict';\nangular.module('videoHub')\n  .controller('ChannelListController', function($scope, $location, $routeParams, $rootScope, ListService) {\n    ListService.setService('ChannelService');\n\n    function updateList() {\n      ListService.updateList()\n        .then(function() {\n          $scope.list = ListService.data.list;\n          $scope.totalItems = ListService.data.totalItems;\n          $scope.params = ListService.getParams();\n        });\n    }\n    updateList();\n\n    $scope.setFilterAndUpdateList = function(newFilterValue) {\n      ListService.setFilter(newFilterValue);\n      updateList();\n      //Only used to determine active state\n    };\n\n    $scope.changeToEditPage = function(id) {\n      $location.path('cms/editchannel/' + id + '/');\n    };\n\n    $scope.setOrderAndUpdateList = function(newOrderValue) {\n      ListService.setOrder(newOrderValue);\n      updateList();\n    };\n\n    $scope.clearSearchAndUpdateList = function() {\n      ListService.clearSearch();\n      updateList();\n    };\n\n    $scope.pageChanged = function(newPageNumber) {\n      ListService.setPage(newPageNumber);\n      updateList();\n    };\n\n    $scope.setSearchAndUpdateList = function() {\n      ListService.setSearch($scope.params.q);\n      updateList();\n    };\n  });\n","'use strict';\n\nangular.module('videoHub')\n  .constant('SponsorDetailControllerConstants', {\n    SAVED_ALERT_MESSAGE: 'Saved',\n    SOMETHING_WENT_WRONG_ALERT_MESSAGE: 'Something went wrong with saving the Sponsor. Please call your friendly sysadmin.',\n    PLEASE_FILL_IN_ALL_REQUIRED_FIELDS_ALERT_MESSAGE: 'Please fill in all required fields.',\n    DELETE_SUCCESSFUL: 'Delete successful'\n  })\n  .controller('SponsorDetailController', function($scope, $routeParams, SponsorService, $location, AlertService, SponsorDetailControllerConstants) {\n    $scope.sponsor = {};\n\n    $scope.getSponsor = function() {\n      if (_.isUndefined($routeParams.sponsorId)) {\n        $scope.sponsor = {};\n      } else {\n        return SponsorService.one($routeParams.sponsorId).get().then(\n          function(data) {\n            $scope.sponsor = data;\n          },\n          function(data) {\n            console.log(data);\n          }\n        );\n      }\n    };\n\n    $scope.saveSponsor = function() {\n      if ($scope.sponsorDetailForm.$valid) {\n        if ($routeParams.sponsorId) {\n          $scope.sponsor.save().then(displaySaveSuccessfulAlert, displaySomethingWentWrongAlert);\n        } else {\n          SponsorService.post($scope.sponsor).then(navigateToNewlyCreatedEditPage, displaySomethingWentWrongAlert);\n        }\n      } else {\n        AlertService.error(SponsorDetailControllerConstants.PLEASE_FILL_IN_ALL_REQUIRED_FIELDS_ALERT_MESSAGE, true);\n      }\n    };\n\n    function navigateToNewlyCreatedEditPage(response) {\n      displaySaveSuccessfulAlert().then(function() {\n        $location.path('cms/editsponsor/' + response.id + '/');\n      });\n    }\n\n    function displaySaveSuccessfulAlert() {\n      return AlertService.success(SponsorDetailControllerConstants.SAVED_ALERT_MESSAGE, true);\n    }\n\n    function displaySomethingWentWrongAlert() {\n      AlertService.error(SponsorDetailControllerConstants.SOMETHING_WENT_WRONG_ALERT_MESSAGE, true);\n    }\n\n    $scope.delete = function() {\n      $scope.sponsor.remove().then(function() {\n        AlertService.success(SponsorDetailControllerConstants.DELETE_SUCCESSFUL, true).then(function() {\n          $location.path('cms/');\n        });\n      });\n    };\n    $scope.getSponsor();\n  });\n","'use strict';\nangular.module('videoHub')\n  .controller('SponsorListController', function($scope, $location, $routeParams, $rootScope, ListService) {\n    ListService.setService('SponsorService');\n\n    function updateList() {\n      ListService.updateList()\n        .then(function() {\n          $scope.list = ListService.data.list;\n          $scope.totalItems = ListService.data.totalItems;\n          $scope.params = ListService.getParams();\n        });\n    }\n    updateList();\n\n    $scope.setFilterAndUpdateList = function(newFilterValue) {\n      ListService.setFilter(newFilterValue);\n      updateList();\n      //Only used to determine active state\n    };\n\n    $scope.changeToEditPage = function(id) {\n      $location.path('cms/editsponsor/' + id + '/');\n    };\n\n    $scope.setOrderAndUpdateList = function(newOrderValue) {\n      ListService.setOrder(newOrderValue);\n      updateList();\n    };\n\n    $scope.clearSearchAndUpdateList = function() {\n      ListService.clearSearch();\n      updateList();\n    };\n\n    $scope.pageChanged = function(newPageNumber) {\n      ListService.setPage(newPageNumber);\n      updateList();\n    };\n\n    $scope.setSearchAndUpdateList = function() {\n      ListService.setSearch($scope.params.q);\n      updateList();\n    };\n  });\n","'use strict';\nangular.module('videoHub')\n  .controller('SeriesListController', function($scope, $location, $routeParams, $rootScope, ListService) {\n    ListService.setService('SeriesService');\n\n    function updateList() {\n      ListService.updateList()\n        .then(function() {\n          $scope.list = ListService.data.list;\n          $scope.totalItems = ListService.data.totalItems;\n          $scope.params = ListService.getParams();\n        });\n    }\n    updateList();\n\n    $scope.setFilterAndUpdateList = function(newFilterValue) {\n      ListService.setFilter(newFilterValue);\n      updateList();\n    };\n\n    $scope.changeToEditPage = function(id) {\n      $location.path('cms/editseries/' + id + '/');\n    };\n\n    $scope.setOrderAndUpdateList = function(newOrderValue) {\n      ListService.setOrder(newOrderValue);\n      updateList();\n    };\n\n    $scope.clearSearchAndUpdateList = function() {\n      ListService.clearSearch();\n      updateList();\n    };\n\n    $scope.pageChanged = function(newPageNumber) {\n      ListService.setPage(newPageNumber);\n      updateList();\n    };\n\n    $scope.setSearchAndUpdateList = function() {\n      ListService.setSearch($scope.params.q);\n      updateList();\n    };\n  });\n","'use strict';\n\nangular.module('videoHub')\n  .constant('SeriesDetailControllerConstants', {\n    SAVED_ALERT_MESSAGE: 'Saved',\n    SOMETHING_WENT_WRONG_ALERT_MESSAGE: 'Something went wrong with saving the Series. Please call your friendly sysadmin.',\n    PLEASE_FILL_IN_ALL_REQUIRED_FIELDS_ALERT_MESSAGE: 'Please fill in all required fields.',\n    DELETE_SUCCESSFUL: 'Delete successful'\n  })\n  .controller('SeriesDetailController', function($scope, $routeParams, SeriesService, $location, AlertService, SeriesDetailControllerConstants) {\n    $scope.series = {};\n\n    $scope.getSeries = function() {\n      if (_.isUndefined($routeParams.seriesId)) {\n        $scope.series = {};\n        $scope.autocompleteFields.channel = {};\n        $scope.autocompleteFields.sponsor = {};\n      } else {\n        return SeriesService.one($routeParams.seriesId).get().then(\n          function(data) {\n            $scope.series = data;\n            $scope.autocompleteFields.channel = data.channel;\n            $scope.autocompleteFields.sponsor = data.sponsor;\n          },\n          function(data) {\n            console.log(data);\n          }\n        );\n      }\n    };\n\n    $scope.saveSeries = function() {\n      if ($scope.seriesDetailForm.$valid) {\n        if (_.has($scope.autocompleteFields.channel, 'id')) {\n          $scope.series.channel = $scope.autocompleteFields.channel.id;\n        } else {\n          $scope.series.channel = null;\n        }\n        if (_.has($scope.autocompleteFields.sponsor, 'id')) {\n          $scope.series.sponsor = $scope.autocompleteFields.sponsor.id;\n        } else {\n          $scope.series.sponsor = null;\n        }\n        if ($routeParams.seriesId) {\n          $scope.series.save().then(displaySaveSuccessfulAlert, displaySomethingWentWrongAlert);\n        } else {\n          SeriesService.post($scope.series).then(navigateToNewlyCreatedEditPage, displaySomethingWentWrongAlert);\n        }\n      } else {\n        AlertService.error(SeriesDetailControllerConstants.PLEASE_FILL_IN_ALL_REQUIRED_FIELDS_ALERT_MESSAGE, true);\n      }\n    };\n\n    function navigateToNewlyCreatedEditPage(response) {\n      displaySaveSuccessfulAlert().then(function() {\n        $location.path('cms/editseries/' + response.id + '/');\n      });\n    }\n\n    function displaySaveSuccessfulAlert() {\n      return AlertService.success(SeriesDetailControllerConstants.SAVED_ALERT_MESSAGE, true);\n    }\n\n    function displaySomethingWentWrongAlert() {\n      AlertService.error(SeriesDetailControllerConstants.SOMETHING_WENT_WRONG_ALERT_MESSAGE, true);\n    }\n\n    $scope.autocompleteFields = {};\n    $scope.getSeries();\n  });\n","'use strict';\nangular.module('videoHub')\n  .directive('alertbar', function() {\n    return {\n      templateUrl: 'shared/alert/alert-directive.html',\n      restrict: 'E',\n      controller: function($scope, AlertService) {\n        $scope.alertStatus = AlertService.alertStatus;\n      }\n    };\n  });\n","'use strict';\n\nangular.module('videoHub')\n  .constant('AlertServiceConstants', {\n    TIME_TO_WAIT_BEFORE_CLEARING: 2000\n  })\n  .service('AlertService', function($timeout, $q, AlertServiceConstants) {\n    this.alertStatus = {};\n    this.clear = function(clearAfterDisplayingMessageFlag) {\n      if (_.isUndefined(clearAfterDisplayingMessageFlag)){\n        this.setAlertStatusElementsToFalse();\n      }\n      var alertDeferred = $q.defer();\n      var alertService = this;\n      if (clearAfterDisplayingMessageFlag) {\n        $timeout(function() {\n          alertService.setAlertStatusElementsToFalse();\n          alertDeferred.resolve();\n        }, AlertServiceConstants.TIME_TO_WAIT_BEFORE_CLEARING);\n      } else {\n        alertDeferred.resolve();\n      }\n\n      return alertDeferred.promise;\n    };\n\n    this.setAlertStatusElementsToFalse = function(){\n      this.alertStatus.error = false;\n      this.alertStatus.info = false;\n      this.alertStatus.success = false;\n    };\n\n    this.success = function(message, clearAfterDisplayingMessageFlag) {\n      this.clear();\n      this.alertStatus.success = message;\n      return this.clear(clearAfterDisplayingMessageFlag);\n    };\n    this.error = function(message, clearAfterDisplayingMessageFlag) {\n      this.clear();\n      this.alertStatus.error = message;\n      return this.clear(clearAfterDisplayingMessageFlag);\n    };\n    this.info = function(message, clearAfterDisplayingMessageFlag) {\n      this.clear();\n      this.alertStatus.info = message;\n      return this.clear(clearAfterDisplayingMessageFlag);\n    };\n  });\n","'use strict';\n//Service to get / create / delete video ads.\nangular.module('videoHub')\n.factory('ChannelService',\nfunction(Restangular) {\n  return Restangular.service('channels');\n});\n","'use strict';\n//Service to get / create / delete video ads.\nangular.module('videoHub')\n.factory('SeriesService',\nfunction(Restangular) {\n  return Restangular.service('series');\n});\n","'use strict';\n//Service to get / create / delete video ads.\nangular.module('videoHub')\n.factory('SeasonService',\nfunction(Restangular) {\n  return Restangular.service('seasons');\n});\n","'use strict';\n//Service to get / create / delete video ads.\nangular.module('videoHub')\n.factory('VideoService',\nfunction(Restangular) {\n  return Restangular.service('videos');\n});\n","\n'use strict';\n//Service to get / create / delete video ads.\nangular.module('videoHub')\n.factory('SponsorService',\nfunction(Restangular) {\n  return Restangular.service('sponsors');\n});\n","'use strict';\n//Service to get / create / delete video ads.\nangular.module('videoHub')\n.factory('TagsService',\nfunction(Restangular) {\n  return Restangular.service('tags');\n});\n","'use strict';\nangular.module('videoHub')\n  .factory('authInterceptor', ['$rootScope', '$q', '$window', '$location', '$injector', 'httpRequestBuffer', function($rootScope, $q, $window, $location, $injector, httpRequestBuffer) {\n    return {\n      'request': function(config) {\n        config.headers = config.headers || {};\n        if ($window.sessionStorage.token) {\n          if (!config.ignoreAuthorizationHeader) {\n            config.headers.Authorization = 'JWT ' + $window.sessionStorage.token;\n          }\n        }\n        return config;\n      },\n      'responseError': function(response) {\n        if (response.config) {\n          var ignoreAuthModule = response.config.ignoreAuthModule || response.config.headers.ignoreAuthModule;\n          if (!ignoreAuthModule) {\n            if (response.status === 403) {\n              var deferred = $q.defer();\n              httpRequestBuffer.append(response.config, deferred);\n              var authService = $injector.get('authService');\n              authService.refreshToken();\n            }\n          }\n        }\n        return $q.reject(response);\n      }\n    };\n  }])\n  .config(['$httpProvider', function($httpProvider) {\n    $httpProvider.interceptors.push('authInterceptor');\n  }])\n  .service('authService', ['$window', '$http', '$rootScope', '$location', 'httpRequestBuffer', function($window, $http, $rootScope, $location, httpRequestBuffer) {\n    var _login = function(username, password) {\n      return $http.post('/api-token-auth/', {\n          'username': username,\n          'password': password\n        })\n        .then(function(response) {\n          $window.sessionStorage.token = response.data.token;\n          $location.path('cms/');\n        });\n    };\n    var _refreshToken = function() {\n      //TODO: put into constant\n      return $http.post('/api-token-refresh/', {\n          'token': $window.sessionStorage.token\n        }, {\n          'ignoreAuthModule': true\n        }).success(function(response) {\n          $window.sessionStorage.token = response.token;\n          httpRequestBuffer.retryAll();\n        })\n        .error(function() {\n          httpRequestBuffer.rejectAll();\n          //TODO: put into constant\n          $location.path('cms/login');\n        });\n    };\n\n    return {\n      login: _login,\n      refreshToken: _refreshToken\n    };\n  }])\n  // Thanks to witoldsz/angular-http-auth\n  .factory('httpRequestBuffer', ['$injector',\n    function($injector) {\n      var buffer = [];\n\n      var $http;\n\n      function _retryHttpRequest(config, deferred) {\n        function successCallback(response) {\n          deferred.resolve(response);\n        }\n\n        function errorCallback(response) {\n          deferred.reject(response);\n        }\n        $http = $http || $injector.get('$http');\n        config.headers.ignoreAuthModule = true;\n        $http(config).then(successCallback, errorCallback);\n      }\n\n      return {\n        append: function(config, deferred) {\n          buffer.push({\n            config: config,\n            deferred: deferred\n          });\n        },\n        rejectAll: function(reason) {\n          if (reason) {\n            _.each(buffer, function(request) {\n              request.deferred.reject(reason);\n            });\n          }\n          buffer = [];\n        },\n        retryAll: function() {\n          _.each(buffer, function(request) {\n            _retryHttpRequest(request.config, request.deferred);\n          });\n          buffer = [];\n        }\n      };\n    }\n  ]);\n","/**\n * dirPagination - AngularJS module for paginating (almost) anything.\n *\n *\n * Credits\n * =======\n *\n * Daniel Tabuenca: https://groups.google.com/d/msg/angular/an9QpzqIYiM/r8v-3W1X5vcJ\n * for the idea on how to dynamically invoke the ng-repeat directive.\n *\n * I borrowed a couple of lines and a few attribute names from the AngularUI Bootstrap project:\n * https://github.com/angular-ui/bootstrap/blob/master/src/pagination/pagination.js\n *\n * Copyright 2014 Michael Bromley <michael@michaelbromley.co.uk>\n */\n\n(function() {\n\n    /**\n     * Config\n     */\n    var moduleName = 'videoHub';\n    var DEFAULT_ID = '__default';\n\n    /**\n     * Module\n     */\n    var module;\n    try {\n        module = angular.module(moduleName);\n    } catch(err) {\n        // named module does not exist, so create one\n        module = angular.module(moduleName, []);\n    }\n\n    module.directive('dirPaginate', ['$compile', '$parse', '$timeout', 'paginationService', function($compile, $parse, $timeout, paginationService) {\n\n        return  {\n            terminal: true,\n            multiElement: true,\n            priority: 5000, // This setting is used in conjunction with the later call to $compile() to prevent infinite recursion of compilation\n            compile: function dirPaginationCompileFn(tElement, tAttrs){\n\n                var expression = tAttrs.dirPaginate;\n                // regex taken directly from https://github.com/angular/angular.js/blob/master/src/ng/directive/ngRepeat.js#L211\n                var match = expression.match(/^\\s*([\\s\\S]+?)\\s+in\\s+([\\s\\S]+?)(?:\\s+track\\s+by\\s+([\\s\\S]+?))?\\s*$/);\n\n                var filterPattern = /\\|\\s*itemsPerPage\\s*:[^|]*/;\n                if (match[2].match(filterPattern) === null) {\n                    throw 'pagination directive: the \\'itemsPerPage\\' filter must be set.';\n                }\n                var itemsPerPageFilterRemoved = match[2].replace(filterPattern, '');\n                var collectionGetter = $parse(itemsPerPageFilterRemoved);\n\n                // If any value is specified for paginationId, we register the un-evaluated expression at this stage for the benefit of any\n                // dir-pagination-controls directives that may be looking for this ID.\n                var rawId = tAttrs.paginationId || DEFAULT_ID;\n                paginationService.registerInstance(rawId);\n\n                return function dirPaginationLinkFn(scope, element, attrs){\n\n                    // Now that we have access to the `scope` we can interpolate any expression given in the paginationId attribute and\n                    // potentially register a new ID if it evaluates to a different value than the rawId.\n                    var paginationId = $parse(attrs.paginationId)(scope) || attrs.paginationId || DEFAULT_ID;\n                    paginationService.registerInstance(paginationId);\n\n                    var repeatExpression;\n                    var idDefinedInFilter = !!expression.match(/(\\|\\s*itemsPerPage\\s*:[^|]*:[^|]*)/);\n                    if (paginationId !== DEFAULT_ID && !idDefinedInFilter) {\n                        repeatExpression = expression.replace(/(\\|\\s*itemsPerPage\\s*:[^|]*)/, \"$1 : '\" + paginationId + \"'\");\n                    } else {\n                        repeatExpression = expression;\n                    }\n\n                    // Add ng-repeat to the dom element\n                    if (element[0].hasAttribute('dir-paginate-start') || element[0].hasAttribute('data-dir-paginate-start')) {\n                        // using multiElement mode (dir-paginate-start, dir-paginate-end)\n                        attrs.$set('ngRepeatStart', repeatExpression);\n                        element.eq(element.length - 1).attr('ng-repeat-end', true);\n                    } else {\n                        attrs.$set('ngRepeat', repeatExpression);\n                    }\n\n                    var compiled =  $compile(element, false, 5000); // we manually compile the element again, as we have now added ng-repeat. Priority less than 5000 prevents infinite recursion of compiling dirPaginate\n\n                    var currentPageGetter;\n                    if (attrs.currentPage) {\n                        currentPageGetter = $parse(attrs.currentPage);\n                    } else {\n                        // if the current-page attribute was not set, we'll make our own\n                        var defaultCurrentPage = paginationId + '__currentPage';\n                        scope[defaultCurrentPage] = 1;\n                        currentPageGetter = $parse(defaultCurrentPage);\n                    }\n                    paginationService.setCurrentPageParser(paginationId, currentPageGetter, scope);\n\n                    if (typeof attrs.totalItems !== 'undefined') {\n                        paginationService.setAsyncModeTrue(paginationId);\n                        scope.$watch(function() {\n                            return $parse(attrs.totalItems)(scope);\n                        }, function (result) {\n                            if (0 <= result) {\n                                paginationService.setCollectionLength(paginationId, result);\n                            }\n                        });\n                    } else {\n                        scope.$watchCollection(function() {\n                            return collectionGetter(scope);\n                        }, function(collection) {\n                            if (collection) {\n                                paginationService.setCollectionLength(paginationId, collection.length);\n                            }\n                        });\n                    }\n\n                    // Delegate to the link function returned by the new compilation of the ng-repeat\n                    compiled(scope);\n                };\n            }\n        };\n    }]);\n\n    module.directive('dirPaginationControls', ['paginationService', 'paginationTemplate', function(paginationService, paginationTemplate) {\n\n        var numberRegex = /^\\d+$/;\n\n        /**\n         * Generate an array of page numbers (or the '...' string) which is used in an ng-repeat to generate the\n         * links used in pagination\n         *\n         * @param currentPage\n         * @param rowsPerPage\n         * @param paginationRange\n         * @param collectionLength\n         * @returns {Array}\n         */\n        function generatePagesArray(currentPage, collectionLength, rowsPerPage, paginationRange) {\n            var pages = [];\n            var totalPages = Math.ceil(collectionLength / rowsPerPage);\n            var halfWay = Math.ceil(paginationRange / 2);\n            var position;\n\n            if (currentPage <= halfWay) {\n                position = 'start';\n            } else if (totalPages - halfWay < currentPage) {\n                position = 'end';\n            } else {\n                position = 'middle';\n            }\n\n            var ellipsesNeeded = paginationRange < totalPages;\n            var i = 1;\n            while (i <= totalPages && i <= paginationRange) {\n                var pageNumber = calculatePageNumber(i, currentPage, paginationRange, totalPages);\n\n                var openingEllipsesNeeded = (i === 2 && (position === 'middle' || position === 'end'));\n                var closingEllipsesNeeded = (i === paginationRange - 1 && (position === 'middle' || position === 'start'));\n                if (ellipsesNeeded && (openingEllipsesNeeded || closingEllipsesNeeded)) {\n                    pages.push('...');\n                } else {\n                    pages.push(pageNumber);\n                }\n                i ++;\n            }\n            return pages;\n        }\n\n        /**\n         * Given the position in the sequence of pagination links [i], figure out what page number corresponds to that position.\n         *\n         * @param i\n         * @param currentPage\n         * @param paginationRange\n         * @param totalPages\n         * @returns {*}\n         */\n        function calculatePageNumber(i, currentPage, paginationRange, totalPages) {\n            var halfWay = Math.ceil(paginationRange/2);\n            if (i === paginationRange) {\n                return totalPages;\n            } else if (i === 1) {\n                return i;\n            } else if (paginationRange < totalPages) {\n                if (totalPages - halfWay < currentPage) {\n                    return totalPages - paginationRange + i;\n                } else if (halfWay < currentPage) {\n                    return currentPage - halfWay + i;\n                } else {\n                    return i;\n                }\n            } else {\n                return i;\n            }\n        }\n\n        return {\n            restrict: 'AE',\n            templateUrl: function(elem, attrs) {\n                return attrs.templateUrl || paginationTemplate.getPath();\n            },\n            scope: {\n                maxSize: '=?',\n                onPageChange: '&?',\n                paginationId: '=?'\n            },\n            link: function dirPaginationControlsLinkFn(scope, element, attrs) {\n\n                // rawId is the un-interpolated value of the pagination-id attribute. This is only important when the corresponding dir-paginate directive has\n                // not yet been linked (e.g. if it is inside an ng-if block), and in that case it prevents this controls directive from assuming that there is\n                // no corresponding dir-paginate directive and wrongly throwing an exception.\n                var rawId = attrs.paginationId ||  DEFAULT_ID;\n                var paginationId = scope.paginationId || attrs.paginationId ||  DEFAULT_ID;\n\n                if (!paginationService.isRegistered(paginationId) && !paginationService.isRegistered(rawId)) {\n                    var idMessage = (paginationId !== DEFAULT_ID) ? ' (id: ' + paginationId + ') ' : ' ';\n                    throw 'pagination directive: the pagination controls' + idMessage + 'cannot be used without the corresponding pagination directive.';\n                }\n\n                if (!scope.maxSize) { scope.maxSize = 9; }\n                scope.directionLinks = angular.isDefined(attrs.directionLinks) ? scope.$parent.$eval(attrs.directionLinks) : true;\n                scope.boundaryLinks = angular.isDefined(attrs.boundaryLinks) ? scope.$parent.$eval(attrs.boundaryLinks) : false;\n\n                var paginationRange = Math.max(scope.maxSize, 5);\n                scope.pages = [];\n                scope.pagination = {\n                    last: 1,\n                    current: 1\n                };\n                scope.range = {\n                    lower: 1,\n                    upper: 1,\n                    total: 1\n                };\n\n                scope.$watch(function() {\n                    return (paginationService.getCollectionLength(paginationId) + 1) * paginationService.getItemsPerPage(paginationId);\n                }, function(length) {\n                    if (0 < length) {\n                        generatePagination();\n                    }\n                });\n\n                scope.$watch(function() {\n                    return (paginationService.getItemsPerPage(paginationId));\n                }, function(current, previous) {\n                    if (current != previous) {\n                        goToPage(scope.pagination.current);\n                    }\n                });\n\n                scope.$watch(function() {\n                    return paginationService.getCurrentPage(paginationId);\n                }, function(currentPage, previousPage) {\n                    if (currentPage != previousPage) {\n                        goToPage(currentPage);\n                    }\n                });\n\n                scope.setCurrent = function(num) {\n                    if (isValidPageNumber(num)) {\n                        paginationService.setCurrentPage(paginationId, num);\n                    }\n                };\n\n                function goToPage(num) {\n                    if (isValidPageNumber(num)) {\n                        scope.pages = generatePagesArray(num, paginationService.getCollectionLength(paginationId), paginationService.getItemsPerPage(paginationId), paginationRange);\n                        scope.pagination.current = num;\n                        updateRangeValues();\n\n                        // if a callback has been set, then call it with the page number as an argument\n                        if (scope.onPageChange) {\n                            scope.onPageChange({ newPageNumber : num });\n                        }\n                    }\n                }\n\n                function generatePagination() {\n                    var page = parseInt(paginationService.getCurrentPage(paginationId)) || 1;\n\n                    scope.pages = generatePagesArray(page, paginationService.getCollectionLength(paginationId), paginationService.getItemsPerPage(paginationId), paginationRange);\n                    scope.pagination.current = page;\n                    scope.pagination.last = scope.pages[scope.pages.length - 1];\n                    if (scope.pagination.last < scope.pagination.current) {\n                        scope.setCurrent(scope.pagination.last);\n                    } else {\n                        updateRangeValues();\n                    }\n                }\n\n                /**\n                 * This function updates the values (lower, upper, total) of the `scope.range` object, which can be used in the pagination\n                 * template to display the current page range, e.g. \"showing 21 - 40 of 144 results\";\n                 */\n                function updateRangeValues() {\n                    var currentPage = paginationService.getCurrentPage(paginationId),\n                        itemsPerPage = paginationService.getItemsPerPage(paginationId),\n                        totalItems = paginationService.getCollectionLength(paginationId);\n\n                    scope.range.lower = (currentPage - 1) * itemsPerPage + 1;\n                    scope.range.upper = Math.min(currentPage * itemsPerPage, totalItems);\n                    scope.range.total = totalItems;\n                }\n\n                function isValidPageNumber(num) {\n                    return (numberRegex.test(num) && (0 < num && num <= scope.pagination.last));\n                }\n            }\n        };\n    }]);\n\n    module.filter('itemsPerPage', ['paginationService', function(paginationService) {\n\n        return function(collection, itemsPerPage, paginationId) {\n            if (typeof (paginationId) === 'undefined') {\n                paginationId = DEFAULT_ID;\n            }\n            if (!paginationService.isRegistered(paginationId)) {\n                throw 'pagination directive: the itemsPerPage id argument (id: ' + paginationId + ') does not match a registered pagination-id.';\n            }\n            var end;\n            var start;\n            if (collection instanceof Array) {\n                itemsPerPage = parseInt(itemsPerPage) || 9999999999;\n                if (paginationService.isAsyncMode(paginationId)) {\n                    start = 0;\n                } else {\n                    start = (paginationService.getCurrentPage(paginationId) - 1) * itemsPerPage;\n                }\n                end = start + itemsPerPage;\n                paginationService.setItemsPerPage(paginationId, itemsPerPage);\n\n                return collection.slice(start, end);\n            } else {\n                return collection;\n            }\n        };\n    }]);\n\n    module.service('paginationService', function() {\n\n        var instances = {};\n        var lastRegisteredInstance;\n\n        this.registerInstance = function(instanceId) {\n            if (typeof instances[instanceId] === 'undefined') {\n                instances[instanceId] = {\n                    asyncMode: false\n                };\n                lastRegisteredInstance = instanceId;\n            }\n        };\n\n        this.isRegistered = function(instanceId) {\n            return (typeof instances[instanceId] !== 'undefined');\n        };\n\n        this.getLastInstanceId = function() {\n            return lastRegisteredInstance;\n        };\n\n        this.setCurrentPageParser = function(instanceId, val, scope) {\n            instances[instanceId].currentPageParser = val;\n            instances[instanceId].context = scope;\n        };\n        this.setCurrentPage = function(instanceId, val) {\n            instances[instanceId].currentPageParser.assign(instances[instanceId].context, val);\n        };\n        this.getCurrentPage = function(instanceId) {\n            var parser = instances[instanceId].currentPageParser;\n            return parser ? parser(instances[instanceId].context) : 1;\n        };\n\n        this.setItemsPerPage = function(instanceId, val) {\n            instances[instanceId].itemsPerPage = val;\n        };\n        this.getItemsPerPage = function(instanceId) {\n            return instances[instanceId].itemsPerPage;\n        };\n\n        this.setCollectionLength = function(instanceId, val) {\n            instances[instanceId].collectionLength = val;\n        };\n        this.getCollectionLength = function(instanceId) {\n            return instances[instanceId].collectionLength;\n        };\n\n        this.setAsyncModeTrue = function(instanceId) {\n            instances[instanceId].asyncMode = true;\n        };\n\n        this.isAsyncMode = function(instanceId) {\n            return instances[instanceId].asyncMode;\n        };\n    });\n\n    module.provider('paginationTemplate', function() {\n\n        var templatePath = 'shared/pagination/dirPagination.tpl.html';\n\n        this.setPath = function(path) {\n            templatePath = path;\n        };\n\n        this.$get = function() {\n            return {\n                getPath: function() {\n                    return templatePath;\n                }\n            };\n        };\n    });\n})();\n","'use strict';\n\nangular.module('videoHub')\n  .directive('deliveryChart', function() {\n    return {\n      restrict: 'E',\n      templateUrl: 'shared/chart/chart.html',\n      scope: {\n        impressions: '@impressions'\n      },\n      //Setting up Highcharts options\n      controller: function($scope) {\n        $scope.semiCircleConfig = {\n          options: {\n            chart: {\n              type: 'pie',\n              backgroundColor: 'transparent',\n              height: 75,\n              margin: 0,\n              width: 75,\n            },\n            exporting: { enabled: false },\n            credits: { enabled: false },\n            tooltip: { enabled: false },\n            colors: ['#008d52', '#e2e2e2'],\n          },\n          series: [{\n            dataLabels: { enabled: false },\n            states: {\n              hover: {\n                 enabled: false\n              }\n            },\n            animation: false,\n            startAngle: -90,\n            endAngle: 90,\n            center: ['50%', '75%'],\n            innerSize: '50%',\n            name: 'Delivery',\n            data: [\n              parseInt($scope.impressions),\n              (100 - parseInt($scope.impressions))\n            ]\n          }],\n          title: {\n            text: ''\n          },\n          subtitle: {\n            text: ''\n          },\n          loading: false\n        };\n      }\n    };\n  });\n","'use strict';\n\nangular.module('videoHub')\n  .directive('createContent', function () {\n    return {\n      restrict: 'E',\n      templateUrl:  'shared/create-content/create-content.html',\n      controller: function($scope, $location){\n        $scope.setContentType = function(contentType){\n          $scope.contentType = contentType;\n        };\n\n        $scope.goToContentTypesCreationPage = function(){\n          $location.path('cms/new' + $scope.contentType + '/');\n        };\n      }\n    };\n  });\n","'use strict';\n\nangular.module('videoHub')\n\t.filter('convertToLocal', function() {\n    return function (input) {\n      if (input) {\n        return moment.utc(input).local().format('YYYY-MM-DD hh:mm A');\n      }\n      return input;\n    };\n  });\n","'use strict';\nangular.module('videoHub')\n  .constant('DatetimePickerConstants', {\n    'DATETIME_PICKER_FORMAT': 'Y-m-d h:i A',\n    'MOMENTJS_FORMAT': 'YYYY-MM-DDTHH:mm:DDZZ'\n  })\n  .directive('datetimepicker', ['$filter', 'DatetimePickerConstants', function($filter, DatetimePickerConstants) {\n    return {\n      scope: {\n        'date': '='\n      },\n      replace: true,\n      require:'ngModel',\n      template: '<input name=\"datepicker\" class=\"form-control\" ng-model=\"date\" type=\"text\"/>',\n      link: function(scope, element, attrs, ngModel){\n        scope.required = attrs.required || false;\n        element.datetimepicker({\n          format: DatetimePickerConstants.DATETIME_PICKER_FORMAT,\n          startDate: new Date(),\n          step: 15\n          });\n\n        function convertToLocal(value){\n          return $filter('convertToLocal')(value);\n        }\n\n        ngModel.$formatters.unshift(convertToLocal);\n\n        scope.formatDateForBackend = function(value){\n          if (value){\n            return moment(value, DatetimePickerConstants.DATETIME_PICKER_FORMAT).format(DatetimePickerConstants.MOMENTJS_FORMAT);\n          } else {\n            return '';\n          }\n        };\n\n        ngModel.$parsers.unshift(scope.formatDateForBackend);\n      }\n    };\n  }]);\n","'use strict';\nangular.module('videoHub')\n  .service('ListService', function($rootScope, $location, $injector, ValidQueryParamsForListPage) {\n\n    this.data = {};\n    var ListService = this;\n    this.service = null;\n    var currentService = null;\n\n    this.getParams = function() {\n      return this.data.params;\n    };\n\n    this.setService = function(serviceName) {\n      this.service = $injector.get(serviceName);\n      currentService = this.service;\n      this.data.params = $location.search();\n      this.data.list = [];\n      this.data.totalItems = 0;\n    };\n\n    this.clearSearch = function() {\n      this.data.params.q = '';\n    };\n\n    this.setFilter = function(newFilterValue) {\n      this.data.params.f = newFilterValue;\n    };\n\n    this.setList = function(list) {\n      ListService.data.list = list;\n      if (list.meta) {\n        ListService.data.totalItems = list.meta.count;\n      } else {\n        list.meta = {};\n        list.meta.count = 0;\n      }\n    };\n\n    this.setSearch = function(searchQuery) {\n      this.data.params.q = searchQuery;\n    };\n\n    this.setOrder = function(newOrderValue) {\n      var orderBy = this.data.params.order_by;\n      if (orderBy) {\n        //If the existing orderBy value matches the new one, invert it.\n        if (orderBy.indexOf(newOrderValue) > -1 && orderBy.indexOf('-') === -1) {\n          orderBy = '-' + newOrderValue;\n        } else {\n          //If the existing orderBy value is already inverted, remove it.\n          if (orderBy.indexOf(newOrderValue) > -1) {\n            orderBy = null;\n          }\n        }\n      } else {\n        orderBy = newOrderValue;\n      }\n\n      this.data.params.order_by = orderBy;\n    };\n\n    this.setPage = function(pageNumber) {\n      this.data.params.page = pageNumber;\n    };\n\n    this.updateList = function() {\n      this.data.params = _.pick(this.data.params, ValidQueryParamsForListPage);\n      this.data.params = _.omit(this.data.params, function(value) {\n        return _.isEmpty(value) && !_.isNumber(value);\n      });\n      $location.search(this.data.params);\n      return currentService.getList(this.data.params).then(ListService.setList);\n    };\n  });\n","'use strict';\n\nangular.module('videoHub')\n  .directive('navBar', function() {\n    return {\n        'restrict': 'E',\n        'templateUrl': 'shared/navbar/navbar.html',\n        'controller': function($scope, $rootScope, logoUrl, $location, CurrentUser) {\n            $scope.logoUrl = logoUrl;\n            CurrentUser.$simplified().then(function(data){\n              $scope.currentUserName = data.displayName;\n            });\n\n        }\n    };\n  });\n","'use strict';\n\nangular.module('videoHub')\n\t.filter('placeholder', function(placeholderUrl) {\n    return function (input) {\n      if (input) {\n        return input;\n      } else {\n        return placeholderUrl;\n      }\n    };\n  });\n","'use strict';\n\nangular.module('videoHub')\n  .directive('autocomplete', function($injector) {\n    return {\n      templateUrl: 'shared/autocomplete/autocomplete.html',\n      replace: true,\n      scope: {\n        'model': '=',\n        'service': '@service',\n        'labelAttr': '@',\n        'placeholderText': '@',\n      },\n      link: function(scope, element, attrs) {\n        scope.isRequired = attrs.isRequired === 'true';\n      },\n      controller: function($scope) {\n        //Inject service based on provided value\n        var service = $injector.get($scope.service);\n\n        $scope.doSearchAndUpdateCurrentModels = function() {\n          if ($scope.modelSelected || $scope.showDropdown || _.isEmpty($scope.search) || $scope.search.length < 4) {\n            $scope.currentModels = [];\n            $scope.showDropdown =  !_.isEmpty($scope.currentModels) && !$scope.modelSelected;\n            return;\n          } else {\n            service.getList({\n              'q': $scope.search\n            }).then($scope.updateCurrentModelsAndDisplayDropdown);\n          }\n        };\n\n        $scope.updateCurrentModelsAndDisplayDropdown = function(data) {\n          if (!_.isUndefined(data)) {\n            $scope.currentModels = data;\n            $scope.showDropdown =  !_.isEmpty($scope.currentModels) && !$scope.modelSelected;\n          } else {\n            $scope.currentModels = null;\n            $scope.showDropdown = false;\n          }\n        };\n\n        $scope.selectedElement = 0;\n        $scope.controlSelectedElementWithKeyboard = function(event) {\n          var keyCode = event.keyCode;\n          if ($scope.currentModels) {\n            var lastIndexOfCurrentModels = $scope.currentModels.length - 1;\n            switch (keyCode) {\n              case 27: // ESC\n                $scope.disableDropdown();\n                break;\n              case 40: // DOWN\n                $scope.selectedElement = $scope.selectedElement === lastIndexOfCurrentModels ?\n                  0 :\n                  $scope.selectedElement + 1;\n                break;\n              case 38: // UP\n                $scope.selectedElement = $scope.selectedElement === 0 ?\n                  lastIndexOfCurrentModels :\n                  $scope.selectedElement - 1;\n                break;\n              case 13: // RETURN\n                $scope.setModel($scope.currentModels[$scope.selectedElement]);\n                $scope.selectedElement = 0;\n                break;\n              default:\n                return;\n            }\n          }\n\n        };\n\n        $scope.disableDropdown = function(){\n          $scope.showDropdown = false;\n          $scope.selectedElement = 0;\n          $scope.search = '';\n          $scope.modelSelected = false;\n        };\n\n        $scope.setModel = function(model) {\n          if (!_.isUndefined(unbindListener)){\n            unbindListener();\n          }\n          $scope.model = model;\n          $scope.search = model[$scope.labelAttr];\n          if ($scope.currentModels) {\n            $scope.currentModels = null;\n          }\n          $scope.modelSelected = true;\n          $scope.showDropdown = false;\n          $scope.selectedElement = 0;\n        };\n\n        $scope.clear = function() {\n          $scope.model = null;\n          $scope.modelSelected = false;\n          $scope.search = '';\n        };\n\n        var unbindListener = $scope.$watch('model', function(newValue){\n          if (_.has(newValue, 'name')){\n            $scope.setModel(newValue);\n            unbindListener();\n          }\n        });\n      }\n    };\n  });\n","'use strict';\n(function () {\n  angular.module('BettyCropper', ['restangular'])\n    .value('DEFAULT_IMAGE_WIDTH', 1200)\n    .factory('Selection', SelectionFactory)\n    .factory('BettyImage', BettyImageFactory)\n    .service('BettyCropper', BettyCropperService);\n\n  function BettyCropperService($http, $interpolate, $q, IMAGE_SERVER_URL, BC_API_KEY, BettyImage) {\n      var fileInputId = '#bulbs-cms-hidden-image-file-input';\n      var inputTemplate = '<input id=\"bulbs-cms-hidden-image-file-input\" type=\"file\" accept=\"image/*\" style=\"position: absolute; left:-99999px;\" name=\"image\" />';\n\n      this.upload = upload;\n      this.get = get;\n      this.detail = get;\n      this.detailPatch = detailPatch;\n      this.updateSelection = updateSelection;\n\n      function upload() {\n        var uploadImageDeferred = $q.defer();\n\n        angular.element(fileInputId).remove();\n        var fileInput = angular.element(inputTemplate);\n        angular.element('body').append(fileInput);\n\n        fileInput.click();\n\n        fileInput.unbind('change');\n        fileInput.bind('change', function (e) {\n          if (e.target.files.length !== 1) {\n            uploadImageDeferred.reject('We need exactly one image!');\n          }\n          var file = e.target.files[0];\n          if (file.type.indexOf('image/') !== 0) {\n            uploadImageDeferred.reject('Not an image!');\n          }\n\n          if (file.size > 10 * 1024 * 1024) { // MAGIC!\n            uploadImageDeferred.reject('The file is too large!');\n          }\n\n          var imageData = new FormData();\n          imageData.append('image', file);\n\n          $http({\n            method: 'POST',\n            url: IMAGE_SERVER_URL + '/api/new',\n            headers: {\n              'X-Betty-Api-Key': BC_API_KEY,\n              'Content-Type': undefined,\n              'X-CSRFToken': undefined\n            },\n            data: imageData,\n            transformRequest: angular.identity,\n            transformResponse: function (data, headersGetter) {\n              // So, sometimes the browser doesn't think that JSON data is JSON.\n              if (typeof data === 'string') {\n                data = $.parseJSON(data);\n              }\n              var image = new BettyImage(data);\n              return image;\n            }\n          }).success(function (success) {\n            uploadImageDeferred.resolve(success);\n          }).error(function (error) {\n            uploadImageDeferred.reject(error);\n          });\n\n        });\n\n        return uploadImageDeferred.promise;\n      }\n\n      function get(id) {\n        return $http({\n          method: 'GET',\n          url: IMAGE_SERVER_URL + '/api/' + id,\n          headers: {\n            'X-Betty-Api-Key': BC_API_KEY,\n            'Content-Type': undefined,\n            'X-CSRFToken': undefined\n          },\n          transformRequest: angular.identity,\n          transformResponse: function (data, headersGetter) {\n            if (typeof data === 'string') {\n              data = $.parseJSON(data);\n            }\n            return new BettyImage(data);\n          }\n        });\n      }\n\n      function detailPatch(id, name, credit, selections) {\n        return $http({\n          method: 'PATCH',\n          url: IMAGE_SERVER_URL + '/api/' + id,\n          headers: {\n            'X-Betty-Api-Key': BC_API_KEY,\n            'Content-Type': undefined,\n            'X-CSRFToken': undefined\n          },\n          data: {\n            name: name,\n            credit: credit,\n            selections: selections\n          },\n          transformRequest: angular.identity,\n          transformResponse: function (data, headersGetter) {\n            if (typeof data === 'string') {\n              data = $.parseJSON(data);\n            }\n            return new BettyImage(data);\n          }\n        });\n      }\n\n      function updateSelection(id, ratio, selections) {\n        return $http({\n          method: 'POST',\n          url: IMAGE_SERVER_URL + '/api/' + id + '/' + ratio,\n          headers: {\n            'X-Betty-Api-Key': BC_API_KEY,\n            'Content-Type': undefined,\n            'X-CSRFToken': undefined\n          },\n          data: selections\n        });\n      }\n  }\n\n  function BettyImageFactory($interpolate, $http, IMAGE_SERVER_URL, BC_API_KEY, DEFAULT_IMAGE_WIDTH, Selection) {\n    function BettyImage(data) {\n      this.id = data.id;\n      this.name = data.name;\n      this.width = data.width;\n      this.height = data.height;\n      this.selections = {};\n      for (var ratio in data.selections) {\n        this.selections[ratio] = new Selection(data.selections[ratio]);\n      }\n    }\n\n    BettyImage.prototype.scaleToFit = function(width, height) {\n      var scale;\n      if (width && height) {\n        var fitRatio = width / height;\n        var thisRatio = this.width / this.height;\n        if (fitRatio > thisRatio) {\n          scale = height/ this.height;\n        } else {\n          scale = width / this.width;\n        }\n      } else {\n        if (width) {\n          scale = width / this.width;\n        }\n        if (height) {\n          scale = height/ this.height;\n        }\n      }\n      var scaled = {\n        width: Math.round(this.width * scale),\n        height: Math.round(this.height * scale),\n        scale: scale\n      };\n      return scaled;\n    };\n\n    BettyImage.prototype.getStyles = function(width, height, ratio) {\n      if (height === 0) {\n        height = null;\n      }\n\n      var selection = this.selections[ratio];\n      var scaledSelection = selection.scaleToFit(width, height);\n\n      return {\n        'background-image': 'url(' + this.url('original', DEFAULT_IMAGE_WIDTH, 'jpg') + ')',\n        'background-size': Math.floor(scaledSelection.width() / selection.width()  * this.width) + 'px',\n        'background-position': '-' + scaledSelection.x0 + 'px -' + scaledSelection.y0 + 'px',\n        'height': scaledSelection.height() + 'px',\n        'width': scaledSelection.width() + 'px',\n        'background-repeat': 'no-repeat',\n        'position': 'relative'\n      };\n    };\n\n    BettyImage.prototype.url = function (ratio, width, format) {\n      var exp = $interpolate(\n        '{{ base_url }}/{{ id }}/{{ ratio }}/{{ width }}.{{ format }}'\n      );\n      var idStr = this.id.toString();\n      var segmentedId = '';\n      for (var i=0; i < idStr.length; i++) {\n        if (i % 4 === 0 && i !== 0) {\n          segmentedId += '/';\n        }\n        segmentedId += idStr.substr(i, 1);\n      }\n      return exp({\n        base_url: IMAGE_SERVER_URL,\n        id: segmentedId,\n        ratio: ratio,\n        width: width,\n        format: format\n      });\n    };\n\n    BettyImage.prototype.updateSelection = function (ratio, selection) {\n      var data = {\n        x0: selection.x0,\n        x1: selection.x1,\n        y0: selection.y0,\n        y1: selection.y1\n      };\n      if (selection.source) {\n        data.source = selection.source;\n      }\n      return $http({\n        method: 'POST',\n        url: IMAGE_SERVER_URL + '/api/' + this.id + '/' + ratio,\n        headers: {\n          'X-Betty-Api-Key': BC_API_KEY,\n          'Content-Type': undefined,\n          'X-CSRFToken': undefined\n        },\n        data: data,\n        transformResponse: function (data, headersGetter) {\n          if (typeof data === 'string') {\n            data = $.parseJSON(data);\n          }\n          return [ratio, new Selection(data.selections[ratio])];\n        }\n      });\n    };\n\n    return BettyImage;\n  }\n\n  function SelectionFactory() {\n    function Selection(data) {\n        this.x0 = data.x0;\n        this.x1 = data.x1;\n        this.y0 = data.y0;\n        this.y1 = data.y1;\n        this.source = data.source;\n    }\n\n    Selection.prototype.width = function () {\n      return this.x1 - this.x0;\n    };\n\n    Selection.prototype.height = function () {\n      return this.y1 - this.y0;\n    };\n\n    Selection.prototype.scaleBy = function(scale) {\n      var scaledToFit = new Selection({\n        x0: Math.round(this.x0 * scale),\n        x1: Math.round(this.x1 * scale),\n        y0: Math.round(this.y0 * scale),\n        y1: Math.round(this.y1 * scale)\n      });\n      return scaledToFit;\n    };\n\n    Selection.prototype.scaleToFit = function (width, height) {\n\n      var scale;\n      if (width && height) {\n        var fitRatio = width / height;\n        var thisRatio = this.width() / this.height();\n        if (fitRatio > thisRatio) {\n          scale = height/ this.height();\n        } else {\n          scale = width / this.width();\n        }\n      } else {\n        if (width) {\n          scale = width / this.width();\n        }\n        if (height) {\n          scale = height/ this.height();\n        }\n      }\n      return this.scaleBy(scale);\n    };\n\n    return Selection;\n  }\n})();\n","'use strict';\n\nangular.module('videoHub')\n  .directive('bettyeditable', function($http, BettyCropper, openImageCropModal) {\n    return {\n      restrict: 'E',\n      templateUrl: 'shared/bettycropper/bettyeditable.html',\n      scope: {\n        'image': '=',\n        'addStyles': '@',\n        'placeholderText': '@',\n        'hideMetas': '=',\n        'ratio': '@',\n        'editable': '=?'\n      },\n      controller: function($scope, $element) {\n        $scope.editable = angular.isDefined($scope.editable) ? $scope.editable : true;\n        $scope.upload = function(e) {\n          BettyCropper.upload().then(\n            function(success) {\n              $scope.image = {\n                id: success.id,\n                caption: null,\n                alt: null\n              };\n              $scope.bettyImage = success;\n            },\n            function(error) {\n              console.log(error);\n            },\n            function(progress) {\n              console.log(progress);\n            }\n          );\n        };\n\n        $scope.edit = function(e) {\n          openImageCropModal($scope.image).then(function(image) {\n            if (image.id === null) {\n              $scope.image = null;\n            } else {\n              $scope.image = image;\n              BettyCropper.get($scope.image.id).then(function(response) {\n                $scope.bettyImage = response.data;\n                $scope.setStyles();\n              });\n            }\n          });\n        };\n      },\n\n      link: function(scope, element, attrs) {\n\n        if (scope.bettyImage === undefined) {\n          scope.bettyImage = null;\n        }\n\n        scope.setStyles = function() {\n          if (scope.bettyImage) {\n            scope.imageStyling = scope.bettyImage.getStyles(element.parent().width(), element.parent().height(), scope.ratio);\n          } else {\n            var ratioWidth = parseInt(scope.ratio.split('x')[0], 10);\n            var ratioHeight = parseInt(scope.ratio.split('x')[1], 10);\n            scope.imageStyling = {\n              'background-color': '#333',\n              'position': 'relative',\n              'width': element.parent().width(),\n              'height': Math.floor(element.parent().width() * ratioHeight / ratioWidth) + 'px',\n            };\n          }\n        };\n\n        scope.$watch('image', function(newImage, oldImage) {\n          if (newImage && newImage.id) {\n            BettyCropper.get(newImage.id).then(function(response) {\n              scope.bettyImage = response.data;\n            });\n          }\n        });\n\n        scope.$watch('bettyImage', function(newImage, oldImage) {\n          scope.setStyles();\n        }, true);\n\n        element.resize(scope.setStyles);\n\n        scope.removeImage = function() {\n          scope.image.id = null;\n        };\n\n        scope.editImage = function() {\n          openImageCropModal(scope.image)\n            .then(function(success) {\n              console.log(success);\n            });\n        };\n\n      }\n    };\n  });\n","'use strict';\n\nangular.module('BettyCropper')\n  .controller('ImageCropModalCtrl', function ($scope, $timeout, $modalInstance, BettyCropper, Selection, DEFAULT_IMAGE_WIDTH, imageData, ratios) {\n    $scope.selectedCrop = null;\n    $scope.cropMode = false;\n    $scope.ratios = ratios;\n    $scope.finished = false;\n    $scope.thumb_container_styles = {};\n    $scope.imageData = imageData;\n\n    if (!$scope.image) {\n      $scope.image = null;\n      BettyCropper.get(imageData.id).then(function(success){\n        $scope.image = success.data;\n      });\n    }\n\n    $scope.$watch('image', function (image) {\n      if (!image) {\n        return;\n      }\n\n      var finished = true;\n      for (var ratio in image.selections) {\n        if (image.selections[ratio].source === 'auto') {\n          finished = false;\n          break;\n        }\n      }\n      $scope.finished = finished;\n\n      $scope.scaleData = image.scaleToFit(550, 400);\n\n      $('.crop-image-container img').one('load', function () {\n        $(this).Jcrop({\n          allowSelect: false,\n          allowMove: true,\n          allowResize: true,\n          keySupport: false\n        }, function () {\n          $scope.jcrop_api = this;\n        });\n      });\n\n      $scope.image_url = image.url('original', DEFAULT_IMAGE_WIDTH, 'jpg');\n      if (!$scope.ratios) {\n        $scope.ratios = Object.keys(image.selections);\n      }\n\n      $scope.setThumbStyles();\n    });\n\n    $scope.$watch('selectedCrop', function(crop) {\n      if (!$scope.image) {\n        return;\n      }\n      var finished = true;\n      for (var ratio in $scope.image.selections) {\n        if ($scope.image.selections[ratio].source === 'auto' && ratio !== crop) {\n          finished = false;\n          break;\n        }\n      }\n      $scope.finished = finished;\n    });\n\n    $scope.selectCrop = function (ratio) {\n      if (!ratio) {\n        ratio = Object.keys($scope.image.selections)[0];\n        for (var key in $scope.image.selections) {\n          if ($scope.image.selections[key].source === 'auto') {\n            ratio = key;\n            break;\n          }\n        }\n      }\n      var selection = $scope.image.selections[ratio].scaleBy($scope.scaleData.scale);\n\n      $scope.jcrop_api.setOptions({\n        aspectRatio: selection.width() / selection.height()\n      });\n\n      $scope.jcrop_api.setSelect([\n        selection.x0,\n        selection.y0,\n        selection.x1,\n        selection.y1\n      ]);\n\n      $scope.cropMode = true;\n      $scope.selectedCrop = ratio;\n    };\n\n    $scope.setThumbStyles = function () {\n      $scope.thumb_styles = $scope.thumb_styles || {};\n\n      for (var ratio in $scope.image.selections) {\n        var scaledSelection = $scope.image.selections[ratio].scaleToFit(170, 170);\n        $scope.thumb_container_styles[ratio] = {\n          'padding-top': Math.round((180 - scaledSelection.height()) / 2) + 'px',\n          'padding-bottom': '5px',\n          'padding-left':  Math.round((180 - scaledSelection.width()) / 2) + 'px',\n          'padding-right': '5px'\n        };\n\n        $scope.thumb_styles[ratio] = $scope.image.getStyles(170, 170, ratio);\n      }\n    };\n\n    $scope.save = function (ratio) {\n\n      var jcrop_selection = $scope.jcrop_api.tellSelect();\n\n      var newSelection = new Selection({\n        x0: jcrop_selection.x,\n        x1: jcrop_selection.x2,\n        y0: jcrop_selection.y,\n        y1: jcrop_selection.y2,\n        source: 'user'\n      });\n      newSelection = newSelection.scaleBy(1 / $scope.scaleData.scale);\n      if (newSelection.x1 > $scope.image.width) {\n        newSelection.x1 = $scope.image.width;\n      }\n      if (newSelection.y1 > $scope.image.height) {\n        newSelection.y1 = $scope.image.height;\n      }\n\n      return this.image.updateSelection(ratio, newSelection);\n    };\n\n    $scope.saveAndQuit = function () {\n      var ratio = $scope.selectedCrop;\n      this.save(ratio).then(function (success) {\n        var ratio = success.data[0];\n        var selection = success.data[1];\n        $scope.image.selections[ratio] = selection;\n      });\n      $scope.cropMode = false;\n      $modalInstance.close(imageData);\n    };\n\n    $scope.saveAndNext = function () {\n      var ratio = $scope.selectedCrop;\n      this.save(ratio).then(function (success) {\n        var ratio = success.data[0];\n        var selection = success.data[1];\n        $scope.image.selections[ratio] = selection;\n\n        var nextRatioIndex = ($scope.ratios.indexOf(ratio) + 1) % $scope.ratios.length;\n\n        $scope.selectCrop($scope.ratios[nextRatioIndex]);\n      });\n    };\n\n  });\n","'use strict';\n\nangular.module('BettyCropper')\n  .factory('openImageCropModal', function ($modal) {\n    var openImageCropModal = function (imageData, ratios) {\n\n      return $modal.open({\n        templateUrl: 'shared/bettycropper/image-crop-modal.html',\n        controller: 'ImageCropModalCtrl',\n        resolve: {\n          imageData: function () { return imageData; },\n          ratios: function () { return ratios || false; }\n        },\n        backdrop: 'static'\n      }).result;\n\n    };\n\n    return openImageCropModal;\n  });\n","'use strict';\n\nangular.module('videoHub')\n  .service('CurrentUser', function EditorItems($http, $q) {\n\n    var userDefer = $q.defer(),\n      $userPromise = userDefer.promise;\n\n    this.data = [];\n\n    var self = this;\n    this.getItems = function() {\n      $http.get('me').then(function(response) {\n        self.data = response.data;\n        userDefer.resolve(response.data);\n      });\n    };\n\n    this.getItems();\n\n    /**\n     * Get promise that resolves when user data is populated.\n     */\n    this.$retrieveData = function() {\n      return $userPromise;\n    };\n\n    /**\n     * Create a simplified version of this user for storage.\n     */\n    this.$simplified = function() {\n\n      return $userPromise.then(function(user) {\n\n        var displayName = user.first_name && user.last_name ?\n          user.first_name + ' ' + user.last_name :\n          (user.email || user.username);\n\n        return {\n          id: user.id,\n          displayName: displayName\n        };\n\n      });\n\n    };\n\n  });\n","'use strict';\nangular.module('videoHub')\n  .directive('tagsAutocomplete', function($injector) {\n    return {\n      templateUrl: 'shared/tags-autocomplete/tags-autocomplete.html',\n      scope: {\n        'items': '=',\n        'service': '@service',\n        'labelAttr': '@',\n        'placeholderText': '@'\n      },\n      controller: function($scope, AlertService) {\n        //Inject service based on provided value\n        var service = $injector.get($scope.service);\n\n        $scope.fetchItemsThatMatchSearch = function() {\n          if (_.isEmpty($scope.search) || $scope.search.length < 4) {\n            $scope.currentItems = [];\n          } else {\n            $scope.tagsAreBeingFetchedFromTheServer = true;\n            AlertService.info('Tags are being fetched from the server, please wait.', false);\n            service.getList({\n              'q': $scope.search\n            }).then($scope.updateCurrentItemsAndDisplayDropdown,\n              function() {\n                AlertService.error('Somethign went wrong. Please contact your friendly sysadmin', true);\n              });\n          }\n        };\n\n        $scope.updateCurrentItemsAndDisplayDropdown = function(data) {\n          $scope.tagsAreBeingFetchedFromTheServer = false;\n          AlertService.success('Tags successfully fetched', true);\n          if (!_.isUndefined(data)) {\n            var currentItemsIds = _.pluck($scope.items, 'id');\n            data = _.reject(data, function(item) {\n              return _.contains(currentItemsIds, item.id);\n            });\n            $scope.currentItems = data;\n          } else {\n            $scope.currentItems = null;\n          }\n        };\n\n        $scope.clearSearch = function() {\n          $scope.search = '';\n          $scope.currentItems = [];\n          $scope.fetchItemsThatMatchSearch();\n          $scope.selectedElement = -1;\n        };\n\n        $scope.selectedElement = -1;\n        $scope.controlSelectedElementWithKeyboard = function(event) {\n          var keyCode = event.keyCode;\n          if (!_.isEmpty($scope.search)) {\n            var lastIndexOfCurrentItems = $scope.currentItems.length - 1;\n            switch (keyCode) {\n              case 27: // ESC\n                $scope.clearSearch();\n                break;\n              case 40: // DOWN\n                $scope.selectedElement = $scope.selectedElement >= lastIndexOfCurrentItems ?\n                  0 :\n                  $scope.selectedElement + 1;\n                break;\n              case 38: // UP\n                $scope.selectedElement = $scope.selectedElement <= 0 ?\n                  lastIndexOfCurrentItems :\n                  $scope.selectedElement - 1;\n                break;\n              case 13: // RETURN\n                if (!$scope.tagsAreBeingFetchedFromTheServer) {\n                  $scope.addItem($scope.currentItems[$scope.selectedElement]);\n                  $scope.selectedElement = -1;\n                }\n                break;\n              default:\n                return;\n            }\n          }\n\n        };\n\n        $scope.addItem = function(item) {\n          if (_.isUndefined(item)) {\n            item = {\n              'name': $scope.search\n            };\n            var isCurrentTagInCurrentItemsPredicate = _.matches(item);\n            var currentObjectFetchedFromCurrentItems = _.find($scope.currentItems, isCurrentTagInCurrentItemsPredicate);\n            if (currentObjectFetchedFromCurrentItems) {\n              $scope.items.push(currentObjectFetchedFromCurrentItems);\n            } else {\n              AlertService.info('Saving new tag...', false);\n              service.post(item).then(function(data) {\n                $scope.items.push(data);\n                $scope.clearSearch();\n                AlertService.success('New tag saved', true);\n              }, function() {\n                AlertService.error('Something went wrong. Plase contact your friendly sysadmin.', true);\n              });\n            }\n          } else {\n            $scope.items.push(item);\n          }\n          $scope.clearSearch();\n        };\n\n        $scope.removeItem = function(itemToBeRemovedFromArray) {\n          $scope.items = _.reject($scope.items, function(item) {\n            return item.id === itemToBeRemovedFromArray.id;\n          });\n        };\n      }\n    };\n  });\n","'use strict';\nangular.module('videoHub')\n  .directive('settingsButton', [function() {\n    return {\n      replace: true,\n      transclude: true,\n      templateUrl: 'shared/settingsbutton/settingsbutton.html',\n    };\n  }]);\n"]}