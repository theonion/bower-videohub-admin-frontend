{"version":3,"file":"app.min.js","sources":["../../app/app.js","../../app/components/videodetail/zencoder-service.js","../../app/components/videodetail/videodetail-controller.js","../../app/components/videodetail/videofield-directive.js","../../app/components/videodetail/channelselection-directive.js","../../app/components/videodetail/dropdownfilter-service.js","../../app/shared/videoplayer/videoplayer-directive.js","../../app/components/videolist/videolist-controller.js","../../app/components/login/login-controller.js","../../app/components/channeldetail/channeldetail-controller.js","../../app/components/channellist/channellist-controller.js","../../app/components/sponsordetail/sponsordetail-controller.js","../../app/components/sponsorlist/sponsorlist-controller.js","../../app/components/serieslist/serieslist-controller.js","../../app/components/seriesdetail/seriesdetail-controller.js","../../app/shared/alert/alert-directive.js","../../app/shared/alert/alert-service.js","../../app/shared/api/channel-service.js","../../app/shared/api/series-service.js","../../app/shared/api/season-service.js","../../app/shared/api/video-service.js","../../app/shared/api/sponsor-service.js","../../app/shared/api/tags-service.js","../../app/shared/auth/tokenauth-service.js","../../app/shared/pagination/dirPagination.js","../../app/shared/create-content/create-content.js","../../app/shared/datepicker/datepicker-directive.js","../../app/shared/datepicker/converttolocal-filter.js","../../app/shared/listservice/list-service.js","../../app/shared/dropdownselector/dropdownselector-directive.js","../../app/shared/bettycropper/betty-cropper.js","../../app/shared/bettycropper/bettyeditable.js","../../app/shared/bettycropper/imagecropmodal.js","../../app/shared/bettycropper/openimagecropmodal.js","../../app/shared/currentuser/currentuser-service.js","../../app/shared/listnavbar/listnavbar-directive.js","../../app/shared/detailsnavbar/detailsnavbar-directive.js","../../app/shared/tags-autocomplete/tags-autocomplete-directive.js","../../app/shared/articletools/articletools-directive.js"],"names":["angular","module","config","$locationProvider","$httpProvider","$routeProvider","$sceDelegateProvider","RestangularProvider","resourceUrlWhitelist","html5Mode","setBaseUrl","addResponseInterceptor","data","operation","results","meta","count","prev","next","when","templateUrl","controller","reloadOnSearch","otherwise","redirectTo","constant","UPLOAD_TO_S3_PROGRESS_MESSAGE","UPLOAD_TO_S3_UPLOAD_BEGINNING_MESSAGE","UPLOAD_TO_S3_UPLOAD_COMPLETE_MESSAGE","UPLOAD_TO_S3_UPLOAD_FAILED_MESSAGE","ENCODE_FAILED_MESSAGE","ENCODE_PROGRESS_MESSAGE","service","$http","$q","$interval","ZencoderConstants","uploadToS3","file","videoObject","s3Config","encoding_payload","s3deferred","defer","formData","FormData","append","key","AWSAccessKeyId","acl","success_action_status","policy","signature","xhr","XMLHttpRequest","open","upload_endpoint","upload","onprogress","e","notify","lengthComputable","replace","Math","round","loaded","total","onload","resolve","addEventListener","reject","send","promise","encode","encodeDeferred","doPOST","then","response","zencoderProgressEndpoint","json","progressInterval","url","method","ignoreAuthorizationHeader","state","cancel","_","isUndefined","progress","this","uploadToS3AndEncode","uploadToS3AndEncodeDeferred","successCallback","success","errorCallback","error","notifyCallback","SAVED_ALERT_MESSAGE","SOMETHING_WENT_WRONG_ALERT_MESSAGE","PLEASE_FILL_IN_ALL_REQUIRED_FIELDS_ALERT_MESSAGE","DELETE_SUCCESSFUL","$scope","$routeParams","VideoService","$location","AlertService","VideoDetailControllerConstants","DropdownFilterService","displaySaveSuccessfulAlert","displaySomethingWentWrongAlert","video","getVideo","one","videoId","get","setVideo","console","log","isEmpty","input","tags","autocompleteFields","tagObjects","dropdownFields","pluck","channel","setChannel","series","setSeries","sponsor","save","videoDetailForm","$valid","has","id","season","delete","remove","path","FILE_TOO_LARGE_ERROR_MESSAGE","MUST_UPLOAD_FILES_ERROR_MESSAGE","PLEASE_SELECT_A_FILE_ERROR_MESSAGE","UPLOAD_COMPLETE_SUCCESS_MESSAGE","directive","Zencoder","transclude","$timeout","VideoFieldConstants","uploadVideo","fileField","$","unbind","bind","event","target","files","validateVideoFile","addVideo","fetchNewVideoObject","message","info","click","validateVideoFileDeferred","size","type","indexOf","addVideoDeferred","doGET","encodingPayload","uploadToS3Arguments","checkIfSourcesHaveLoadedAndRetryIfTheyAreNot","sources","clear","link","fieldChanged","updateFields","populateChannelList","ChannelService","SeriesService","SeasonService","filter","newChannel","updateFilter","populateSeriesList","newSeries","populateSeasonList","setSeason","newSeason","setChannelList","channelList","channel__id","series__id","getList","page_size","seriesList","seasonList","restrict","scope","element","currentVideo","find","player","videojs","controls","autoplay","width","height","on","pause","$on","dispose","$rootScope","ListService","updateList","list","totalItems","params","getParams","setService","setFilterAndUpdateList","newFilterValue","setFilter","changeToEditPage","setOrderAndUpdateList","newOrderValue","setOrder","clearSearchAndUpdateList","clearSearch","pageChanged","newPageNumber","setPage","setSearchAndUpdateList","setSearch","q","new","authService","showSearchBar","showSaveButton","username","password","submitLogin","login","ChannelDetailControllerConstants","getChannel","channelId","partner","channelDetailForm","SponsorService","SponsorDetailControllerConstants","getSponsor","sponsorId","sponsorDetailForm","SeriesDetailControllerConstants","getSeries","seriesId","seriesDetailForm","alertStatus","TIME_TO_WAIT_BEFORE_CLEARING","AlertServiceConstants","clearAfterDisplayingMessageFlag","setAlertStatusElementsToFalse","alertDeferred","alertService","factory","Restangular","$injector","httpRequestBuffer","localStorageService","request","headers","token","Authorization","responseError","ignoreAuthModule","status","deferred","refreshToken","interceptors","push","_login","post","set","_refreshToken","retryAll","rejectAll","_retryHttpRequest","buffer","reason","each","moduleName","DEFAULT_ID","err","$compile","$parse","paginationService","terminal","multiElement","priority","compile","tElement","tAttrs","expression","dirPaginate","match","filterPattern","itemsPerPageFilterRemoved","collectionGetter","rawId","paginationId","registerInstance","attrs","repeatExpression","idDefinedInFilter","hasAttribute","$set","eq","length","attr","currentPageGetter","compiled","currentPage","defaultCurrentPage","setCurrentPageParser","setAsyncModeTrue","$watch","result","setCollectionLength","$watchCollection","collection","paginationTemplate","generatePagesArray","collectionLength","rowsPerPage","paginationRange","position","pages","totalPages","ceil","halfWay","ellipsesNeeded","i","pageNumber","calculatePageNumber","openingEllipsesNeeded","closingEllipsesNeeded","numberRegex","elem","getPath","maxSize","onPageChange","goToPage","num","isValidPageNumber","getCollectionLength","getItemsPerPage","pagination","current","updateRangeValues","generatePagination","page","parseInt","getCurrentPage","last","setCurrent","itemsPerPage","range","lower","upper","min","test","isRegistered","idMessage","directionLinks","isDefined","$parent","$eval","boundaryLinks","max","previous","previousPage","setCurrentPage","end","start","Array","isAsyncMode","setItemsPerPage","slice","lastRegisteredInstance","instances","instanceId","asyncMode","getLastInstanceId","val","currentPageParser","context","assign","parser","provider","templatePath","setPath","$get","setContentType","contentType","goToContentTypesCreationPage","DATETIME_PICKER_FORMAT","MOMENTJS_FORMAT","$filter","DatetimePickerConstants","date","require","template","ngModel","convertToLocal","value","required","datetimepicker","format","startDate","Date","step","$formatters","unshift","formatDateForBackend","moment","$parsers","utc","local","ValidQueryParamsForListPage","currentService","serviceName","search","f","setList","searchQuery","orderBy","order_by","pick","omit","isNumber","ngRequired","placeholderText","populateCurrentItemsList","currentItems","BettyCropperService","$interpolate","IMAGE_SERVER_URL","BC_API_KEY","BettyImage","uploadImageDeferred","fileInputId","fileInput","inputTemplate","imageData","X-Betty-Api-Key","Content-Type","undefined","X-CSRFToken","transformRequest","identity","transformResponse","parseJSON","image","detailPatch","name","credit","selections","updateSelection","ratio","detail","BettyImageFactory","DEFAULT_IMAGE_WIDTH","Selection","prototype","scaleToFit","scale","fitRatio","thisRatio","scaled","getStyles","selection","scaledSelection","background-image","background-size","floor","background-position","x0","y0","background-repeat","exp","idStr","toString","segmentedId","substr","base_url","x1","y1","source","SelectionFactory","scaleBy","scaledToFit","BettyCropper","openImageCropModal","addStyles","hideMetas","editable","caption","alt","bettyImage","edit","setStyles","imageStyling","parent","ratioWidth","split","ratioHeight","background-color","newImage","resize","removeImage","editImage","$modalInstance","ratios","selectedCrop","cropMode","finished","thumb_container_styles","scaleData","Jcrop","allowSelect","allowMove","allowResize","keySupport","jcrop_api","image_url","Object","keys","setThumbStyles","crop","selectCrop","setOptions","aspectRatio","setSelect","thumb_styles","padding-top","padding-bottom","padding-left","padding-right","jcrop_selection","tellSelect","newSelection","x","x2","y","y2","saveAndQuit","close","saveAndNext","nextRatioIndex","$modal","backdrop","userDefer","$userPromise","self","getItems","$retrieveData","$simplified","user","displayName","first_name","last_name","email","logoUrl","CurrentUser","currentUserName","items","labelAttr","fetchItemsThatMatchSearch","tagsAreBeingFetchedFromTheServer","updateCurrentItemsAndDisplayDropdown","currentItemsIds","item","contains","selectedElement","controlSelectedElementWithKeyboard","keyCode","lastIndexOfCurrentItems","addItem","isCurrentTagInCurrentItemsPredicate","matches","currentObjectFetchedFromCurrentItems","removeItem","itemToBeRemovedFromArray"],"mappings":"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","sourcesContent":["'use strict';\n\n// ****** App Config ****** \\\\\n\nangular.module('videoHub', [\n    'ngCookies',\n    'ngRoute',\n    'ngAnimate',\n    'ngMessages',\n    'restangular',\n    'highcharts-ng',\n    'BettyCropper',\n    'ui.bootstrap',\n    'LocalStorageModule'\n  ])\n  .config(function($locationProvider, $httpProvider, $routeProvider, $sceDelegateProvider, RestangularProvider) {\n    //TODO: Put this code into a more meaningful locaiton. Throwing all of this stuff into config is not proper\n    //Add some stuff to the whitelist to prevent XSS blocking stuff\n    $sceDelegateProvider.resourceUrlWhitelist(['self', 'http://assets.onionstatic.com/videoads/*', 'http://onionwebtech.s3.amazonaws.com/**', 'http://tv.theonion.com/**', 'http://v.theonion.com/**']);\n\n    $locationProvider.html5Mode(true);\n\n    //Set the base URL for the Restangular stuff\n    RestangularProvider.setBaseUrl('/api/v0/');\n\n    //We need a response interceptor for 'getList' becuase it contains additional metadata that is normally stripped out by restangular\n    RestangularProvider.addResponseInterceptor(function(data, operation) {\n      if (operation === 'getList') {\n        var results = data.results;\n        if (results) {\n          results.meta = {\n            count: data.count,\n            prev: data.prev,\n            next: data.next\n          };\n        }\n        return results;\n      }\n      return data;\n    });\n\n    $routeProvider\n      .when('/cms/', {\n        templateUrl: 'components/videolist/videolist.html',\n        controller: 'VideoListController',\n        reloadOnSearch: false\n      })\n      .when('/cms/series/', {\n        templateUrl: 'components/serieslist/serieslist.html',\n        controller: 'SeriesListController',\n        reloadOnSearch: false\n      })\n      .when('/cms/channels/', {\n        templateUrl: 'components/channellist/channellist.html',\n        controller: 'ChannelListController',\n        reloadOnSearch: false\n      })\n      .when('/cms/sponsors/', {\n        templateUrl: 'components/sponsorlist/sponsorlist.html',\n        controller: 'SponsorListController',\n        reloadOnSearch: false\n      })\n      .when('/cms/login/', {\n        templateUrl: 'components/login/login.html',\n        controller: 'LoginController'\n      })\n      .when('/cms/video/:videoId/', {\n        templateUrl: 'components/videodetail/videodetail.html',\n        controller: 'VideoDetailController'\n      })\n      .when('/cms/channel/:channelId/', {\n        templateUrl: 'components/channeldetail/channeldetail.html',\n        controller: 'ChannelDetailController'\n      })\n      .when('/cms/series/:seriesId/', {\n        templateUrl: 'components/seriesdetail/seriesdetail.html',\n        controller: 'SeriesDetailController'\n      })\n      .when('/cms/sponsor/:sponsorId/', {\n        templateUrl: 'components/sponsordetail/sponsordetail.html',\n        controller: 'SponsorDetailController'\n      })\n      .otherwise({\n        redirectTo: '/cms/'\n      });\n  })\n  .constant('ValidQueryParamsForListPage', [\n    'q', 'page', 'f', 'page_size', 'order_by'\n  ]);\n","'use strict';\n\nangular.module('videoHub')\n  .constant('ZencoderConstants', {\n    'UPLOAD_TO_S3_PROGRESS_MESSAGE': 'Uploading X% complete',\n    'UPLOAD_TO_S3_UPLOAD_BEGINNING_MESSAGE': 'Uploading...',\n    'UPLOAD_TO_S3_UPLOAD_COMPLETE_MESSAGE': 'Upload Complete. Begin Encoding.',\n    'UPLOAD_TO_S3_UPLOAD_FAILED_MESSAGE': 'Upload Failed',\n    'ENCODE_FAILED_MESSAGE': 'Encoding has failed.',\n    'ENCODE_PROGRESS_MESSAGE': 'Encoding: X%'\n  })\n  .service('Zencoder', function Zencoder($http, $q, $interval, ZencoderConstants) {\n\n    //TODO: this config object is awful\n    this.uploadToS3AndEncode = function(config) {\n      var uploadToS3AndEncodeDeferred = $q.defer();\n      var file = config.file;\n      var videoObject = config.videoObject;\n      //TODO: MOve into own function\n      var successCallback = function(success) {\n        uploadToS3AndEncodeDeferred.resolve(success);\n      };\n      var errorCallback = function(error) {\n        uploadToS3AndEncodeDeferred.reject(error);\n      };\n      var notifyCallback = function(notify) {\n        uploadToS3AndEncodeDeferred.notify(notify);\n      };\n\n      uploadToS3(file, videoObject)\n        .then(encode, errorCallback, notifyCallback)\n        .then(successCallback, errorCallback, notifyCallback);\n\n      return uploadToS3AndEncodeDeferred.promise;\n    };\n\n    function uploadToS3(file, videoObject) {\n      var s3Config = videoObject.encoding_payload;\n      var s3deferred = $q.defer();\n      //TODO: setup form data function\n      var formData = new FormData();\n      formData.append('key', s3Config.key);\n      formData.append('AWSAccessKeyId', s3Config.AWSAccessKeyId);\n      formData.append('acl', s3Config.acl);\n      formData.append('success_action_status', s3Config.success_action_status);\n      formData.append('policy', s3Config.policy);\n      formData.append('signature', s3Config.signature);\n      formData.append('file', file);\n      //We use XMLHttpRequest here becuase angular's http methods don't support progress updates.\n      //TODO: move this into separate function\n      var xhr = new XMLHttpRequest();\n      xhr.open('POST', s3Config.upload_endpoint);\n\n      xhr.upload.onprogress = function(e) {\n        if (e.lengthComputable) {\n          s3deferred.notify(ZencoderConstants.UPLOAD_TO_S3_PROGRESS_MESSAGE.replace('X', Math.round(e.loaded / e.total * 100)));\n        } else {\n          s3deferred.notify(ZencoderConstants.UPLOAD_TO_S3_UPLOAD_BEGINNING_MESSAGE);\n        }\n      };\n\n      xhr.onload = function() {\n        s3deferred.notify(ZencoderConstants.UPLOAD_TO_S3_UPLOAD_COMPLETE_MESSAGE);\n        s3deferred.resolve(videoObject);\n      };\n\n      xhr.addEventListener('error', function() {\n        s3deferred.reject(ZencoderConstants.UPLOAD_TO_S3_UPLOAD_FAILED_MESSAGE);\n      });\n\n      xhr.send(formData);\n      return s3deferred.promise;\n\n    }\n\n    function encode(videoObject) {\n      var encodeDeferred = $q.defer();\n      videoObject.doPOST({}, 'encode')\n        .then(function(response) {\n          var zencoderProgressEndpoint = response.json;\n          //TODO: Remove horrible interval stuff, just obnoxous\n          var progressInterval = $interval(function() {\n            $http({\n              url: zencoderProgressEndpoint,\n              method: 'GET',\n              'ignoreAuthorizationHeader': true\n            }).then(function(response) {\n              if (response.data.state === 'finished') {\n                encodeDeferred.resolve(videoObject);\n                $interval.cancel(progressInterval);\n              } else if (response.data.state === 'failed') {\n                encodeDeferred.reject(ZencoderConstants.ENCODE_FAILED_MESSAGE);\n                $interval.cancel(progressInterval);\n              } else {\n                if (!_.isUndefined(response.data.progress)) {\n                  encodeDeferred.notify(ZencoderConstants.ENCODE_PROGRESS_MESSAGE.replace('X', Math.round(response.data.progress)));\n                }\n              }\n            });\n          }, 2000);\n        }, function(data) {\n          encodeDeferred.reject(data);\n        });\n      return encodeDeferred.promise;\n    }\n  });\n","'use strict';\nangular.module('videoHub')\n  //TODO: These constants are redundant between the detail pages. Should be merged together into one mega-constant.\n  .constant('VideoDetailControllerConstants', {\n    SAVED_ALERT_MESSAGE: 'Saved',\n    SOMETHING_WENT_WRONG_ALERT_MESSAGE: 'Something went wrong with saving the Video. Please call your friendly sysadmin.',\n    PLEASE_FILL_IN_ALL_REQUIRED_FIELDS_ALERT_MESSAGE: 'Please fill in all required fields.',\n    DELETE_SUCCESSFUL: 'Delete successful'\n  })\n  .controller('VideoDetailController', function($scope, $routeParams, VideoService, $location, AlertService, VideoDetailControllerConstants, DropdownFilterService) {\n    $scope.video = {};\n\n    $scope.getVideo = function() {\n      return VideoService.one($routeParams.videoId).get().then(\n        $scope.setVideo,\n        function(data) {\n          console.log(data);\n        }\n      );\n    };\n\n    $scope.setVideo = function(data) {\n      if (_.isEmpty(data.input)) {\n        data.input = '';\n      }\n      $scope.video = data;\n      if (_.isUndefined($scope.video.tags)) {\n        $scope.video.tags = [];\n      }\n\n      $scope.autocompleteFields.tagObjects = $scope.video.tags;\n      $scope.dropdownFields = {};\n      $scope.video.tags = _.pluck($scope.video.tags, 'id');\n\n      if (!_.isUndefined(data.channel)) {\n        DropdownFilterService.setChannel(data.channel);\n      }\n      if (!_.isUndefined(data.series)) {\n        DropdownFilterService.setSeries(data.series);\n      }\n      if (!_.isUndefined(data.sponsor)) {\n        $scope.dropdownFields.sponsor = data.sponsor;\n      }\n    };\n\n    $scope.save = function() {\n      if ($scope.videoDetailForm.$valid) {\n        if (_.has(DropdownFilterService.data.channel, 'id')) {\n          $scope.video.channel = DropdownFilterService.data.channel.id;\n        } else {\n          $scope.video.channel = null;\n        }\n\n        if (_.has(DropdownFilterService.data.series, 'id')) {\n          $scope.video.series = DropdownFilterService.data.series.id;\n        } else {\n          $scope.video.series = null;\n        }\n\n        if (_.has(DropdownFilterService.data.season, 'id')) {\n          $scope.video.season = DropdownFilterService.data.season.id;\n        } else {\n          $scope.video.season = null;\n        }\n\n        if (_.has($scope.dropdownFields.sponsor, 'id')) {\n          $scope.video.sponsor = $scope.dropdownFields.sponsor.id;\n        }\n        $scope.video.tags = _.pluck($scope.autocompleteFields.tagObjects, 'id');\n        $scope.video.save().then(displaySaveSuccessfulAlert, displaySomethingWentWrongAlert);\n      } else {\n        AlertService.error(VideoDetailControllerConstants.PLEASE_FILL_IN_ALL_REQUIRED_FIELDS_ALERT_MESSAGE, true);\n      }\n    };\n\n    function displaySaveSuccessfulAlert() {\n      return AlertService.success(VideoDetailControllerConstants.SAVED_ALERT_MESSAGE, true);\n    }\n\n    function displaySomethingWentWrongAlert() {\n      AlertService.error(VideoDetailControllerConstants.SOMETHING_WENT_WRONG_ALERT_MESSAGE, true);\n    }\n\n    $scope.delete = function() {\n      $scope.video.remove().then(function() {\n        AlertService.success(VideoDetailControllerConstants.DELETE_SUCCESSFUL, true).then(function() {\n          $location.path('cms/');\n        });\n      });\n    };\n\n    $scope.autocompleteFields = {};\n    $scope.getVideo();\n  });\n","'use strict';\n\nangular.module('videoHub')\n  .constant('VideoFieldConstants', {\n    FILE_TOO_LARGE_ERROR_MESSAGE: 'Upload file cannot be larger than 1024MB.',\n    MUST_UPLOAD_FILES_ERROR_MESSAGE: 'You must upload a video file.',\n    PLEASE_SELECT_A_FILE_ERROR_MESSAGE: 'Please select a file.',\n    UPLOAD_COMPLETE_SUCCESS_MESSAGE: 'Upload Complete'\n  })\n  .directive('videoField', function(Zencoder, $q) {\n    return {\n      templateUrl: 'components/videodetail/videofield.html',\n      transclude: true,\n      controller: function($scope, AlertService, $timeout, VideoFieldConstants, VideoService) {\n\n        $scope.uploadVideo = function() {\n          var fileField = $('#' + $scope.video.id + '-file-field');\n          fileField.unbind('change');\n          fileField.bind('change', function(event) {\n            var file = event.target.files[0];\n            $scope.validateVideoFile(file)\n              .then($scope.addVideo)\n              .then(Zencoder.uploadToS3AndEncode)\n              .then(\n                function() {\n                  AlertService.success(VideoFieldConstants.UPLOAD_COMPLETE_SUCCESS_MESSAGE, true).then($scope.fetchNewVideoObject);\n                },\n                function(error) {\n                  AlertService.error(error, true);\n                },\n                function(message) {\n                  if (!_.isUndefined(message)) {\n                    AlertService.info(message, false);\n                  }\n                });\n          });\n          fileField.click();\n        };\n\n        $scope.validateVideoFile = function(file) {\n          var validateVideoFileDeferred = $q.defer();\n          if (file) {\n            if (file.size > (1024 * 1024 * 1024)) {\n              validateVideoFileDeferred.reject(VideoFieldConstants.FILE_TOO_LARGE_ERROR_MESSAGE);\n            } else if (file.type.indexOf('video/') !== 0) {\n              validateVideoFileDeferred.reject(VideoFieldConstants.MUST_UPLOAD_FILES_ERROR_MESSAGE);\n            } else {\n              validateVideoFileDeferred.resolve(file);\n            }\n          } else {\n            validateVideoFileDeferred.reject(VideoFieldConstants.PLEASE_SELECT_A_FILE_ERROR_MESSAGE);\n          }\n          return validateVideoFileDeferred.promise;\n        };\n\n        $scope.addVideo = function(file) {\n          var addVideoDeferred = $q.defer();\n\n          $scope.video.doGET('encoding_auth').then(function(encodingPayload) {\n            $scope.video.encoding_payload = encodingPayload;\n            var uploadToS3Arguments = {\n              'file': file,\n              'videoObject': $scope.video\n            };\n            addVideoDeferred.resolve(uploadToS3Arguments);\n          });\n          return addVideoDeferred.promise;\n        };\n\n        $scope.checkIfSourcesHaveLoadedAndRetryIfTheyAreNot = function(response) {\n          if (_.isEmpty(response.sources)) {\n            $timeout($scope.fetchNewVideoObject, 2000);\n          } else {\n            $scope.video = response;\n            AlertService.clear();\n          }\n        };\n\n        $scope.fetchNewVideoObject = function() {\n          // We reload the video after all of the fun is over, in order to update it with the new sources.\n          VideoService.one($scope.video.id).get()\n            .then($scope.checkIfSourcesHaveLoadedAndRetryIfTheyAreNot);\n        };\n      }\n    };\n  });\n","'use strict';\nangular.module('videoHub').directive('channelSelection', ['DropdownFilterService', function(DropdownFilterService) {\n  return {\n    templateUrl: 'components/videodetail/channelselection.html',\n    transclude: true,\n    link: function($scope) {\n      $scope.data = DropdownFilterService.data;\n      $scope.fieldChanged = function() {\n        DropdownFilterService.updateFields();\n      };\n      DropdownFilterService.populateChannelList();\n    }\n  };\n}]);\n","'use strict';\nangular.module('videoHub')\n  .service('DropdownFilterService', function(ChannelService, SeriesService, SeasonService) {\n\n    //There are places you can have thistakes in this service, so instead of using this, I use DropdownFilterService\n    var DropdownFilterService = this;\n    DropdownFilterService.data = {};\n    DropdownFilterService.filter = {};\n\n    DropdownFilterService.updateFields = function() {\n      if (!DropdownFilterService.data.channel) {\n        DropdownFilterService.clear();\n      }\n      if (!DropdownFilterService.data.series) {\n        DropdownFilterService.data.season = null;\n      }\n    };\n\n    DropdownFilterService.setChannel = function(newChannel) {\n      if (newChannel) {\n        DropdownFilterService.data.channel = newChannel;\n        DropdownFilterService.updateFilter();\n        DropdownFilterService.populateSeriesList();\n      } else {\n        DropdownFilterService.clear();\n      }\n    };\n\n    DropdownFilterService.setSeries = function(newSeries) {\n      if (newSeries) {\n        DropdownFilterService.data.series = newSeries;\n        DropdownFilterService.updateFilter();\n        DropdownFilterService.populateSeasonList();\n      } else {\n        DropdownFilterService.data.series = null;\n        DropdownFilterService.data.season = null;\n      }\n    };\n\n    DropdownFilterService.setSeason = function(newSeason) {\n      if (newSeason) {\n        DropdownFilterService.data.season = newSeason;\n        DropdownFilterService.season = newSeason;\n      } else {\n        DropdownFilterService.season = null;\n      }\n    };\n\n    DropdownFilterService.setChannelList = function(channelList) {\n      DropdownFilterService.data.channelList = channelList;\n    };\n\n    DropdownFilterService.clear = function() {\n      DropdownFilterService.data.channel = null;\n      DropdownFilterService.data.series = null;\n      DropdownFilterService.data.season = null;\n    };\n\n    DropdownFilterService.updateFilter = function() {\n      if (_.has(DropdownFilterService.data.channel, 'id')) {\n        DropdownFilterService.filter.channel__id = DropdownFilterService.data.channel.id;\n      } else {\n        DropdownFilterService.filter.channel__id = null;\n      }\n\n      if (_.has(DropdownFilterService.data.series, 'id')) {\n        DropdownFilterService.filter.series__id = DropdownFilterService.data.series.id;\n      } else {\n        DropdownFilterService.filter.series__id = null;\n      }\n    };\n\n    DropdownFilterService.populateChannelList = function() {\n      return ChannelService.getList({\n        'page_size': 100\n      }).then(DropdownFilterService.setChannelList);\n    };\n\n    DropdownFilterService.populateSeriesList = function() {\n      return SeriesService.getList({\n        'page_size': 100,\n        'channel__id': DropdownFilterService.filter.channel__id\n      }).then(function(data) {\n        DropdownFilterService.data.seriesList = data;\n      });\n    };\n\n    DropdownFilterService.populateSeasonList = function() {\n      return SeasonService.getList({\n        'page_size': 100,\n        'series__id': DropdownFilterService.filter.series__id\n      }).then(function(data) {\n        DropdownFilterService.data.seasonList = data;\n      });\n    };\n  });\n","'use strict';\n\nangular.module('videoHub')\n  .directive('videoPlayer', [ function() {\n    return {\n      replace: false,\n      restrict: 'E',\n      transclude: true,\n      templateUrl: 'shared/videoplayer/videoplayer.html',\n      link: function(scope, element) {\n        var currentVideo = element.find('video')[0];\n        scope.player = videojs(currentVideo, {\n          'controls': true,\n          'autoplay': false,\n          'width': 'auto',\n          'height': 'auto'\n        });\n\n        element.find('.modal').on('hidden.bs.modal', function(){\n          scope.player.pause();\n        });\n\n        scope.$on('$destroy', function(){\n          scope.player.dispose();\n        });\n      }\n    };\n  }]);\n","'use strict';\nangular.module('videoHub')\n  .controller('VideoListController', function($scope, $location, $routeParams, $rootScope, ListService) {\n    ListService.setService('VideoService');\n\n    function updateList() {\n      ListService.updateList()\n        .then(function() {\n          $scope.list = ListService.data.list;\n          $scope.totalItems = ListService.data.totalItems;\n          $scope.params = ListService.getParams();\n        });\n    }\n    updateList();\n\n    $scope.setFilterAndUpdateList = function(newFilterValue) {\n      ListService.setFilter(newFilterValue);\n      updateList();\n    };\n\n    $scope.changeToEditPage = function(id) {\n      $location.path('cms/video/' + id + '/');\n    };\n\n    $scope.setOrderAndUpdateList = function(newOrderValue) {\n      ListService.setOrder(newOrderValue);\n      updateList();\n    };\n\n    $scope.clearSearchAndUpdateList = function() {\n      ListService.clearSearch();\n      updateList();\n    };\n\n    $scope.pageChanged = function(newPageNumber) {\n      ListService.setPage(newPageNumber);\n      updateList();\n    };\n\n    $scope.setSearchAndUpdateList = function() {\n      ListService.setSearch($scope.params.q);\n      updateList();\n    };\n\n    $scope.new = function() {\n      $location.path('cms/new/');\n    };\n  });\n","'use strict';\n\nangular.module('videoHub')\n    .controller('LoginController', function($scope, authService, $location, $rootScope) {\n        $rootScope.showSearchBar = false;\n        $rootScope.showSaveButton = false;\n        $scope.username = '';\n        $scope.password = '';\n        $scope.submitLogin = function() {\n            authService.login($scope.username, $scope.password);\n        };\n    });\n","'use strict';\nangular.module('videoHub')\n  .constant('ChannelDetailControllerConstants', {\n    SAVED_ALERT_MESSAGE: 'Saved',\n    SOMETHING_WENT_WRONG_ALERT_MESSAGE: 'Something went wrong with saving the Channel. Please call your friendly sysadmin.',\n    PLEASE_FILL_IN_ALL_REQUIRED_FIELDS_ALERT_MESSAGE: 'Please fill in all required fields.',\n    DELETE_SUCCESSFUL: 'Delete successful'\n  })\n  .controller('ChannelDetailController', function($scope, $routeParams, ChannelService, $location, AlertService, ChannelDetailControllerConstants) {\n    $scope.channel = {};\n\n    $scope.getChannel = function() {\n      return ChannelService.one($routeParams.channelId).get().then(\n        function(data) {\n          $scope.channel = data;\n          $scope.dropdownFields.partner = $scope.channel.partner;\n        },\n        function(data) {\n          console.log(data);\n        }\n      );\n    };\n\n    $scope.save = function() {\n      if ($scope.channelDetailForm.$valid) {\n        if (_.has($scope.dropdownFields.partner, 'id')){\n          $scope.channel.partner = $scope.dropdownFields.partner.id;\n        } else {\n          $scope.channel.partner = null;\n        }\n        $scope.channel.save().then(displaySaveSuccessfulAlert, displaySomethingWentWrongAlert);\n      } else {\n        AlertService.error(ChannelDetailControllerConstants.PLEASE_FILL_IN_ALL_REQUIRED_FIELDS_ALERT_MESSAGE, true);\n      }\n    };\n\n    function displaySaveSuccessfulAlert() {\n      return AlertService.success(ChannelDetailControllerConstants.SAVED_ALERT_MESSAGE, true);\n    }\n\n    function displaySomethingWentWrongAlert() {\n      AlertService.error(ChannelDetailControllerConstants.SOMETHING_WENT_WRONG_ALERT_MESSAGE, true);\n    }\n\n    $scope.delete = function() {\n      AlertService.info('If you would like to delete a channel, please contact your friendly sysadmin.', true);\n    };\n\n    $scope.dropdownFields = {};\n    $scope.getChannel();\n  });\n","'use strict';\nangular.module('videoHub')\n  .controller('ChannelListController', function($scope, $location, $routeParams, $rootScope, ListService) {\n    ListService.setService('ChannelService');\n\n    function updateList() {\n      ListService.updateList()\n        .then(function() {\n          $scope.list = ListService.data.list;\n          $scope.totalItems = ListService.data.totalItems;\n          $scope.params = ListService.getParams();\n        });\n    }\n    updateList();\n\n    $scope.setFilterAndUpdateList = function(newFilterValue) {\n      ListService.setFilter(newFilterValue);\n      updateList();\n      //Only used to determine active state\n    };\n\n    $scope.changeToEditPage = function(id) {\n      $location.path('cms/channel/' + id + '/');\n    };\n\n    $scope.setOrderAndUpdateList = function(newOrderValue) {\n      ListService.setOrder(newOrderValue);\n      updateList();\n    };\n\n    $scope.clearSearchAndUpdateList = function() {\n      ListService.clearSearch();\n      updateList();\n    };\n\n    $scope.pageChanged = function(newPageNumber) {\n      ListService.setPage(newPageNumber);\n      updateList();\n    };\n\n    $scope.setSearchAndUpdateList = function() {\n      ListService.setSearch($scope.params.q);\n      updateList();\n    };\n  });\n","'use strict';\n\nangular.module('videoHub')\n  .constant('SponsorDetailControllerConstants', {\n    SAVED_ALERT_MESSAGE: 'Saved',\n    SOMETHING_WENT_WRONG_ALERT_MESSAGE: 'Something went wrong with saving the Sponsor. Please call your friendly sysadmin.',\n    PLEASE_FILL_IN_ALL_REQUIRED_FIELDS_ALERT_MESSAGE: 'Please fill in all required fields.',\n    DELETE_SUCCESSFUL: 'Delete successful'\n  })\n  .controller('SponsorDetailController', function($scope, $routeParams, SponsorService, $location, AlertService, SponsorDetailControllerConstants) {\n    $scope.sponsor = {};\n\n    $scope.getSponsor = function() {\n      return SponsorService.one($routeParams.sponsorId).get().then(\n        function(data) {\n          $scope.sponsor = data;\n        },\n        function(data) {\n          console.log(data);\n        }\n      );\n    };\n\n    $scope.save = function() {\n      if ($scope.sponsorDetailForm.$valid) {\n        $scope.sponsor.save().then(displaySaveSuccessfulAlert, displaySomethingWentWrongAlert);\n      } else {\n        AlertService.error(SponsorDetailControllerConstants.PLEASE_FILL_IN_ALL_REQUIRED_FIELDS_ALERT_MESSAGE, true);\n      }\n    };\n\n\n    function displaySaveSuccessfulAlert() {\n      return AlertService.success(SponsorDetailControllerConstants.SAVED_ALERT_MESSAGE, true);\n    }\n\n    function displaySomethingWentWrongAlert() {\n      AlertService.error(SponsorDetailControllerConstants.SOMETHING_WENT_WRONG_ALERT_MESSAGE, true);\n    }\n\n    $scope.delete = function() {\n      AlertService.info('If you would like to delete a sponsor, please contact your friendly sysadmin.', true);\n    };\n    $scope.getSponsor();\n  });\n","'use strict';\nangular.module('videoHub')\n  .controller('SponsorListController', function($scope, $location, $routeParams, $rootScope, ListService) {\n    ListService.setService('SponsorService');\n\n    function updateList() {\n      ListService.updateList()\n        .then(function() {\n          $scope.list = ListService.data.list;\n          $scope.totalItems = ListService.data.totalItems;\n          $scope.params = ListService.getParams();\n        });\n    }\n    updateList();\n\n    $scope.setFilterAndUpdateList = function(newFilterValue) {\n      ListService.setFilter(newFilterValue);\n      updateList();\n      //Only used to determine active state\n    };\n\n    $scope.changeToEditPage = function(id) {\n      $location.path('cms/sponsor/' + id + '/');\n    };\n\n    $scope.setOrderAndUpdateList = function(newOrderValue) {\n      ListService.setOrder(newOrderValue);\n      updateList();\n    };\n\n    $scope.clearSearchAndUpdateList = function() {\n      ListService.clearSearch();\n      updateList();\n    };\n\n    $scope.pageChanged = function(newPageNumber) {\n      ListService.setPage(newPageNumber);\n      updateList();\n    };\n\n    $scope.setSearchAndUpdateList = function() {\n      ListService.setSearch($scope.params.q);\n      updateList();\n    };\n  });\n","'use strict';\nangular.module('videoHub')\n  .controller('SeriesListController', function($scope, $location, $routeParams, $rootScope, ListService) {\n    ListService.setService('SeriesService');\n\n    function updateList() {\n      ListService.updateList()\n        .then(function() {\n          $scope.list = ListService.data.list;\n          $scope.totalItems = ListService.data.totalItems;\n          $scope.params = ListService.getParams();\n        });\n    }\n    updateList();\n\n    $scope.setFilterAndUpdateList = function(newFilterValue) {\n      ListService.setFilter(newFilterValue);\n      updateList();\n    };\n\n    $scope.changeToEditPage = function(id) {\n      $location.path('cms/series/' + id + '/');\n    };\n\n    $scope.setOrderAndUpdateList = function(newOrderValue) {\n      ListService.setOrder(newOrderValue);\n      updateList();\n    };\n\n    $scope.clearSearchAndUpdateList = function() {\n      ListService.clearSearch();\n      updateList();\n    };\n\n    $scope.pageChanged = function(newPageNumber) {\n      ListService.setPage(newPageNumber);\n      updateList();\n    };\n\n    $scope.setSearchAndUpdateList = function() {\n      ListService.setSearch($scope.params.q);\n      updateList();\n    };\n  });\n","'use strict';\n\nangular.module('videoHub')\n  .constant('SeriesDetailControllerConstants', {\n    SAVED_ALERT_MESSAGE: 'Saved',\n    SOMETHING_WENT_WRONG_ALERT_MESSAGE: 'Something went wrong with saving the Series. Please call your friendly sysadmin.',\n    PLEASE_FILL_IN_ALL_REQUIRED_FIELDS_ALERT_MESSAGE: 'Please fill in all required fields.',\n    DELETE_SUCCESSFUL: 'Delete successful'\n  })\n  .controller('SeriesDetailController', function($scope, $routeParams, SeriesService, $location, AlertService, SeriesDetailControllerConstants) {\n    $scope.series = {};\n\n    $scope.getSeries = function() {\n      return SeriesService.one($routeParams.seriesId).get().then(\n        function(data) {\n          $scope.series = data;\n          $scope.dropdownFields.channel = data.channel;\n          $scope.dropdownFields.sponsor = data.sponsor;\n        },\n        function(data) {\n          console.log(data);\n        }\n      );\n    };\n\n    $scope.save = function() {\n      if ($scope.seriesDetailForm.$valid) {\n        if (_.has($scope.dropdownFields.channel, 'id')){\n          $scope.series.channel = $scope.dropdownFields.channel.id;\n        } else {\n          $scope.series.channel = null;\n        }\n\n        if (_.has($scope.dropdownFields.sponsor, 'id')){\n          $scope.series.sponsor = $scope.dropdownFields.sponsor.id;\n        } else {\n          $scope.series.sponsor = null;\n        }\n        $scope.series.save().then(displaySaveSuccessfulAlert, displaySomethingWentWrongAlert);\n      } else {\n        AlertService.error(SeriesDetailControllerConstants.PLEASE_FILL_IN_ALL_REQUIRED_FIELDS_ALERT_MESSAGE, true);\n      }\n    };\n\n    function displaySaveSuccessfulAlert() {\n      return AlertService.success(SeriesDetailControllerConstants.SAVED_ALERT_MESSAGE, true);\n    }\n\n    function displaySomethingWentWrongAlert() {\n      AlertService.error(SeriesDetailControllerConstants.SOMETHING_WENT_WRONG_ALERT_MESSAGE, true);\n    }\n\n    $scope.delete = function() {\n      AlertService.info('If you would like to delete a series, please contact your friendly sysadmin.', true);\n    };\n\n    $scope.dropdownFields = {};\n    $scope.getSeries();\n  });\n","'use strict';\nangular.module('videoHub')\n  .directive('alertbar', function() {\n    return {\n      templateUrl: 'shared/alert/alert-directive.html',\n      restrict: 'E',\n      controller: function($scope, AlertService) {\n        $scope.alertStatus = AlertService.alertStatus;\n      }\n    };\n  });\n","'use strict';\n\nangular.module('videoHub')\n  .constant('AlertServiceConstants', {\n    TIME_TO_WAIT_BEFORE_CLEARING: 2000\n  })\n  .service('AlertService', function($timeout, $q, AlertServiceConstants) {\n    this.alertStatus = {};\n    this.clear = function(clearAfterDisplayingMessageFlag) {\n      if (_.isUndefined(clearAfterDisplayingMessageFlag)){\n        this.setAlertStatusElementsToFalse();\n      }\n      var alertDeferred = $q.defer();\n      var alertService = this;\n      if (clearAfterDisplayingMessageFlag) {\n        $timeout(function() {\n          alertService.setAlertStatusElementsToFalse();\n          alertDeferred.resolve();\n        }, AlertServiceConstants.TIME_TO_WAIT_BEFORE_CLEARING);\n      } else {\n        alertDeferred.resolve();\n      }\n\n      return alertDeferred.promise;\n    };\n\n    this.setAlertStatusElementsToFalse = function(){\n      this.alertStatus.error = false;\n      this.alertStatus.info = false;\n      this.alertStatus.success = false;\n    };\n\n    this.success = function(message, clearAfterDisplayingMessageFlag) {\n      this.clear();\n      this.alertStatus.success = message;\n      return this.clear(clearAfterDisplayingMessageFlag);\n    };\n    this.error = function(message, clearAfterDisplayingMessageFlag) {\n      this.clear();\n      this.alertStatus.error = message;\n      return this.clear(clearAfterDisplayingMessageFlag);\n    };\n    this.info = function(message, clearAfterDisplayingMessageFlag) {\n      this.clear();\n      this.alertStatus.info = message;\n      return this.clear(clearAfterDisplayingMessageFlag);\n    };\n  });\n","'use strict';\n//Service to get / create / delete video ads.\nangular.module('videoHub')\n.factory('ChannelService',\nfunction(Restangular) {\n  return Restangular.service('channels');\n});\n","'use strict';\n//Service to get / create / delete video ads.\nangular.module('videoHub')\n.factory('SeriesService',\nfunction(Restangular) {\n  return Restangular.service('series');\n});\n","'use strict';\n//Service to get / create / delete video ads.\nangular.module('videoHub')\n.factory('SeasonService',\nfunction(Restangular) {\n  return Restangular.service('seasons');\n});\n","'use strict';\n//Service to get / create / delete video ads.\nangular.module('videoHub')\n.factory('VideoService',\nfunction(Restangular) {\n  return Restangular.service('videos');\n});\n","\n'use strict';\n//Service to get / create / delete video ads.\nangular.module('videoHub')\n.factory('SponsorService',\nfunction(Restangular) {\n  return Restangular.service('sponsors');\n});\n","'use strict';\n//Service to get / create / delete video ads.\nangular.module('videoHub')\n.factory('TagsService',\nfunction(Restangular) {\n  return Restangular.service('tags');\n});\n","'use strict';\nangular.module('videoHub')\n  .factory('authInterceptor', ['$rootScope', '$q', '$location', '$injector', 'httpRequestBuffer', 'localStorageService', function($rootScope, $q, $location, $injector, httpRequestBuffer, localStorageService) {\n    return {\n      'request': function(config) {\n        config.headers = config.headers || {};\n        var token = localStorageService.get('authToken');\n        if (token) {\n          if (!config.ignoreAuthorizationHeader) {\n            config.headers.Authorization = 'JWT ' + token;\n          }\n        }\n        return config;\n      },\n      'responseError': function(response) {\n        if (response.config) {\n          var ignoreAuthModule = response.config.ignoreAuthModule || response.config.headers.ignoreAuthModule;\n          if (!ignoreAuthModule) {\n            if (response.status === 403) {\n              var deferred = $q.defer();\n              httpRequestBuffer.append(response.config, deferred);\n              var authService = $injector.get('authService');\n              authService.refreshToken();\n            }\n          }\n        }\n        return $q.reject(response);\n      }\n    };\n  }])\n  .config(['$httpProvider', function($httpProvider) {\n    $httpProvider.interceptors.push('authInterceptor');\n  }])\n  .service('authService', ['$http', '$rootScope', '$location', 'httpRequestBuffer', 'localStorageService', 'AlertService', function($http, $rootScope, $location, httpRequestBuffer, localStorageService, AlertService) {\n    var _login = function(username, password) {\n      return $http.post('/api/token/auth', {\n          'username': username,\n          'password': password\n        })\n        .success(function(response) {\n          localStorageService.set('authToken', response.token);\n          $location.path('cms/');\n        })\n        .error(function() {\n          AlertService.error('Username or password provided is incorrect.', true);\n        });\n    };\n    var _refreshToken = function() {\n      //TODO: put into constant\n      var token = localStorageService.get('authToken');\n      return $http.post('/api/token/refresh', {\n          'token': token\n        }, {\n          'ignoreAuthModule': true\n        }).success(function(response) {\n          localStorageService.set('authToken', response.token);\n          httpRequestBuffer.retryAll();\n        })\n        .error(function() {\n          httpRequestBuffer.rejectAll();\n          AlertService.error('You failed to authenticate. Redirecting to login.', true);\n          //TODO: put into constant\n          $location.path('cms/login');\n        });\n    };\n\n    return {\n      login: _login,\n      refreshToken: _refreshToken\n    };\n  }])\n  // Thanks to witoldsz/angular-http-auth\n  .factory('httpRequestBuffer', ['$injector',\n    function($injector) {\n      var buffer = [];\n\n      var $http;\n\n      function _retryHttpRequest(config, deferred) {\n        function successCallback(response) {\n          deferred.resolve(response);\n        }\n\n        function errorCallback(response) {\n          deferred.reject(response);\n        }\n        $http = $http || $injector.get('$http');\n        config.headers.ignoreAuthModule = true;\n        $http(config).then(successCallback, errorCallback);\n      }\n\n      return {\n        append: function(config, deferred) {\n          buffer.push({\n            config: config,\n            deferred: deferred\n          });\n        },\n        rejectAll: function(reason) {\n          if (reason) {\n            _.each(buffer, function(request) {\n              request.deferred.reject(reason);\n            });\n          }\n          buffer = [];\n        },\n        retryAll: function() {\n          _.each(buffer, function(request) {\n            _retryHttpRequest(request.config, request.deferred);\n          });\n          buffer = [];\n        }\n      };\n    }\n  ]);\n","/**\n * dirPagination - AngularJS module for paginating (almost) anything.\n *\n *\n * Credits\n * =======\n *\n * Daniel Tabuenca: https://groups.google.com/d/msg/angular/an9QpzqIYiM/r8v-3W1X5vcJ\n * for the idea on how to dynamically invoke the ng-repeat directive.\n *\n * I borrowed a couple of lines and a few attribute names from the AngularUI Bootstrap project:\n * https://github.com/angular-ui/bootstrap/blob/master/src/pagination/pagination.js\n *\n * Copyright 2014 Michael Bromley <michael@michaelbromley.co.uk>\n */\n\n(function() {\n\n    /**\n     * Config\n     */\n    var moduleName = 'videoHub';\n    var DEFAULT_ID = '__default';\n\n    /**\n     * Module\n     */\n    var module;\n    try {\n        module = angular.module(moduleName);\n    } catch(err) {\n        // named module does not exist, so create one\n        module = angular.module(moduleName, []);\n    }\n\n    module.directive('dirPaginate', ['$compile', '$parse', '$timeout', 'paginationService', function($compile, $parse, $timeout, paginationService) {\n\n        return  {\n            terminal: true,\n            multiElement: true,\n            priority: 5000, // This setting is used in conjunction with the later call to $compile() to prevent infinite recursion of compilation\n            compile: function dirPaginationCompileFn(tElement, tAttrs){\n\n                var expression = tAttrs.dirPaginate;\n                // regex taken directly from https://github.com/angular/angular.js/blob/master/src/ng/directive/ngRepeat.js#L211\n                var match = expression.match(/^\\s*([\\s\\S]+?)\\s+in\\s+([\\s\\S]+?)(?:\\s+track\\s+by\\s+([\\s\\S]+?))?\\s*$/);\n\n                var filterPattern = /\\|\\s*itemsPerPage\\s*:[^|]*/;\n                if (match[2].match(filterPattern) === null) {\n                    throw 'pagination directive: the \\'itemsPerPage\\' filter must be set.';\n                }\n                var itemsPerPageFilterRemoved = match[2].replace(filterPattern, '');\n                var collectionGetter = $parse(itemsPerPageFilterRemoved);\n\n                // If any value is specified for paginationId, we register the un-evaluated expression at this stage for the benefit of any\n                // dir-pagination-controls directives that may be looking for this ID.\n                var rawId = tAttrs.paginationId || DEFAULT_ID;\n                paginationService.registerInstance(rawId);\n\n                return function dirPaginationLinkFn(scope, element, attrs){\n\n                    // Now that we have access to the `scope` we can interpolate any expression given in the paginationId attribute and\n                    // potentially register a new ID if it evaluates to a different value than the rawId.\n                    var paginationId = $parse(attrs.paginationId)(scope) || attrs.paginationId || DEFAULT_ID;\n                    paginationService.registerInstance(paginationId);\n\n                    var repeatExpression;\n                    var idDefinedInFilter = !!expression.match(/(\\|\\s*itemsPerPage\\s*:[^|]*:[^|]*)/);\n                    if (paginationId !== DEFAULT_ID && !idDefinedInFilter) {\n                        repeatExpression = expression.replace(/(\\|\\s*itemsPerPage\\s*:[^|]*)/, \"$1 : '\" + paginationId + \"'\");\n                    } else {\n                        repeatExpression = expression;\n                    }\n\n                    // Add ng-repeat to the dom element\n                    if (element[0].hasAttribute('dir-paginate-start') || element[0].hasAttribute('data-dir-paginate-start')) {\n                        // using multiElement mode (dir-paginate-start, dir-paginate-end)\n                        attrs.$set('ngRepeatStart', repeatExpression);\n                        element.eq(element.length - 1).attr('ng-repeat-end', true);\n                    } else {\n                        attrs.$set('ngRepeat', repeatExpression);\n                    }\n\n                    var compiled =  $compile(element, false, 5000); // we manually compile the element again, as we have now added ng-repeat. Priority less than 5000 prevents infinite recursion of compiling dirPaginate\n\n                    var currentPageGetter;\n                    if (attrs.currentPage) {\n                        currentPageGetter = $parse(attrs.currentPage);\n                    } else {\n                        // if the current-page attribute was not set, we'll make our own\n                        var defaultCurrentPage = paginationId + '__currentPage';\n                        scope[defaultCurrentPage] = 1;\n                        currentPageGetter = $parse(defaultCurrentPage);\n                    }\n                    paginationService.setCurrentPageParser(paginationId, currentPageGetter, scope);\n\n                    if (typeof attrs.totalItems !== 'undefined') {\n                        paginationService.setAsyncModeTrue(paginationId);\n                        scope.$watch(function() {\n                            return $parse(attrs.totalItems)(scope);\n                        }, function (result) {\n                            if (0 <= result) {\n                                paginationService.setCollectionLength(paginationId, result);\n                            }\n                        });\n                    } else {\n                        scope.$watchCollection(function() {\n                            return collectionGetter(scope);\n                        }, function(collection) {\n                            if (collection) {\n                                paginationService.setCollectionLength(paginationId, collection.length);\n                            }\n                        });\n                    }\n\n                    // Delegate to the link function returned by the new compilation of the ng-repeat\n                    compiled(scope);\n                };\n            }\n        };\n    }]);\n\n    module.directive('dirPaginationControls', ['paginationService', 'paginationTemplate', function(paginationService, paginationTemplate) {\n\n        var numberRegex = /^\\d+$/;\n\n        /**\n         * Generate an array of page numbers (or the '...' string) which is used in an ng-repeat to generate the\n         * links used in pagination\n         *\n         * @param currentPage\n         * @param rowsPerPage\n         * @param paginationRange\n         * @param collectionLength\n         * @returns {Array}\n         */\n        function generatePagesArray(currentPage, collectionLength, rowsPerPage, paginationRange) {\n            var pages = [];\n            var totalPages = Math.ceil(collectionLength / rowsPerPage);\n            var halfWay = Math.ceil(paginationRange / 2);\n            var position;\n\n            if (currentPage <= halfWay) {\n                position = 'start';\n            } else if (totalPages - halfWay < currentPage) {\n                position = 'end';\n            } else {\n                position = 'middle';\n            }\n\n            var ellipsesNeeded = paginationRange < totalPages;\n            var i = 1;\n            while (i <= totalPages && i <= paginationRange) {\n                var pageNumber = calculatePageNumber(i, currentPage, paginationRange, totalPages);\n\n                var openingEllipsesNeeded = (i === 2 && (position === 'middle' || position === 'end'));\n                var closingEllipsesNeeded = (i === paginationRange - 1 && (position === 'middle' || position === 'start'));\n                if (ellipsesNeeded && (openingEllipsesNeeded || closingEllipsesNeeded)) {\n                    pages.push('...');\n                } else {\n                    pages.push(pageNumber);\n                }\n                i ++;\n            }\n            return pages;\n        }\n\n        /**\n         * Given the position in the sequence of pagination links [i], figure out what page number corresponds to that position.\n         *\n         * @param i\n         * @param currentPage\n         * @param paginationRange\n         * @param totalPages\n         * @returns {*}\n         */\n        function calculatePageNumber(i, currentPage, paginationRange, totalPages) {\n            var halfWay = Math.ceil(paginationRange/2);\n            if (i === paginationRange) {\n                return totalPages;\n            } else if (i === 1) {\n                return i;\n            } else if (paginationRange < totalPages) {\n                if (totalPages - halfWay < currentPage) {\n                    return totalPages - paginationRange + i;\n                } else if (halfWay < currentPage) {\n                    return currentPage - halfWay + i;\n                } else {\n                    return i;\n                }\n            } else {\n                return i;\n            }\n        }\n\n        return {\n            restrict: 'AE',\n            templateUrl: function(elem, attrs) {\n                return attrs.templateUrl || paginationTemplate.getPath();\n            },\n            scope: {\n                maxSize: '=?',\n                onPageChange: '&?',\n                paginationId: '=?'\n            },\n            link: function dirPaginationControlsLinkFn(scope, element, attrs) {\n\n                // rawId is the un-interpolated value of the pagination-id attribute. This is only important when the corresponding dir-paginate directive has\n                // not yet been linked (e.g. if it is inside an ng-if block), and in that case it prevents this controls directive from assuming that there is\n                // no corresponding dir-paginate directive and wrongly throwing an exception.\n                var rawId = attrs.paginationId ||  DEFAULT_ID;\n                var paginationId = scope.paginationId || attrs.paginationId ||  DEFAULT_ID;\n\n                if (!paginationService.isRegistered(paginationId) && !paginationService.isRegistered(rawId)) {\n                    var idMessage = (paginationId !== DEFAULT_ID) ? ' (id: ' + paginationId + ') ' : ' ';\n                    throw 'pagination directive: the pagination controls' + idMessage + 'cannot be used without the corresponding pagination directive.';\n                }\n\n                if (!scope.maxSize) { scope.maxSize = 9; }\n                scope.directionLinks = angular.isDefined(attrs.directionLinks) ? scope.$parent.$eval(attrs.directionLinks) : true;\n                scope.boundaryLinks = angular.isDefined(attrs.boundaryLinks) ? scope.$parent.$eval(attrs.boundaryLinks) : false;\n\n                var paginationRange = Math.max(scope.maxSize, 5);\n                scope.pages = [];\n                scope.pagination = {\n                    last: 1,\n                    current: 1\n                };\n                scope.range = {\n                    lower: 1,\n                    upper: 1,\n                    total: 1\n                };\n\n                scope.$watch(function() {\n                    return (paginationService.getCollectionLength(paginationId) + 1) * paginationService.getItemsPerPage(paginationId);\n                }, function(length) {\n                    if (0 < length) {\n                        generatePagination();\n                    }\n                });\n\n                scope.$watch(function() {\n                    return (paginationService.getItemsPerPage(paginationId));\n                }, function(current, previous) {\n                    if (current != previous) {\n                        goToPage(scope.pagination.current);\n                    }\n                });\n\n                scope.$watch(function() {\n                    return paginationService.getCurrentPage(paginationId);\n                }, function(currentPage, previousPage) {\n                    if (currentPage != previousPage) {\n                        goToPage(currentPage);\n                    }\n                });\n\n                scope.setCurrent = function(num) {\n                    if (isValidPageNumber(num)) {\n                        paginationService.setCurrentPage(paginationId, num);\n                    }\n                };\n\n                function goToPage(num) {\n                    if (isValidPageNumber(num)) {\n                        scope.pages = generatePagesArray(num, paginationService.getCollectionLength(paginationId), paginationService.getItemsPerPage(paginationId), paginationRange);\n                        scope.pagination.current = num;\n                        updateRangeValues();\n\n                        // if a callback has been set, then call it with the page number as an argument\n                        if (scope.onPageChange) {\n                            scope.onPageChange({ newPageNumber : num });\n                        }\n                    }\n                }\n\n                function generatePagination() {\n                    var page = parseInt(paginationService.getCurrentPage(paginationId)) || 1;\n\n                    scope.pages = generatePagesArray(page, paginationService.getCollectionLength(paginationId), paginationService.getItemsPerPage(paginationId), paginationRange);\n                    scope.pagination.current = page;\n                    scope.pagination.last = scope.pages[scope.pages.length - 1];\n                    if (scope.pagination.last < scope.pagination.current) {\n                        scope.setCurrent(scope.pagination.last);\n                    } else {\n                        updateRangeValues();\n                    }\n                }\n\n                /**\n                 * This function updates the values (lower, upper, total) of the `scope.range` object, which can be used in the pagination\n                 * template to display the current page range, e.g. \"showing 21 - 40 of 144 results\";\n                 */\n                function updateRangeValues() {\n                    var currentPage = paginationService.getCurrentPage(paginationId),\n                        itemsPerPage = paginationService.getItemsPerPage(paginationId),\n                        totalItems = paginationService.getCollectionLength(paginationId);\n\n                    scope.range.lower = (currentPage - 1) * itemsPerPage + 1;\n                    scope.range.upper = Math.min(currentPage * itemsPerPage, totalItems);\n                    scope.range.total = totalItems;\n                }\n\n                function isValidPageNumber(num) {\n                    return (numberRegex.test(num) && (0 < num && num <= scope.pagination.last));\n                }\n            }\n        };\n    }]);\n\n    module.filter('itemsPerPage', ['paginationService', function(paginationService) {\n\n        return function(collection, itemsPerPage, paginationId) {\n            if (typeof (paginationId) === 'undefined') {\n                paginationId = DEFAULT_ID;\n            }\n            if (!paginationService.isRegistered(paginationId)) {\n                throw 'pagination directive: the itemsPerPage id argument (id: ' + paginationId + ') does not match a registered pagination-id.';\n            }\n            var end;\n            var start;\n            if (collection instanceof Array) {\n                itemsPerPage = parseInt(itemsPerPage) || 9999999999;\n                if (paginationService.isAsyncMode(paginationId)) {\n                    start = 0;\n                } else {\n                    start = (paginationService.getCurrentPage(paginationId) - 1) * itemsPerPage;\n                }\n                end = start + itemsPerPage;\n                paginationService.setItemsPerPage(paginationId, itemsPerPage);\n\n                return collection.slice(start, end);\n            } else {\n                return collection;\n            }\n        };\n    }]);\n\n    module.service('paginationService', function() {\n\n        var instances = {};\n        var lastRegisteredInstance;\n\n        this.registerInstance = function(instanceId) {\n            if (typeof instances[instanceId] === 'undefined') {\n                instances[instanceId] = {\n                    asyncMode: false\n                };\n                lastRegisteredInstance = instanceId;\n            }\n        };\n\n        this.isRegistered = function(instanceId) {\n            return (typeof instances[instanceId] !== 'undefined');\n        };\n\n        this.getLastInstanceId = function() {\n            return lastRegisteredInstance;\n        };\n\n        this.setCurrentPageParser = function(instanceId, val, scope) {\n            instances[instanceId].currentPageParser = val;\n            instances[instanceId].context = scope;\n        };\n        this.setCurrentPage = function(instanceId, val) {\n            instances[instanceId].currentPageParser.assign(instances[instanceId].context, val);\n        };\n        this.getCurrentPage = function(instanceId) {\n            var parser = instances[instanceId].currentPageParser;\n            return parser ? parser(instances[instanceId].context) : 1;\n        };\n\n        this.setItemsPerPage = function(instanceId, val) {\n            instances[instanceId].itemsPerPage = val;\n        };\n        this.getItemsPerPage = function(instanceId) {\n            return instances[instanceId].itemsPerPage;\n        };\n\n        this.setCollectionLength = function(instanceId, val) {\n            instances[instanceId].collectionLength = val;\n        };\n        this.getCollectionLength = function(instanceId) {\n            return instances[instanceId].collectionLength;\n        };\n\n        this.setAsyncModeTrue = function(instanceId) {\n            instances[instanceId].asyncMode = true;\n        };\n\n        this.isAsyncMode = function(instanceId) {\n            return instances[instanceId].asyncMode;\n        };\n    });\n\n    module.provider('paginationTemplate', function() {\n\n        var templatePath = 'shared/pagination/dirPagination.tpl.html';\n\n        this.setPath = function(path) {\n            templatePath = path;\n        };\n\n        this.$get = function() {\n            return {\n                getPath: function() {\n                    return templatePath;\n                }\n            };\n        };\n    });\n})();\n","'use strict';\n\nangular.module('videoHub')\n  .directive('createContent', function () {\n    return {\n      restrict: 'E',\n      templateUrl:  'shared/create-content/create-content.html',\n      controller: function($scope, $location){\n        $scope.setContentType = function(contentType){\n          $scope.contentType = contentType;\n        };\n\n        $scope.goToContentTypesCreationPage = function(){\n          $location.path('cms/new' + $scope.contentType + '/');\n        };\n      }\n    };\n  });\n","'use strict';\nangular.module('videoHub')\n  .constant('DatetimePickerConstants', {\n    'DATETIME_PICKER_FORMAT': 'Y-m-d h:i A',\n    'MOMENTJS_FORMAT': 'YYYY-MM-DDTHH:mm:DDZZ'\n  })\n  .directive('datetimepicker', ['$filter', 'DatetimePickerConstants', function($filter, DatetimePickerConstants) {\n    return {\n      scope: {\n        'date': '='\n      },\n      replace: true,\n      require:'ngModel',\n      template: '<input name=\"datepicker\" class=\"form-control\" ng-model=\"date\" type=\"text\"/>',\n      link: function(scope, element, attrs, ngModel){\n        scope.required = attrs.required || false;\n        element.datetimepicker({\n          format: DatetimePickerConstants.DATETIME_PICKER_FORMAT,\n          startDate: new Date(),\n          step: 15\n          });\n\n        function convertToLocal(value){\n          return $filter('convertToLocal')(value);\n        }\n\n        ngModel.$formatters.unshift(convertToLocal);\n\n        scope.formatDateForBackend = function(value){\n          if (value){\n            return moment(value, DatetimePickerConstants.DATETIME_PICKER_FORMAT).format(DatetimePickerConstants.MOMENTJS_FORMAT);\n          } else {\n            return '';\n          }\n        };\n\n        ngModel.$parsers.unshift(scope.formatDateForBackend);\n      }\n    };\n  }]);\n","'use strict';\n\nangular.module('videoHub')\n\t.filter('convertToLocal', function() {\n    return function (input) {\n      if (input) {\n        return moment.utc(input).local().format('YYYY-MM-DD hh:mm A');\n      }\n      return input;\n    };\n  });\n","'use strict';\nangular.module('videoHub')\n  .service('ListService', function($rootScope, $location, $injector, ValidQueryParamsForListPage) {\n\n    this.data = {};\n    var ListService = this;\n    this.service = null;\n    var currentService = null;\n\n    this.getParams = function() {\n      return this.data.params;\n    };\n\n    this.setService = function(serviceName) {\n      this.service = $injector.get(serviceName);\n      currentService = this.service;\n      this.data.params = $location.search();\n      this.data.list = [];\n      this.data.totalItems = 0;\n    };\n\n    this.clearSearch = function() {\n      this.data.params.q = '';\n    };\n\n    this.setFilter = function(newFilterValue) {\n      this.data.params.f = newFilterValue;\n    };\n\n    this.setList = function(list) {\n      ListService.data.list = list;\n      if (list.meta) {\n        ListService.data.totalItems = list.meta.count;\n      } else {\n        list.meta = {};\n        list.meta.count = 0;\n      }\n    };\n\n    this.setSearch = function(searchQuery) {\n      this.data.params.q = searchQuery;\n    };\n\n    this.setOrder = function(newOrderValue) {\n      var orderBy = this.data.params.order_by;\n      if (orderBy) {\n        //If the existing orderBy value matches the new one, invert it.\n        if (orderBy.indexOf(newOrderValue) > -1 && orderBy.indexOf('-') === -1) {\n          orderBy = '-' + newOrderValue;\n        } else {\n          //If the existing orderBy value is already inverted, remove it.\n          if (orderBy.indexOf(newOrderValue) > -1) {\n            orderBy = null;\n          }\n        }\n      } else {\n        orderBy = newOrderValue;\n      }\n\n      this.data.params.order_by = orderBy;\n    };\n\n    this.setPage = function(pageNumber) {\n      this.data.params.page = pageNumber;\n    };\n\n    this.updateList = function() {\n      this.data.params = _.pick(this.data.params, ValidQueryParamsForListPage);\n      this.data.params = _.omit(this.data.params, function(value) {\n        return _.isEmpty(value) && !_.isNumber(value);\n      });\n      $location.search(this.data.params);\n      return currentService.getList(this.data.params).then(ListService.setList);\n    };\n  });\n","'use strict';\n\nangular.module('videoHub')\n  .directive('dropdownSelector', ['$injector', function($injector) {\n    return {\n      templateUrl: 'shared/dropdownselector/dropdownselector.html',\n      replace: true,\n      scope: {\n        'ngModel': '=',\n        'ngRequired': '@',\n        'service': '@service',\n        'placeholderText': '@',\n      },\n      controller: function($scope) {\n        var service = $injector.get($scope.service);\n        $scope.populateCurrentItemsList = function() {\n          service.getList({\n            'page_size': 100\n          }).then(function(results) {\n            $scope.currentItems = results;\n          });\n        };\n\n        $scope.populateCurrentItemsList();\n      }\n    };\n  }]);\n","'use strict';\n(function () {\n  angular.module('BettyCropper', ['restangular'])\n    .value('DEFAULT_IMAGE_WIDTH', 1200)\n    .factory('Selection', SelectionFactory)\n    .factory('BettyImage', BettyImageFactory)\n    .service('BettyCropper', BettyCropperService);\n\n  function BettyCropperService($http, $interpolate, $q, IMAGE_SERVER_URL, BC_API_KEY, BettyImage) {\n      var fileInputId = '#bulbs-cms-hidden-image-file-input';\n      var inputTemplate = '<input id=\"bulbs-cms-hidden-image-file-input\" type=\"file\" accept=\"image/*\" style=\"position: absolute; left:-99999px;\" name=\"image\" />';\n\n      this.upload = upload;\n      this.get = get;\n      this.detail = get;\n      this.detailPatch = detailPatch;\n      this.updateSelection = updateSelection;\n\n      function upload() {\n        var uploadImageDeferred = $q.defer();\n\n        angular.element(fileInputId).remove();\n        var fileInput = angular.element(inputTemplate);\n        angular.element('body').append(fileInput);\n\n        fileInput.click();\n\n        fileInput.unbind('change');\n        fileInput.bind('change', function (e) {\n          if (e.target.files.length !== 1) {\n            uploadImageDeferred.reject('We need exactly one image!');\n          }\n          var file = e.target.files[0];\n          if (file.type.indexOf('image/') !== 0) {\n            uploadImageDeferred.reject('Not an image!');\n          }\n\n          if (file.size > 10 * 1024 * 1024) { // MAGIC!\n            uploadImageDeferred.reject('The file is too large!');\n          }\n\n          var imageData = new FormData();\n          imageData.append('image', file);\n\n          $http({\n            method: 'POST',\n            url: IMAGE_SERVER_URL + '/api/new',\n            headers: {\n              'X-Betty-Api-Key': BC_API_KEY,\n              'Content-Type': undefined,\n              'X-CSRFToken': undefined\n            },\n            data: imageData,\n            transformRequest: angular.identity,\n            transformResponse: function (data, headersGetter) {\n              // So, sometimes the browser doesn't think that JSON data is JSON.\n              if (typeof data === 'string') {\n                data = $.parseJSON(data);\n              }\n              var image = new BettyImage(data);\n              return image;\n            }\n          }).success(function (success) {\n            uploadImageDeferred.resolve(success);\n          }).error(function (error) {\n            uploadImageDeferred.reject(error);\n          });\n\n        });\n\n        return uploadImageDeferred.promise;\n      }\n\n      function get(id) {\n        return $http({\n          method: 'GET',\n          url: IMAGE_SERVER_URL + '/api/' + id,\n          headers: {\n            'X-Betty-Api-Key': BC_API_KEY,\n            'Content-Type': undefined,\n            'X-CSRFToken': undefined\n          },\n          transformRequest: angular.identity,\n          transformResponse: function (data, headersGetter) {\n            if (typeof data === 'string') {\n              data = $.parseJSON(data);\n            }\n            return new BettyImage(data);\n          }\n        });\n      }\n\n      function detailPatch(id, name, credit, selections) {\n        return $http({\n          method: 'PATCH',\n          url: IMAGE_SERVER_URL + '/api/' + id,\n          headers: {\n            'X-Betty-Api-Key': BC_API_KEY,\n            'Content-Type': undefined,\n            'X-CSRFToken': undefined\n          },\n          data: {\n            name: name,\n            credit: credit,\n            selections: selections\n          },\n          transformRequest: angular.identity,\n          transformResponse: function (data, headersGetter) {\n            if (typeof data === 'string') {\n              data = $.parseJSON(data);\n            }\n            return new BettyImage(data);\n          }\n        });\n      }\n\n      function updateSelection(id, ratio, selections) {\n        return $http({\n          method: 'POST',\n          url: IMAGE_SERVER_URL + '/api/' + id + '/' + ratio,\n          headers: {\n            'X-Betty-Api-Key': BC_API_KEY,\n            'Content-Type': undefined,\n            'X-CSRFToken': undefined\n          },\n          data: selections\n        });\n      }\n  }\n\n  function BettyImageFactory($interpolate, $http, IMAGE_SERVER_URL, BC_API_KEY, DEFAULT_IMAGE_WIDTH, Selection) {\n    function BettyImage(data) {\n      this.id = data.id;\n      this.name = data.name;\n      this.width = data.width;\n      this.height = data.height;\n      this.selections = {};\n      for (var ratio in data.selections) {\n        this.selections[ratio] = new Selection(data.selections[ratio]);\n      }\n    }\n\n    BettyImage.prototype.scaleToFit = function(width, height) {\n      var scale;\n      if (width && height) {\n        var fitRatio = width / height;\n        var thisRatio = this.width / this.height;\n        if (fitRatio > thisRatio) {\n          scale = height/ this.height;\n        } else {\n          scale = width / this.width;\n        }\n      } else {\n        if (width) {\n          scale = width / this.width;\n        }\n        if (height) {\n          scale = height/ this.height;\n        }\n      }\n      var scaled = {\n        width: Math.round(this.width * scale),\n        height: Math.round(this.height * scale),\n        scale: scale\n      };\n      return scaled;\n    };\n\n    BettyImage.prototype.getStyles = function(width, height, ratio) {\n      if (height === 0) {\n        height = null;\n      }\n\n      var selection = this.selections[ratio];\n      var scaledSelection = selection.scaleToFit(width, height);\n\n      return {\n        'background-image': 'url(' + this.url('original', DEFAULT_IMAGE_WIDTH, 'jpg') + ')',\n        'background-size': Math.floor(scaledSelection.width() / selection.width()  * this.width) + 'px',\n        'background-position': '-' + scaledSelection.x0 + 'px -' + scaledSelection.y0 + 'px',\n        'height': scaledSelection.height() + 'px',\n        'width': scaledSelection.width() + 'px',\n        'background-repeat': 'no-repeat',\n        'position': 'relative'\n      };\n    };\n\n    BettyImage.prototype.url = function (ratio, width, format) {\n      var exp = $interpolate(\n        '{{ base_url }}/{{ id }}/{{ ratio }}/{{ width }}.{{ format }}'\n      );\n      var idStr = this.id.toString();\n      var segmentedId = '';\n      for (var i=0; i < idStr.length; i++) {\n        if (i % 4 === 0 && i !== 0) {\n          segmentedId += '/';\n        }\n        segmentedId += idStr.substr(i, 1);\n      }\n      return exp({\n        base_url: IMAGE_SERVER_URL,\n        id: segmentedId,\n        ratio: ratio,\n        width: width,\n        format: format\n      });\n    };\n\n    BettyImage.prototype.updateSelection = function (ratio, selection) {\n      var data = {\n        x0: selection.x0,\n        x1: selection.x1,\n        y0: selection.y0,\n        y1: selection.y1\n      };\n      if (selection.source) {\n        data.source = selection.source;\n      }\n      return $http({\n        method: 'POST',\n        url: IMAGE_SERVER_URL + '/api/' + this.id + '/' + ratio,\n        headers: {\n          'X-Betty-Api-Key': BC_API_KEY,\n          'Content-Type': undefined,\n          'X-CSRFToken': undefined\n        },\n        data: data,\n        transformResponse: function (data, headersGetter) {\n          if (typeof data === 'string') {\n            data = $.parseJSON(data);\n          }\n          return [ratio, new Selection(data.selections[ratio])];\n        }\n      });\n    };\n\n    return BettyImage;\n  }\n\n  function SelectionFactory() {\n    function Selection(data) {\n        this.x0 = data.x0;\n        this.x1 = data.x1;\n        this.y0 = data.y0;\n        this.y1 = data.y1;\n        this.source = data.source;\n    }\n\n    Selection.prototype.width = function () {\n      return this.x1 - this.x0;\n    };\n\n    Selection.prototype.height = function () {\n      return this.y1 - this.y0;\n    };\n\n    Selection.prototype.scaleBy = function(scale) {\n      var scaledToFit = new Selection({\n        x0: Math.round(this.x0 * scale),\n        x1: Math.round(this.x1 * scale),\n        y0: Math.round(this.y0 * scale),\n        y1: Math.round(this.y1 * scale)\n      });\n      return scaledToFit;\n    };\n\n    Selection.prototype.scaleToFit = function (width, height) {\n\n      var scale;\n      if (width && height) {\n        var fitRatio = width / height;\n        var thisRatio = this.width() / this.height();\n        if (fitRatio > thisRatio) {\n          scale = height/ this.height();\n        } else {\n          scale = width / this.width();\n        }\n      } else {\n        if (width) {\n          scale = width / this.width();\n        }\n        if (height) {\n          scale = height/ this.height();\n        }\n      }\n      return this.scaleBy(scale);\n    };\n\n    return Selection;\n  }\n})();\n","'use strict';\n\nangular.module('videoHub')\n  .directive('bettyeditable', function($http, BettyCropper, openImageCropModal) {\n    return {\n      restrict: 'E',\n      templateUrl: 'shared/bettycropper/bettyeditable.html',\n      scope: {\n        'image': '=',\n        'addStyles': '@',\n        'placeholderText': '@',\n        'hideMetas': '=',\n        'ratio': '@',\n        'editable': '=?'\n      },\n      controller: function($scope, $element) {\n        $scope.editable = angular.isDefined($scope.editable) ? $scope.editable : true;\n        $scope.upload = function(e) {\n          BettyCropper.upload().then(\n            function(success) {\n              $scope.image = {\n                id: success.id,\n                caption: null,\n                alt: null\n              };\n              $scope.bettyImage = success;\n            },\n            function(error) {\n              console.log(error);\n            },\n            function(progress) {\n              console.log(progress);\n            }\n          );\n        };\n\n        $scope.edit = function(e) {\n          openImageCropModal($scope.image).then(function(image) {\n            if (image.id === null) {\n              $scope.image = null;\n            } else {\n              $scope.image = image;\n              BettyCropper.get($scope.image.id).then(function(response) {\n                $scope.bettyImage = response.data;\n                $scope.setStyles();\n              });\n            }\n          });\n        };\n      },\n\n      link: function(scope, element, attrs) {\n\n        if (scope.bettyImage === undefined) {\n          scope.bettyImage = null;\n        }\n\n        scope.setStyles = function() {\n          if (scope.bettyImage) {\n            scope.imageStyling = scope.bettyImage.getStyles(element.parent().width(), element.parent().height(), scope.ratio);\n          } else {\n            var ratioWidth = parseInt(scope.ratio.split('x')[0], 10);\n            var ratioHeight = parseInt(scope.ratio.split('x')[1], 10);\n            scope.imageStyling = {\n              'background-color': '#333',\n              'position': 'relative',\n              'width': element.parent().width(),\n              'height': Math.floor(element.parent().width() * ratioHeight / ratioWidth) + 'px',\n            };\n          }\n        };\n\n        scope.$watch('image', function(newImage, oldImage) {\n          if (newImage && newImage.id) {\n            BettyCropper.get(newImage.id).then(function(response) {\n              scope.bettyImage = response.data;\n            });\n          }\n        });\n\n        scope.$watch('bettyImage', function(newImage, oldImage) {\n          scope.setStyles();\n        }, true);\n\n        element.resize(scope.setStyles);\n\n        scope.removeImage = function() {\n          scope.image.id = null;\n        };\n\n        scope.editImage = function() {\n          openImageCropModal(scope.image)\n            .then(function(success) {\n              console.log(success);\n            });\n        };\n\n      }\n    };\n  });\n","'use strict';\n\nangular.module('BettyCropper')\n  .controller('ImageCropModalCtrl', function ($scope, $timeout, $modalInstance, BettyCropper, Selection, DEFAULT_IMAGE_WIDTH, imageData, ratios) {\n    $scope.selectedCrop = null;\n    $scope.cropMode = false;\n    $scope.ratios = ratios;\n    $scope.finished = false;\n    $scope.thumb_container_styles = {};\n    $scope.imageData = imageData;\n\n    if (!$scope.image) {\n      $scope.image = null;\n      BettyCropper.get(imageData.id).then(function(success){\n        $scope.image = success.data;\n      });\n    }\n\n    $scope.$watch('image', function (image) {\n      if (!image) {\n        return;\n      }\n\n      var finished = true;\n      for (var ratio in image.selections) {\n        if (image.selections[ratio].source === 'auto') {\n          finished = false;\n          break;\n        }\n      }\n      $scope.finished = finished;\n\n      $scope.scaleData = image.scaleToFit(550, 400);\n\n      $('.crop-image-container img').one('load', function () {\n        $(this).Jcrop({\n          allowSelect: false,\n          allowMove: true,\n          allowResize: true,\n          keySupport: false\n        }, function () {\n          $scope.jcrop_api = this;\n        });\n      });\n\n      $scope.image_url = image.url('original', DEFAULT_IMAGE_WIDTH, 'jpg');\n      if (!$scope.ratios) {\n        $scope.ratios = Object.keys(image.selections);\n      }\n\n      $scope.setThumbStyles();\n    });\n\n    $scope.$watch('selectedCrop', function(crop) {\n      if (!$scope.image) {\n        return;\n      }\n      var finished = true;\n      for (var ratio in $scope.image.selections) {\n        if ($scope.image.selections[ratio].source === 'auto' && ratio !== crop) {\n          finished = false;\n          break;\n        }\n      }\n      $scope.finished = finished;\n    });\n\n    $scope.selectCrop = function (ratio) {\n      if (!ratio) {\n        ratio = Object.keys($scope.image.selections)[0];\n        for (var key in $scope.image.selections) {\n          if ($scope.image.selections[key].source === 'auto') {\n            ratio = key;\n            break;\n          }\n        }\n      }\n      var selection = $scope.image.selections[ratio].scaleBy($scope.scaleData.scale);\n\n      $scope.jcrop_api.setOptions({\n        aspectRatio: selection.width() / selection.height()\n      });\n\n      $scope.jcrop_api.setSelect([\n        selection.x0,\n        selection.y0,\n        selection.x1,\n        selection.y1\n      ]);\n\n      $scope.cropMode = true;\n      $scope.selectedCrop = ratio;\n    };\n\n    $scope.setThumbStyles = function () {\n      $scope.thumb_styles = $scope.thumb_styles || {};\n\n      for (var ratio in $scope.image.selections) {\n        var scaledSelection = $scope.image.selections[ratio].scaleToFit(170, 170);\n        $scope.thumb_container_styles[ratio] = {\n          'padding-top': Math.round((180 - scaledSelection.height()) / 2) + 'px',\n          'padding-bottom': '5px',\n          'padding-left':  Math.round((180 - scaledSelection.width()) / 2) + 'px',\n          'padding-right': '5px'\n        };\n\n        $scope.thumb_styles[ratio] = $scope.image.getStyles(170, 170, ratio);\n      }\n    };\n\n    $scope.save = function (ratio) {\n\n      var jcrop_selection = $scope.jcrop_api.tellSelect();\n\n      var newSelection = new Selection({\n        x0: jcrop_selection.x,\n        x1: jcrop_selection.x2,\n        y0: jcrop_selection.y,\n        y1: jcrop_selection.y2,\n        source: 'user'\n      });\n      newSelection = newSelection.scaleBy(1 / $scope.scaleData.scale);\n      if (newSelection.x1 > $scope.image.width) {\n        newSelection.x1 = $scope.image.width;\n      }\n      if (newSelection.y1 > $scope.image.height) {\n        newSelection.y1 = $scope.image.height;\n      }\n\n      return this.image.updateSelection(ratio, newSelection);\n    };\n\n    $scope.saveAndQuit = function () {\n      var ratio = $scope.selectedCrop;\n      this.save(ratio).then(function (success) {\n        var ratio = success.data[0];\n        var selection = success.data[1];\n        $scope.image.selections[ratio] = selection;\n      });\n      $scope.cropMode = false;\n      $modalInstance.close(imageData);\n    };\n\n    $scope.saveAndNext = function () {\n      var ratio = $scope.selectedCrop;\n      this.save(ratio).then(function (success) {\n        var ratio = success.data[0];\n        var selection = success.data[1];\n        $scope.image.selections[ratio] = selection;\n\n        var nextRatioIndex = ($scope.ratios.indexOf(ratio) + 1) % $scope.ratios.length;\n\n        $scope.selectCrop($scope.ratios[nextRatioIndex]);\n      });\n    };\n\n  });\n","'use strict';\n\nangular.module('BettyCropper')\n  .factory('openImageCropModal', function ($modal) {\n    var openImageCropModal = function (imageData, ratios) {\n\n      return $modal.open({\n        templateUrl: 'shared/bettycropper/image-crop-modal.html',\n        controller: 'ImageCropModalCtrl',\n        resolve: {\n          imageData: function () { return imageData; },\n          ratios: function () { return ratios || false; }\n        },\n        backdrop: 'static'\n      }).result;\n\n    };\n\n    return openImageCropModal;\n  });\n","'use strict';\n\nangular.module('videoHub')\n  .service('CurrentUser', function EditorItems($http, $q) {\n\n    var userDefer = $q.defer(),\n      $userPromise = userDefer.promise;\n\n    this.data = [];\n\n    var self = this;\n    this.getItems = function() {\n      $http.get('me').then(function(response) {\n        self.data = response.data;\n        userDefer.resolve(response.data);\n      });\n    };\n\n    this.getItems();\n\n    /**\n     * Get promise that resolves when user data is populated.\n     */\n    this.$retrieveData = function() {\n      return $userPromise;\n    };\n\n    /**\n     * Create a simplified version of this user for storage.\n     */\n    this.$simplified = function() {\n\n      return $userPromise.then(function(user) {\n\n        var displayName = user.first_name && user.last_name ?\n          user.first_name + ' ' + user.last_name :\n          (user.email || user.username);\n\n        return {\n          id: user.id,\n          displayName: displayName\n        };\n\n      });\n\n    };\n\n  });\n","'use strict';\n\nangular.module('videoHub')\n  .directive('listNavBar', function() {\n    return {\n        'restrict': 'E',\n        'templateUrl': 'shared/listnavbar/listnavbar.html',\n        'controller': function($scope, $rootScope, logoUrl, $location, CurrentUser) {\n            $scope.logoUrl = logoUrl;\n            CurrentUser.$simplified().then(function(data){\n              $scope.currentUserName = data.displayName;\n            });\n\n        }\n    };\n  });\n","'use strict';\n\nangular.module('videoHub')\n  .directive('detailsNavBar', function() {\n    return {\n        'restrict': 'E',\n        'templateUrl': 'shared/detailsnavbar/detailsnavbar.html',\n        'transclude': true,\n        'controller': function($scope, $rootScope, logoUrl, $location, CurrentUser) {\n            $scope.logoUrl = logoUrl;\n            CurrentUser.$simplified().then(function(data){\n              $scope.currentUserName = data.displayName;\n            });\n        }\n    };\n  });\n","'use strict';\nangular.module('videoHub')\n  .directive('tagsAutocomplete', function($injector) {\n    return {\n      templateUrl: 'shared/tags-autocomplete/tags-autocomplete.html',\n      scope: {\n        'items': '=',\n        'service': '@service',\n        'labelAttr': '@',\n        'placeholderText': '@'\n      },\n      controller: function($scope, AlertService) {\n        //Inject service based on provided value\n        var service = $injector.get($scope.service);\n\n        $scope.fetchItemsThatMatchSearch = function() {\n          if (_.isEmpty($scope.search) || $scope.search.length < 4) {\n            $scope.currentItems = [];\n          } else {\n            $scope.tagsAreBeingFetchedFromTheServer = true;\n            AlertService.info('Tags are being fetched from the server, please wait.', false);\n            service.getList({\n              'q': $scope.search\n            }).then($scope.updateCurrentItemsAndDisplayDropdown,\n              function() {\n                AlertService.error('Somethign went wrong. Please contact your friendly sysadmin', true);\n              });\n          }\n        };\n\n        $scope.updateCurrentItemsAndDisplayDropdown = function(data) {\n          $scope.tagsAreBeingFetchedFromTheServer = false;\n          AlertService.success('Tags successfully fetched', true);\n          if (!_.isUndefined(data)) {\n            var currentItemsIds = _.pluck($scope.items, 'id');\n            data = _.reject(data, function(item) {\n              return _.contains(currentItemsIds, item.id);\n            });\n            $scope.currentItems = data;\n          } else {\n            $scope.currentItems = null;\n          }\n        };\n\n        $scope.clearSearch = function() {\n          $scope.search = '';\n          $scope.currentItems = [];\n          $scope.fetchItemsThatMatchSearch();\n          $scope.selectedElement = -1;\n        };\n\n        $scope.selectedElement = -1;\n        $scope.controlSelectedElementWithKeyboard = function(event) {\n          var keyCode = event.keyCode;\n          if (!_.isEmpty($scope.search)) {\n            var lastIndexOfCurrentItems = $scope.currentItems.length - 1;\n            switch (keyCode) {\n              case 27: // ESC\n                $scope.clearSearch();\n                break;\n              case 40: // DOWN\n                $scope.selectedElement = $scope.selectedElement >= lastIndexOfCurrentItems ?\n                  0 :\n                  $scope.selectedElement + 1;\n                break;\n              case 38: // UP\n                $scope.selectedElement = $scope.selectedElement <= 0 ?\n                  lastIndexOfCurrentItems :\n                  $scope.selectedElement - 1;\n                break;\n              case 13: // RETURN\n                if (!$scope.tagsAreBeingFetchedFromTheServer) {\n                  $scope.addItem($scope.currentItems[$scope.selectedElement]);\n                  $scope.selectedElement = -1;\n                }\n                break;\n              default:\n                return;\n            }\n          }\n\n        };\n\n        $scope.addItem = function(item) {\n          if (_.isUndefined(item)) {\n            item = {\n              'name': $scope.search\n            };\n            var isCurrentTagInCurrentItemsPredicate = _.matches(item);\n            var currentObjectFetchedFromCurrentItems = _.find($scope.currentItems, isCurrentTagInCurrentItemsPredicate);\n            if (currentObjectFetchedFromCurrentItems) {\n              $scope.items.push(currentObjectFetchedFromCurrentItems);\n            } else {\n              AlertService.info('Saving new tag...', false);\n              service.post(item).then(function(data) {\n                $scope.items.push(data);\n                $scope.clearSearch();\n                AlertService.success('New tag saved', true);\n              }, function() {\n                AlertService.error('Something went wrong. Plase contact your friendly sysadmin.', true);\n              });\n            }\n          } else {\n            $scope.items.push(item);\n          }\n          $scope.clearSearch();\n        };\n\n        $scope.removeItem = function(itemToBeRemovedFromArray) {\n          $scope.items = _.reject($scope.items, function(item) {\n            return item.id === itemToBeRemovedFromArray.id;\n          });\n        };\n      }\n    };\n  });\n","'use strict';\nangular.module('videoHub')\n  .directive('articleTools', [function() {\n    return {\n      replace: true,\n      transclude: true,\n      templateUrl: 'shared/articletools/articletools.html',\n    };\n  }]);\n"]}